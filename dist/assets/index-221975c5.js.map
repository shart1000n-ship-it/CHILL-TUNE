{"version":3,"mappings":"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","names":["f","require$$0","k","Symbol","for","l","m","Object","prototype","hasOwnProperty","n","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","ReactCurrentOwner","p","key","ref","__self","__source","q","c","a","g","b","d","e","h","call","defaultProps","$$typeof","type","props","_owner","current","reactJsxRuntime_production_min","jsx","jsxs","jsxRuntimeModule","exports","client","createRoot","hydrateRoot","PopStateEventType","createBrowserHistory","options","getLocation","createHref2","validateLocation","window","window2","document","defaultView","v5Compat","globalHistory","history","action","listener","index","getIndex","replaceState","state","idx","handlePop","nextIndex","delta","location","push","to","createLocation","historyState","getHistoryState","url","createHref","pushState","error","DOMException","name","assign","replace2","createURL","isAbsolute","base","origin","href","invariant","createPath","replace","startsWith","URL","createBrowserURLImpl","listen","fn","Error","addEventListener","removeEventListener","encodeLocation","pathname","search","hash","go","getUrlBasedHistory","usr","value","message","warning","cond","console","warn","parsePath","Math","random","toString","substring","charAt","path","parsedPath","hashIndex","indexOf","searchIndex","matchRoutes","routes","locationArg","basename","allowPartial","stripBasename","branches","flattenRoutes","sort","score","siblings","length","slice","every","i","compareIndexes","routesMeta","map","meta","childrenIndex","rankRouteBranches","matches","decoded","decodePath","matchRouteBranch","matchRoutesImpl","parentsMeta","parentPath","_hasParentOptionalSegments","flattenRoute","route","hasParentOptionalSegments","relativePath","caseSensitive","joinPaths","concat","children","computeScore","forEach","_a","includes","exploded","explodeOptionalSegments","segments","split","first","rest","isOptional","endsWith","required","restExploded","join","result","subpath","paramRe","dynamicSegmentValue","indexRouteValue","emptySegmentValue","staticSegmentValue","splatPenalty","isSplat","s","initialScore","some","filter","reduce","segment","test","branch","matchedParams","matchedPathname","end","remainingPathname","match","matchPath","params","pathnameBase","normalizePathname","pattern","matcher","compiledParams","regexpSource","_","paramName","RegExp","compilePath","captureGroups","memo2","splatValue","v","decodeURIComponent","toLowerCase","startIndex","nextChar","getInvalidPathError","char","field","dest","JSON","stringify","getResolveToMatches","pathMatches","getPathContributingMatches","resolveTo","toArg","routePathnames","locationPathname","isPathRelative","from","isEmptyPath","toPathname","routePathnameIndex","toSegments","shift","fromPathname","pop","resolvePathname","normalizeSearch","normalizeHash","resolvePath","hasExplicitTrailingSlash","hasCurrentTrailingSlash","paths","validMutationMethodsArr","Set","validRequestMethodsArr","DataRouterContext","React.createContext","displayName","DataRouterStateContext","createContext","ViewTransitionContext","isTransitioning","Map","NavigationContext","LocationContext","RouteContext","outlet","isDataRoute","RouteErrorContext","useInRouterContext","React2.useContext","useContext","useLocation","navigateEffectWarning","useIsomorphicLayoutEffect","cb","static","React2.useLayoutEffect","useLayoutEffect","useNavigate","router","hookName","ctx","getDataRouterConsoleError","useDataRouterContext","id","useCurrentRouteId","activeRef","React2.useRef","React2.useCallback","useCallback","async","navigate","fromRouteId","useNavigateStable","dataRouterContext","navigator","routePathnamesJson","parse","relative","useNavigateUnstable","useParams","routeMatch","useResolvedPath","React2.useMemo","useMemo","useRoutesImpl","dataRouterState","future","parentMatches","parentParams","parentPathname","parentPathnameBase","parentRoute","warningOnce","locationFromContext","parsedLocationArg","parentSegments","element","Component","lazy","renderedMatches","errors","initialized","errorIndex","findIndex","keys","min","renderFallback","fallbackIndex","HydrateFallback","hydrateFallbackElement","loaderData","errors2","needsToRunLoader","loader","reduceRight","shouldRenderHydrateFallback","errorElement","defaultErrorElement","matches2","getChildren","reactExports","createElement","RenderedRoute","routeContext","ErrorBoundary","RenderErrorBoundary","revalidation","component","_renderMatches","Provider","navigationType","DefaultErrorComponent","useDataRouterState","routeId","useRouteError","status","statusText","internal","isRouteErrorResponse","stack","lightgrey","preStyles","padding","backgroundColor","codeStyles","devInfo","React2.createElement","React2.Fragment","style","Fragment","fontStyle","React2.createContext","React2.Component","constructor","super","this","getDerivedStateFromError","getDerivedStateFromProps","componentDidCatch","errorInfo","render","staticContext","_deepestRenderedBoundaryId","useRouteContext","thisRoute","alreadyWarned","Navigate","isStatic","React3.useContext","jsonPath","React3.useEffect","Route","Router","basenameProp","locationProp","staticProp","navigationContext","React3.useMemo","locationContext","trailingPathname","React3.createElement","Routes","createRoutesFromChildren","React3.Children","React3.isValidElement","treePath","React3.Fragment","apply","hasErrorBoundary","shouldRevalidate","handle","React3.memo","memo","defaultMethod","defaultEncType","isHtmlElement","object","tagName","_formDataSupportsSubmitter","supportedFormEncTypes","getFormEncType","encType","has","getFormSubmissionInfo","target","method","formData","body","attr","getAttribute","FormData","isButtonElement","isInputElement","form","isFormDataSubmitterSupported","prefix","append","invariant2","loadRouteModule","routeModulesCache","routeModule","__vitePreload","import","module","__reactRouterContext","isSpaMode","reload","Promise","isHtmlLinkDescriptor","rel","imageSrcSet","imageSizes","getKeyedPrefetchLinks","manifest","routeModules","descriptors","preloads","set","preloadsSet","deduped","descriptor","page","as","obj","sorted","sortKeys","add","link","dedupeLinkDescriptors","all","mod","links","flat","getNewMatchesForLinks","nextMatches","currentMatches","mode","isNew","matchPathChanged","manifestRoute","hasLoader","routeChoice","currentUrl","currentParams","nextUrl","nextParams","defaultShouldRevalidate","getModuleLinkHrefs","includeHydrateFallback","hrefs","clientActionModule","clientLoaderModule","hydrateFallbackModule","imports","useDataRouterContext2","context","React8.useContext","getOwnPropertyNames","FrameworkContext","React8.createContext","useFrameworkContext","composeEventHandlers","theirHandler","ourHandler","event","defaultPrevented","PrefetchPageLinks","linkProps","React8.useMemo","React8.createElement","PrefetchPageLinksImpl","useDataRouterStateContext","newMatchesForData","newMatchesForAssets","dataHrefs","routesParams","foundOptOutRoute","m2","hasClientLoader","size","reqUrl","extension","singleFetchUrl","searchParams","moduleHrefs","keyedPrefetchLinks","setKeyedPrefetchLinks","React8.useState","useState","React8.useEffect","interrupted","then","useKeyedPrefetchLinks","React8.Fragment","nonce","mergeRefs","refs","isBrowser","__reactRouterVersion","BrowserRouter","historyRef","React10.useRef","setStateImpl","React10.useState","setState","React10.useCallback","newState","React10.startTransition","ABSOLUTE_URL_REGEX2","Link","React10.forwardRef","forwardRef","onClick","discover","prefetch","reloadDocument","preventScrollReset","viewTransition","forwardedRef","absoluteHref","React10.useContext","isExternal","targetUrl","protocol","joinedPathname","useHref","shouldPrefetch","prefetchRef","prefetchHandlers","theirElementProps","frameworkContext","maybePrefetch","setMaybePrefetch","setShouldPrefetch","onFocus","onBlur","onMouseEnter","onMouseLeave","onTouchStart","React8.useRef","observer","IntersectionObserver","entries","entry","isIntersecting","threshold","observe","disconnect","setTimeout","clearTimeout","setIntent","cancelIntent","usePrefetchBehavior","internalOnClick","replaceProp","button","metaKey","altKey","ctrlKey","shiftKey","isModifiedEvent","shouldProcessLinkClick","preventDefault","useLinkClickHandler","React10.createElement","React10.Fragment","useDataRouterContext3","getDataRouterConsoleError2","ariaCurrentProp","className","classNameProp","styleProp","routerState","vtContext","currentPath","currentLocation","nextPath","nextLocation","useViewTransitionState","nextLocationPathname","navigation","endSlashPosition","isActive","isPending","renderProps","ariaCurrent","Boolean","fetcherKey","onSubmit","submit","currentRouteId","getUniqueFetcherId","fetch","formMethod","formEncType","flushSync","useSubmit","formAction","URLSearchParams","indexValues","getAll","delete","qs","useFormAction","submitter","nativeEvent","submitMethod","currentTarget","fetcherId","String","AuthContext","useAuth","AuthProvider","user","setUser","loading","setLoading","useEffect","savedUser","localStorage","getItem","userData","removeItem","login","email","password","resolve","mockUser","username","firstName","lastName","avatar","bio","graduationYear","school","major","isVerified","createdAt","Date","profileBackground","preview","category","profileMusic","title","artist","musicAutoPlay","fontTheme","description","fontFamily","role","rank","topFriends","setItem","register","newUser","now","logout","updateProfile","updatedUser","NotificationContext","useNotifications","NotificationProvider","notifications","setNotifications","unreadCount","isRead","addNotification","notificationData","newNotification","timestamp","prev","mockNotifications","userId","userAvatar","postId","actionUrl","commentId","markAsRead","notificationId","notification","markAllAsRead","deleteNotification","clearAllNotifications","checkForMentions","content","mentions","mention","addReactionNotification","reactionType","addCommentNotification","Navbar","isMenuOpen","setIsMenuOpen","showNotifications","setShowNotifications","jsxRuntimeExports","src","alt","toLocaleTimeString","hour","minute","fill","stroke","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","Home","icon","feature","ProfileContext","useProfile","ProfileProvider","profileMedia","setProfileMedia","profileSettings","setProfileSettings","textColor","textGlowColor","textGlowIntensity","neonAccentColor","neonGlowIntensity","textShadow","neonBorder","borderColor","profileStats","setProfileStats","totalPhotos","totalVideos","totalPosts","followers","following","profileViews","lastActive","isEditing","setIsEditing","loadProfileData","mockMedia","thumbnail","caption","isPublic","likes","comments","tags","uploadMedia","file","newMedia","createObjectURL","deleteMedia","mediaId","media","find","prevStats","updateProfileSettings","settings","setProfilePicture","profilePicture","setBackgroundImage","backgroundImage","toggleEditMode","shareToFeed","log","getPresetColorSchemes","colors","getPresetNeonEffects","getGlobalTextStyle","color","customFont","EmojiPicker","isOpen","onClose","onSelectEmoji","Smileys","Gestures","Hearts","Objects","Activities","Food","Animals","Nature","Symbols","Flags","emojis","emoji","handleEmojiClick","MediaUpload","onUpload","onCancel","uploadType","setUploadType","uploadCaption","setUploadCaption","isUploading","setIsUploading","dragActive","setDragActive","fileInputRef","useRef","videoInputRef","handleFileUpload","files","handleDrag","stopPropagation","handleFileSelect","click","_b","onDragEnter","onDragLeave","onDragOver","onDrop","dataTransfer","disabled","accept","onChange","placeholder","rows","GifPicker","onSelectGif","searchQuery","setSearchQuery","gifs","setGifs","isLoading","setIsLoading","selectedCategory","setSelectedCategory","mockGifs","trending","funny","love","sports","animals","food","music","gaming","loadGifs","handleSearch","trim","filteredGifs","values","gif","onKeyPress","handleGifSelect","Profile","showUploadModal","setShowUploadModal","showSettingsModal","setShowSettingsModal","showMediaModal","setShowMediaModal","selectedMedia","setSelectedMedia","activeTab","setActiveTab","newPost","setNewPost","showEmojiPicker","setShowEmojiPicker","showGifPicker","setShowGifPicker","selectedGif","setSelectedGif","showPhotoEditor","setShowPhotoEditor","editingPhoto","setEditingPhoto","photoScale","setPhotoScale","photoRotation","setPhotoRotation","photoPosition","setPhotoPosition","x","y","userPosts","setUserPosts","mockPosts","setMockPosts","showCommentInput","setShowCommentInput","newComment","setNewComment","showReplyInput","setShowReplyInput","newReply","setNewReply","showUsernameModal","setShowUsernameModal","newUsername","setNewUsername","isChangingUsername","setIsChangingUsername","directMessages","setDirectMessages","selectedDM","setSelectedDM","newDM","setNewDM","showDMEmojiPicker","setShowDMEmojiPicker","showDMGifPicker","setShowDMGifPicker","showMediaUpload","setShowMediaUpload","groupMessages","setGroupMessages","showCreateGroup","setShowCreateGroup","newGroupName","setNewGroupName","selectedGroupMembers","setSelectedGroupMembers","showCreateMessage","setShowCreateMessage","newMessageRecipient","setNewMessageRecipient","newMessageContent","setNewMessageContent","showNewMessageEmojiPicker","setShowNewMessageEmojiPicker","showNewMessageGifPicker","setShowNewMessageGifPicker","newMessageMedia","setNewMessageMedia","commentReactions","setCommentReactions","userCommentReactions","setUserCommentReactions","profileVideo","setProfileVideo","showVideoUploadModal","setShowVideoUploadModal","youtubeUrl","setYoutubeUrl","videoFile","setVideoFile","get","postElement","getElementById","scrollIntoView","behavior","block","border","borderRadius","React","initialMockPosts","gifUrl","replies","getUserPosts","formatTimestamp","diff","getTime","minutes","floor","hours","days","weeks","months","years","mockDMs","lastMessage","unread","mockGroups","members","getUserFriends","isOnline","lastSeen","totalFriends","handleChangeUsername","alert","handleCommentReaction","newReactions","prevReactions","newReactionCounts","max","extractYoutubeVideoId","getTextStyle","getNeonBorderStyle","boxShadow","backgroundSize","backgroundPosition","backgroundRepeat","friend","frameBorder","allow","allowFullScreen","autoPlay","muted","loop","playsInline","controls","video","parentElement","previousElementSibling","innerHTML","label","count","tab","handlePhotoEdit","handleShareToFeed","toLocaleDateString","newPostObj","post","confirm","deletePost","comment","prevPosts","handleAddComment","_c","_d","_e","_f","_g","_h","reply","handleAddReply","dm","group","stat","maxLength","scheme","effect","font","toFixed","step","parseFloat","checked","height","transform","transition","parseInt","recipient","newVideo","handleVideoUpload","htmlFor","videoId","Feed","posts","setPosts","showComments","setShowComments","commentText","setCommentText","replyText","setReplyText","selectedFile","setSelectedFile","previewUrl","setPreviewUrl","date","diffInMinutes","engagement","topic","toISOString","handleLike","toggleComments","text","handleComment","handleReply","ChatContext","useChat","ChatProvider","socket","setSocket","messages","setMessages","rooms","setRooms","activeRoom","setActiveRoom","isConnected","setIsConnected","participants","memberCount","emit","data","newMessage","senderId","senderName","senderAvatar","roomId","on","close","joinRoom","room","r","leaveRoom","sendMessage","createRoom","roomData","newRoom","ChatRooms","selectedRoom","setSelectedRoom","showCreateRoom","setShowCreateRoom","newRoomData","setNewRoomData","categories","Array","filteredRooms","filtered","handleJoinRoom","getRoomIcon","getRoomTypeColor","getCategoryIcon","General","Sports","Music","Gaming","Entertainment","Lifestyle","Technology","Business","Education","Hobbies","Trending","Special","cat","toUpperCase","roomCount","totalMembers","sum","toLocaleString","AlumniRoom","setNewMessage","showVerification","setShowVerification","verificationForm","setVerificationForm","isVerifying","setIsVerifying","verificationSuccess","setVerificationSuccess","alumniMembers","setAlumniMembers","localMessages","setLocalMessages","isInRoom","setIsInRoom","isVerifiedAlumni","mockMembers","handleChange","formatTimeAgo","messageObj","newMessages","member","getFullYear","VideoCall","propRoomId","userName","propUserName","onLeaveRoom","urlRoomId","isVideoEnabled","setIsVideoEnabled","isAudioEnabled","setIsAudioEnabled","isScreenSharing","setIsScreenSharing","isChatOpen","setIsChatOpen","chatMessages","setChatMessages","showBackgroundPicker","setShowBackgroundPicker","selectedBackground","setSelectedBackground","customBackgroundUrl","setCustomBackgroundUrl","uploadedImage","setUploadedImage","setParticipants","backgroundOptions","localVideoRef","remoteVideoRef","chatContainerRef","localStreamRef","screenStreamRef","cleanupStreams","getTracks","track","stop","kind","srcObject","gc","initializeVideo","stream","mediaDevices","getUserMedia","width","ideal","facingMode","audio","echoCancellation","noiseSuppression","autoGainControl","play","catch","audioStream","audioError","toggleScreenShare","screenStream","getDisplayMedia","displaySurface","getVideoTracks","handleBackgroundChange","backgroundId","bg","reader","FileReader","onload","readAsDataURL","background","getBackgroundStyle","participant","msg","scrollTop","scrollHeight","videoTrack","enabled","audioTrack","getAudioTracks","Marketplace","products","setProducts","filteredProducts","setFilteredProducts","cart","setCart","showCart","setShowCart","sortBy","setSortBy","mockProducts","price","originalPrice","image","seller","rating","reviews","sold","isHot","discount","product","tag","removeFromCart","productId","prevCart","item","updateQuantity","quantity","getCartItemCount","total","addToCart","Leaderboard","leaderboard","setLeaderboard","weeklyWinners","setWeeklyWinners","timeFrame","setTimeFrame","loadLeaderboard","mockLeaderboard","totalScore","badge","isCurrentUser","loadWeeklyWinners","position","prize","getRoleBadge","getRankDisplay","winner","getTimeFrameLabel","Login","setEmail","setPassword","setError","err","autoComplete","Register","setFormData","confirmPassword","currentYear","graduationYears","year","App","ProtectedRoute","VideoCallWithParams","VideoCallDefault","ReactDOM","StrictMode"],"sources":["../../node_modules/react/cjs/react-jsx-runtime.production.min.js","../../node_modules/react/jsx-runtime.js","../../node_modules/react-dom/client.js","../../node_modules/react-router/dist/development/chunk-UH6JLGW7.mjs","../../src/contexts/AuthContext.tsx","../../src/contexts/NotificationContext.tsx","../../src/components/Navbar.tsx","../../src/components/Home.tsx","../../src/contexts/ProfileContext.tsx","../../src/components/EmojiPicker.tsx","../../src/components/MediaUpload.tsx","../../src/components/GifPicker.tsx","../../src/components/Profile.tsx","../../src/components/Feed.tsx","../../src/contexts/ChatContext.tsx","../../src/components/ChatRooms.tsx","../../src/components/AlumniRoom.tsx","../../src/components/VideoCall.tsx","../../src/components/Marketplace.tsx","../../src/components/Leaderboard.tsx","../../src/components/Login.tsx","../../src/components/Register.tsx","../../src/App.tsx","../../src/main.tsx"],"sourcesContent":["/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","'use strict';\n\nvar m = require('react-dom');\nif (process.env.NODE_ENV === 'production') {\n  exports.createRoot = m.createRoot;\n  exports.hydrateRoot = m.hydrateRoot;\n} else {\n  var i = m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n  exports.createRoot = function(c, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.createRoot(c, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n  exports.hydrateRoot = function(c, h, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.hydrateRoot(c, h, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n}\n","/**\n * react-router v7.8.1\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nvar __typeError = (msg) => {\n  throw TypeError(msg);\n};\nvar __accessCheck = (obj, member, msg) => member.has(obj) || __typeError(\"Cannot \" + msg);\nvar __privateGet = (obj, member, getter) => (__accessCheck(obj, member, \"read from private field\"), getter ? getter.call(obj) : member.get(obj));\nvar __privateAdd = (obj, member, value) => member.has(obj) ? __typeError(\"Cannot add the same private member more than once\") : member instanceof WeakSet ? member.add(obj) : member.set(obj, value);\n\n// lib/router/history.ts\nvar Action = /* @__PURE__ */ ((Action2) => {\n  Action2[\"Pop\"] = \"POP\";\n  Action2[\"Push\"] = \"PUSH\";\n  Action2[\"Replace\"] = \"REPLACE\";\n  return Action2;\n})(Action || {});\nvar PopStateEventType = \"popstate\";\nfunction createMemoryHistory(options = {}) {\n  let { initialEntries = [\"/\"], initialIndex, v5Compat = false } = options;\n  let entries;\n  entries = initialEntries.map(\n    (entry, index2) => createMemoryLocation(\n      entry,\n      typeof entry === \"string\" ? null : entry.state,\n      index2 === 0 ? \"default\" : void 0\n    )\n  );\n  let index = clampIndex(\n    initialIndex == null ? entries.length - 1 : initialIndex\n  );\n  let action = \"POP\" /* Pop */;\n  let listener = null;\n  function clampIndex(n) {\n    return Math.min(Math.max(n, 0), entries.length - 1);\n  }\n  function getCurrentLocation() {\n    return entries[index];\n  }\n  function createMemoryLocation(to, state = null, key) {\n    let location = createLocation(\n      entries ? getCurrentLocation().pathname : \"/\",\n      to,\n      state,\n      key\n    );\n    warning(\n      location.pathname.charAt(0) === \"/\",\n      `relative pathnames are not supported in memory history: ${JSON.stringify(\n        to\n      )}`\n    );\n    return location;\n  }\n  function createHref2(to) {\n    return typeof to === \"string\" ? to : createPath(to);\n  }\n  let history = {\n    get index() {\n      return index;\n    },\n    get action() {\n      return action;\n    },\n    get location() {\n      return getCurrentLocation();\n    },\n    createHref: createHref2,\n    createURL(to) {\n      return new URL(createHref2(to), \"http://localhost\");\n    },\n    encodeLocation(to) {\n      let path = typeof to === \"string\" ? parsePath(to) : to;\n      return {\n        pathname: path.pathname || \"\",\n        search: path.search || \"\",\n        hash: path.hash || \"\"\n      };\n    },\n    push(to, state) {\n      action = \"PUSH\" /* Push */;\n      let nextLocation = createMemoryLocation(to, state);\n      index += 1;\n      entries.splice(index, entries.length, nextLocation);\n      if (v5Compat && listener) {\n        listener({ action, location: nextLocation, delta: 1 });\n      }\n    },\n    replace(to, state) {\n      action = \"REPLACE\" /* Replace */;\n      let nextLocation = createMemoryLocation(to, state);\n      entries[index] = nextLocation;\n      if (v5Compat && listener) {\n        listener({ action, location: nextLocation, delta: 0 });\n      }\n    },\n    go(delta) {\n      action = \"POP\" /* Pop */;\n      let nextIndex = clampIndex(index + delta);\n      let nextLocation = entries[nextIndex];\n      index = nextIndex;\n      if (listener) {\n        listener({ action, location: nextLocation, delta });\n      }\n    },\n    listen(fn) {\n      listener = fn;\n      return () => {\n        listener = null;\n      };\n    }\n  };\n  return history;\n}\nfunction createBrowserHistory(options = {}) {\n  function createBrowserLocation(window2, globalHistory) {\n    let { pathname, search, hash } = window2.location;\n    return createLocation(\n      \"\",\n      { pathname, search, hash },\n      // state defaults to `null` because `window.history.state` does\n      globalHistory.state && globalHistory.state.usr || null,\n      globalHistory.state && globalHistory.state.key || \"default\"\n    );\n  }\n  function createBrowserHref(window2, to) {\n    return typeof to === \"string\" ? to : createPath(to);\n  }\n  return getUrlBasedHistory(\n    createBrowserLocation,\n    createBrowserHref,\n    null,\n    options\n  );\n}\nfunction createHashHistory(options = {}) {\n  function createHashLocation(window2, globalHistory) {\n    let {\n      pathname = \"/\",\n      search = \"\",\n      hash = \"\"\n    } = parsePath(window2.location.hash.substring(1));\n    if (!pathname.startsWith(\"/\") && !pathname.startsWith(\".\")) {\n      pathname = \"/\" + pathname;\n    }\n    return createLocation(\n      \"\",\n      { pathname, search, hash },\n      // state defaults to `null` because `window.history.state` does\n      globalHistory.state && globalHistory.state.usr || null,\n      globalHistory.state && globalHistory.state.key || \"default\"\n    );\n  }\n  function createHashHref(window2, to) {\n    let base = window2.document.querySelector(\"base\");\n    let href = \"\";\n    if (base && base.getAttribute(\"href\")) {\n      let url = window2.location.href;\n      let hashIndex = url.indexOf(\"#\");\n      href = hashIndex === -1 ? url : url.slice(0, hashIndex);\n    }\n    return href + \"#\" + (typeof to === \"string\" ? to : createPath(to));\n  }\n  function validateHashLocation(location, to) {\n    warning(\n      location.pathname.charAt(0) === \"/\",\n      `relative pathnames are not supported in hash history.push(${JSON.stringify(\n        to\n      )})`\n    );\n  }\n  return getUrlBasedHistory(\n    createHashLocation,\n    createHashHref,\n    validateHashLocation,\n    options\n  );\n}\nfunction invariant(value, message) {\n  if (value === false || value === null || typeof value === \"undefined\") {\n    throw new Error(message);\n  }\n}\nfunction warning(cond, message) {\n  if (!cond) {\n    if (typeof console !== \"undefined\") console.warn(message);\n    try {\n      throw new Error(message);\n    } catch (e) {\n    }\n  }\n}\nfunction createKey() {\n  return Math.random().toString(36).substring(2, 10);\n}\nfunction getHistoryState(location, index) {\n  return {\n    usr: location.state,\n    key: location.key,\n    idx: index\n  };\n}\nfunction createLocation(current, to, state = null, key) {\n  let location = {\n    pathname: typeof current === \"string\" ? current : current.pathname,\n    search: \"\",\n    hash: \"\",\n    ...typeof to === \"string\" ? parsePath(to) : to,\n    state,\n    // TODO: This could be cleaned up.  push/replace should probably just take\n    // full Locations now and avoid the need to run through this flow at all\n    // But that's a pretty big refactor to the current test suite so going to\n    // keep as is for the time being and just let any incoming keys take precedence\n    key: to && to.key || key || createKey()\n  };\n  return location;\n}\nfunction createPath({\n  pathname = \"/\",\n  search = \"\",\n  hash = \"\"\n}) {\n  if (search && search !== \"?\")\n    pathname += search.charAt(0) === \"?\" ? search : \"?\" + search;\n  if (hash && hash !== \"#\")\n    pathname += hash.charAt(0) === \"#\" ? hash : \"#\" + hash;\n  return pathname;\n}\nfunction parsePath(path) {\n  let parsedPath = {};\n  if (path) {\n    let hashIndex = path.indexOf(\"#\");\n    if (hashIndex >= 0) {\n      parsedPath.hash = path.substring(hashIndex);\n      path = path.substring(0, hashIndex);\n    }\n    let searchIndex = path.indexOf(\"?\");\n    if (searchIndex >= 0) {\n      parsedPath.search = path.substring(searchIndex);\n      path = path.substring(0, searchIndex);\n    }\n    if (path) {\n      parsedPath.pathname = path;\n    }\n  }\n  return parsedPath;\n}\nfunction getUrlBasedHistory(getLocation, createHref2, validateLocation, options = {}) {\n  let { window: window2 = document.defaultView, v5Compat = false } = options;\n  let globalHistory = window2.history;\n  let action = \"POP\" /* Pop */;\n  let listener = null;\n  let index = getIndex();\n  if (index == null) {\n    index = 0;\n    globalHistory.replaceState({ ...globalHistory.state, idx: index }, \"\");\n  }\n  function getIndex() {\n    let state = globalHistory.state || { idx: null };\n    return state.idx;\n  }\n  function handlePop() {\n    action = \"POP\" /* Pop */;\n    let nextIndex = getIndex();\n    let delta = nextIndex == null ? null : nextIndex - index;\n    index = nextIndex;\n    if (listener) {\n      listener({ action, location: history.location, delta });\n    }\n  }\n  function push(to, state) {\n    action = \"PUSH\" /* Push */;\n    let location = createLocation(history.location, to, state);\n    if (validateLocation) validateLocation(location, to);\n    index = getIndex() + 1;\n    let historyState = getHistoryState(location, index);\n    let url = history.createHref(location);\n    try {\n      globalHistory.pushState(historyState, \"\", url);\n    } catch (error) {\n      if (error instanceof DOMException && error.name === \"DataCloneError\") {\n        throw error;\n      }\n      window2.location.assign(url);\n    }\n    if (v5Compat && listener) {\n      listener({ action, location: history.location, delta: 1 });\n    }\n  }\n  function replace2(to, state) {\n    action = \"REPLACE\" /* Replace */;\n    let location = createLocation(history.location, to, state);\n    if (validateLocation) validateLocation(location, to);\n    index = getIndex();\n    let historyState = getHistoryState(location, index);\n    let url = history.createHref(location);\n    globalHistory.replaceState(historyState, \"\", url);\n    if (v5Compat && listener) {\n      listener({ action, location: history.location, delta: 0 });\n    }\n  }\n  function createURL(to) {\n    return createBrowserURLImpl(to);\n  }\n  let history = {\n    get action() {\n      return action;\n    },\n    get location() {\n      return getLocation(window2, globalHistory);\n    },\n    listen(fn) {\n      if (listener) {\n        throw new Error(\"A history only accepts one active listener\");\n      }\n      window2.addEventListener(PopStateEventType, handlePop);\n      listener = fn;\n      return () => {\n        window2.removeEventListener(PopStateEventType, handlePop);\n        listener = null;\n      };\n    },\n    createHref(to) {\n      return createHref2(window2, to);\n    },\n    createURL,\n    encodeLocation(to) {\n      let url = createURL(to);\n      return {\n        pathname: url.pathname,\n        search: url.search,\n        hash: url.hash\n      };\n    },\n    push,\n    replace: replace2,\n    go(n) {\n      return globalHistory.go(n);\n    }\n  };\n  return history;\n}\nfunction createBrowserURLImpl(to, isAbsolute = false) {\n  let base = \"http://localhost\";\n  if (typeof window !== \"undefined\") {\n    base = window.location.origin !== \"null\" ? window.location.origin : window.location.href;\n  }\n  invariant(base, \"No window.location.(origin|href) available to create URL\");\n  let href = typeof to === \"string\" ? to : createPath(to);\n  href = href.replace(/ $/, \"%20\");\n  if (!isAbsolute && href.startsWith(\"//\")) {\n    href = base + href;\n  }\n  return new URL(href, base);\n}\n\n// lib/router/utils.ts\nfunction unstable_createContext(defaultValue) {\n  return { defaultValue };\n}\nvar _map;\nvar unstable_RouterContextProvider = class {\n  /**\n   * Create a new `unstable_RouterContextProvider` instance\n   * @param init An optional initial context map to populate the provider with\n   */\n  constructor(init) {\n    __privateAdd(this, _map, /* @__PURE__ */ new Map());\n    if (init) {\n      for (let [context, value] of init) {\n        this.set(context, value);\n      }\n    }\n  }\n  /**\n   * Access a value from the context. If no value has been set for the context,\n   * it will return the context's `defaultValue` if provided, or throw an error\n   * if no `defaultValue` was set.\n   * @param context The context to get the value for\n   * @returns The value for the context, or the context's `defaultValue` if no\n   * value was set\n   */\n  get(context) {\n    if (__privateGet(this, _map).has(context)) {\n      return __privateGet(this, _map).get(context);\n    }\n    if (context.defaultValue !== void 0) {\n      return context.defaultValue;\n    }\n    throw new Error(\"No value found for context\");\n  }\n  /**\n   * Set a value for the context. If the context already has a value set, this\n   * will overwrite it.\n   *\n   * @param context The context to set the value for\n   * @param value The value to set for the context\n   * @returns {void}\n   */\n  set(context, value) {\n    __privateGet(this, _map).set(context, value);\n  }\n};\n_map = new WeakMap();\nvar unsupportedLazyRouteObjectKeys = /* @__PURE__ */ new Set([\n  \"lazy\",\n  \"caseSensitive\",\n  \"path\",\n  \"id\",\n  \"index\",\n  \"children\"\n]);\nfunction isUnsupportedLazyRouteObjectKey(key) {\n  return unsupportedLazyRouteObjectKeys.has(\n    key\n  );\n}\nvar unsupportedLazyRouteFunctionKeys = /* @__PURE__ */ new Set([\n  \"lazy\",\n  \"caseSensitive\",\n  \"path\",\n  \"id\",\n  \"index\",\n  \"unstable_middleware\",\n  \"children\"\n]);\nfunction isUnsupportedLazyRouteFunctionKey(key) {\n  return unsupportedLazyRouteFunctionKeys.has(\n    key\n  );\n}\nfunction isIndexRoute(route) {\n  return route.index === true;\n}\nfunction convertRoutesToDataRoutes(routes, mapRouteProperties2, parentPath = [], manifest = {}, allowInPlaceMutations = false) {\n  return routes.map((route, index) => {\n    let treePath = [...parentPath, String(index)];\n    let id = typeof route.id === \"string\" ? route.id : treePath.join(\"-\");\n    invariant(\n      route.index !== true || !route.children,\n      `Cannot specify children on an index route`\n    );\n    invariant(\n      allowInPlaceMutations || !manifest[id],\n      `Found a route id collision on id \"${id}\".  Route id's must be globally unique within Data Router usages`\n    );\n    if (isIndexRoute(route)) {\n      let indexRoute = {\n        ...route,\n        ...mapRouteProperties2(route),\n        id\n      };\n      manifest[id] = indexRoute;\n      return indexRoute;\n    } else {\n      let pathOrLayoutRoute = {\n        ...route,\n        ...mapRouteProperties2(route),\n        id,\n        children: void 0\n      };\n      manifest[id] = pathOrLayoutRoute;\n      if (route.children) {\n        pathOrLayoutRoute.children = convertRoutesToDataRoutes(\n          route.children,\n          mapRouteProperties2,\n          treePath,\n          manifest,\n          allowInPlaceMutations\n        );\n      }\n      return pathOrLayoutRoute;\n    }\n  });\n}\nfunction matchRoutes(routes, locationArg, basename = \"/\") {\n  return matchRoutesImpl(routes, locationArg, basename, false);\n}\nfunction matchRoutesImpl(routes, locationArg, basename, allowPartial) {\n  let location = typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n  let pathname = stripBasename(location.pathname || \"/\", basename);\n  if (pathname == null) {\n    return null;\n  }\n  let branches = flattenRoutes(routes);\n  rankRouteBranches(branches);\n  let matches = null;\n  for (let i = 0; matches == null && i < branches.length; ++i) {\n    let decoded = decodePath(pathname);\n    matches = matchRouteBranch(\n      branches[i],\n      decoded,\n      allowPartial\n    );\n  }\n  return matches;\n}\nfunction convertRouteMatchToUiMatch(match, loaderData) {\n  let { route, pathname, params } = match;\n  return {\n    id: route.id,\n    pathname,\n    params,\n    data: loaderData[route.id],\n    loaderData: loaderData[route.id],\n    handle: route.handle\n  };\n}\nfunction flattenRoutes(routes, branches = [], parentsMeta = [], parentPath = \"\", _hasParentOptionalSegments = false) {\n  let flattenRoute = (route, index, hasParentOptionalSegments = _hasParentOptionalSegments, relativePath) => {\n    let meta = {\n      relativePath: relativePath === void 0 ? route.path || \"\" : relativePath,\n      caseSensitive: route.caseSensitive === true,\n      childrenIndex: index,\n      route\n    };\n    if (meta.relativePath.startsWith(\"/\")) {\n      if (!meta.relativePath.startsWith(parentPath) && hasParentOptionalSegments) {\n        return;\n      }\n      invariant(\n        meta.relativePath.startsWith(parentPath),\n        `Absolute route path \"${meta.relativePath}\" nested under path \"${parentPath}\" is not valid. An absolute child route path must start with the combined path of all its parent routes.`\n      );\n      meta.relativePath = meta.relativePath.slice(parentPath.length);\n    }\n    let path = joinPaths([parentPath, meta.relativePath]);\n    let routesMeta = parentsMeta.concat(meta);\n    if (route.children && route.children.length > 0) {\n      invariant(\n        // Our types know better, but runtime JS may not!\n        // @ts-expect-error\n        route.index !== true,\n        `Index routes must not have child routes. Please remove all child routes from route path \"${path}\".`\n      );\n      flattenRoutes(\n        route.children,\n        branches,\n        routesMeta,\n        path,\n        hasParentOptionalSegments\n      );\n    }\n    if (route.path == null && !route.index) {\n      return;\n    }\n    branches.push({\n      path,\n      score: computeScore(path, route.index),\n      routesMeta\n    });\n  };\n  routes.forEach((route, index) => {\n    if (route.path === \"\" || !route.path?.includes(\"?\")) {\n      flattenRoute(route, index);\n    } else {\n      for (let exploded of explodeOptionalSegments(route.path)) {\n        flattenRoute(route, index, true, exploded);\n      }\n    }\n  });\n  return branches;\n}\nfunction explodeOptionalSegments(path) {\n  let segments = path.split(\"/\");\n  if (segments.length === 0) return [];\n  let [first, ...rest] = segments;\n  let isOptional = first.endsWith(\"?\");\n  let required = first.replace(/\\?$/, \"\");\n  if (rest.length === 0) {\n    return isOptional ? [required, \"\"] : [required];\n  }\n  let restExploded = explodeOptionalSegments(rest.join(\"/\"));\n  let result = [];\n  result.push(\n    ...restExploded.map(\n      (subpath) => subpath === \"\" ? required : [required, subpath].join(\"/\")\n    )\n  );\n  if (isOptional) {\n    result.push(...restExploded);\n  }\n  return result.map(\n    (exploded) => path.startsWith(\"/\") && exploded === \"\" ? \"/\" : exploded\n  );\n}\nfunction rankRouteBranches(branches) {\n  branches.sort(\n    (a, b) => a.score !== b.score ? b.score - a.score : compareIndexes(\n      a.routesMeta.map((meta) => meta.childrenIndex),\n      b.routesMeta.map((meta) => meta.childrenIndex)\n    )\n  );\n}\nvar paramRe = /^:[\\w-]+$/;\nvar dynamicSegmentValue = 3;\nvar indexRouteValue = 2;\nvar emptySegmentValue = 1;\nvar staticSegmentValue = 10;\nvar splatPenalty = -2;\nvar isSplat = (s) => s === \"*\";\nfunction computeScore(path, index) {\n  let segments = path.split(\"/\");\n  let initialScore = segments.length;\n  if (segments.some(isSplat)) {\n    initialScore += splatPenalty;\n  }\n  if (index) {\n    initialScore += indexRouteValue;\n  }\n  return segments.filter((s) => !isSplat(s)).reduce(\n    (score, segment) => score + (paramRe.test(segment) ? dynamicSegmentValue : segment === \"\" ? emptySegmentValue : staticSegmentValue),\n    initialScore\n  );\n}\nfunction compareIndexes(a, b) {\n  let siblings = a.length === b.length && a.slice(0, -1).every((n, i) => n === b[i]);\n  return siblings ? (\n    // If two routes are siblings, we should try to match the earlier sibling\n    // first. This allows people to have fine-grained control over the matching\n    // behavior by simply putting routes with identical paths in the order they\n    // want them tried.\n    a[a.length - 1] - b[b.length - 1]\n  ) : (\n    // Otherwise, it doesn't really make sense to rank non-siblings by index,\n    // so they sort equally.\n    0\n  );\n}\nfunction matchRouteBranch(branch, pathname, allowPartial = false) {\n  let { routesMeta } = branch;\n  let matchedParams = {};\n  let matchedPathname = \"/\";\n  let matches = [];\n  for (let i = 0; i < routesMeta.length; ++i) {\n    let meta = routesMeta[i];\n    let end = i === routesMeta.length - 1;\n    let remainingPathname = matchedPathname === \"/\" ? pathname : pathname.slice(matchedPathname.length) || \"/\";\n    let match = matchPath(\n      { path: meta.relativePath, caseSensitive: meta.caseSensitive, end },\n      remainingPathname\n    );\n    let route = meta.route;\n    if (!match && end && allowPartial && !routesMeta[routesMeta.length - 1].route.index) {\n      match = matchPath(\n        {\n          path: meta.relativePath,\n          caseSensitive: meta.caseSensitive,\n          end: false\n        },\n        remainingPathname\n      );\n    }\n    if (!match) {\n      return null;\n    }\n    Object.assign(matchedParams, match.params);\n    matches.push({\n      // TODO: Can this as be avoided?\n      params: matchedParams,\n      pathname: joinPaths([matchedPathname, match.pathname]),\n      pathnameBase: normalizePathname(\n        joinPaths([matchedPathname, match.pathnameBase])\n      ),\n      route\n    });\n    if (match.pathnameBase !== \"/\") {\n      matchedPathname = joinPaths([matchedPathname, match.pathnameBase]);\n    }\n  }\n  return matches;\n}\nfunction generatePath(originalPath, params = {}) {\n  let path = originalPath;\n  if (path.endsWith(\"*\") && path !== \"*\" && !path.endsWith(\"/*\")) {\n    warning(\n      false,\n      `Route path \"${path}\" will be treated as if it were \"${path.replace(/\\*$/, \"/*\")}\" because the \\`*\\` character must always follow a \\`/\\` in the pattern. To get rid of this warning, please change the route path to \"${path.replace(/\\*$/, \"/*\")}\".`\n    );\n    path = path.replace(/\\*$/, \"/*\");\n  }\n  const prefix = path.startsWith(\"/\") ? \"/\" : \"\";\n  const stringify2 = (p) => p == null ? \"\" : typeof p === \"string\" ? p : String(p);\n  const segments = path.split(/\\/+/).map((segment, index, array) => {\n    const isLastSegment = index === array.length - 1;\n    if (isLastSegment && segment === \"*\") {\n      const star = \"*\";\n      return stringify2(params[star]);\n    }\n    const keyMatch = segment.match(/^:([\\w-]+)(\\??)$/);\n    if (keyMatch) {\n      const [, key, optional] = keyMatch;\n      let param = params[key];\n      invariant(optional === \"?\" || param != null, `Missing \":${key}\" param`);\n      return stringify2(param);\n    }\n    return segment.replace(/\\?$/g, \"\");\n  }).filter((segment) => !!segment);\n  return prefix + segments.join(\"/\");\n}\nfunction matchPath(pattern, pathname) {\n  if (typeof pattern === \"string\") {\n    pattern = { path: pattern, caseSensitive: false, end: true };\n  }\n  let [matcher, compiledParams] = compilePath(\n    pattern.path,\n    pattern.caseSensitive,\n    pattern.end\n  );\n  let match = pathname.match(matcher);\n  if (!match) return null;\n  let matchedPathname = match[0];\n  let pathnameBase = matchedPathname.replace(/(.)\\/+$/, \"$1\");\n  let captureGroups = match.slice(1);\n  let params = compiledParams.reduce(\n    (memo2, { paramName, isOptional }, index) => {\n      if (paramName === \"*\") {\n        let splatValue = captureGroups[index] || \"\";\n        pathnameBase = matchedPathname.slice(0, matchedPathname.length - splatValue.length).replace(/(.)\\/+$/, \"$1\");\n      }\n      const value = captureGroups[index];\n      if (isOptional && !value) {\n        memo2[paramName] = void 0;\n      } else {\n        memo2[paramName] = (value || \"\").replace(/%2F/g, \"/\");\n      }\n      return memo2;\n    },\n    {}\n  );\n  return {\n    params,\n    pathname: matchedPathname,\n    pathnameBase,\n    pattern\n  };\n}\nfunction compilePath(path, caseSensitive = false, end = true) {\n  warning(\n    path === \"*\" || !path.endsWith(\"*\") || path.endsWith(\"/*\"),\n    `Route path \"${path}\" will be treated as if it were \"${path.replace(/\\*$/, \"/*\")}\" because the \\`*\\` character must always follow a \\`/\\` in the pattern. To get rid of this warning, please change the route path to \"${path.replace(/\\*$/, \"/*\")}\".`\n  );\n  let params = [];\n  let regexpSource = \"^\" + path.replace(/\\/*\\*?$/, \"\").replace(/^\\/*/, \"/\").replace(/[\\\\.*+^${}|()[\\]]/g, \"\\\\$&\").replace(\n    /\\/:([\\w-]+)(\\?)?/g,\n    (_, paramName, isOptional) => {\n      params.push({ paramName, isOptional: isOptional != null });\n      return isOptional ? \"/?([^\\\\/]+)?\" : \"/([^\\\\/]+)\";\n    }\n  ).replace(/\\/([\\w-]+)\\?(\\/|$)/g, \"(/$1)?$2\");\n  if (path.endsWith(\"*\")) {\n    params.push({ paramName: \"*\" });\n    regexpSource += path === \"*\" || path === \"/*\" ? \"(.*)$\" : \"(?:\\\\/(.+)|\\\\/*)$\";\n  } else if (end) {\n    regexpSource += \"\\\\/*$\";\n  } else if (path !== \"\" && path !== \"/\") {\n    regexpSource += \"(?:(?=\\\\/|$))\";\n  } else {\n  }\n  let matcher = new RegExp(regexpSource, caseSensitive ? void 0 : \"i\");\n  return [matcher, params];\n}\nfunction decodePath(value) {\n  try {\n    return value.split(\"/\").map((v) => decodeURIComponent(v).replace(/\\//g, \"%2F\")).join(\"/\");\n  } catch (error) {\n    warning(\n      false,\n      `The URL path \"${value}\" could not be decoded because it is a malformed URL segment. This is probably due to a bad percent encoding (${error}).`\n    );\n    return value;\n  }\n}\nfunction stripBasename(pathname, basename) {\n  if (basename === \"/\") return pathname;\n  if (!pathname.toLowerCase().startsWith(basename.toLowerCase())) {\n    return null;\n  }\n  let startIndex = basename.endsWith(\"/\") ? basename.length - 1 : basename.length;\n  let nextChar = pathname.charAt(startIndex);\n  if (nextChar && nextChar !== \"/\") {\n    return null;\n  }\n  return pathname.slice(startIndex) || \"/\";\n}\nfunction prependBasename({\n  basename,\n  pathname\n}) {\n  return pathname === \"/\" ? basename : joinPaths([basename, pathname]);\n}\nfunction resolvePath(to, fromPathname = \"/\") {\n  let {\n    pathname: toPathname,\n    search = \"\",\n    hash = \"\"\n  } = typeof to === \"string\" ? parsePath(to) : to;\n  let pathname = toPathname ? toPathname.startsWith(\"/\") ? toPathname : resolvePathname(toPathname, fromPathname) : fromPathname;\n  return {\n    pathname,\n    search: normalizeSearch(search),\n    hash: normalizeHash(hash)\n  };\n}\nfunction resolvePathname(relativePath, fromPathname) {\n  let segments = fromPathname.replace(/\\/+$/, \"\").split(\"/\");\n  let relativeSegments = relativePath.split(\"/\");\n  relativeSegments.forEach((segment) => {\n    if (segment === \"..\") {\n      if (segments.length > 1) segments.pop();\n    } else if (segment !== \".\") {\n      segments.push(segment);\n    }\n  });\n  return segments.length > 1 ? segments.join(\"/\") : \"/\";\n}\nfunction getInvalidPathError(char, field, dest, path) {\n  return `Cannot include a '${char}' character in a manually specified \\`to.${field}\\` field [${JSON.stringify(\n    path\n  )}].  Please separate it out to the \\`to.${dest}\\` field. Alternatively you may provide the full path as a string in <Link to=\"...\"> and the router will parse it for you.`;\n}\nfunction getPathContributingMatches(matches) {\n  return matches.filter(\n    (match, index) => index === 0 || match.route.path && match.route.path.length > 0\n  );\n}\nfunction getResolveToMatches(matches) {\n  let pathMatches = getPathContributingMatches(matches);\n  return pathMatches.map(\n    (match, idx) => idx === pathMatches.length - 1 ? match.pathname : match.pathnameBase\n  );\n}\nfunction resolveTo(toArg, routePathnames, locationPathname, isPathRelative = false) {\n  let to;\n  if (typeof toArg === \"string\") {\n    to = parsePath(toArg);\n  } else {\n    to = { ...toArg };\n    invariant(\n      !to.pathname || !to.pathname.includes(\"?\"),\n      getInvalidPathError(\"?\", \"pathname\", \"search\", to)\n    );\n    invariant(\n      !to.pathname || !to.pathname.includes(\"#\"),\n      getInvalidPathError(\"#\", \"pathname\", \"hash\", to)\n    );\n    invariant(\n      !to.search || !to.search.includes(\"#\"),\n      getInvalidPathError(\"#\", \"search\", \"hash\", to)\n    );\n  }\n  let isEmptyPath = toArg === \"\" || to.pathname === \"\";\n  let toPathname = isEmptyPath ? \"/\" : to.pathname;\n  let from;\n  if (toPathname == null) {\n    from = locationPathname;\n  } else {\n    let routePathnameIndex = routePathnames.length - 1;\n    if (!isPathRelative && toPathname.startsWith(\"..\")) {\n      let toSegments = toPathname.split(\"/\");\n      while (toSegments[0] === \"..\") {\n        toSegments.shift();\n        routePathnameIndex -= 1;\n      }\n      to.pathname = toSegments.join(\"/\");\n    }\n    from = routePathnameIndex >= 0 ? routePathnames[routePathnameIndex] : \"/\";\n  }\n  let path = resolvePath(to, from);\n  let hasExplicitTrailingSlash = toPathname && toPathname !== \"/\" && toPathname.endsWith(\"/\");\n  let hasCurrentTrailingSlash = (isEmptyPath || toPathname === \".\") && locationPathname.endsWith(\"/\");\n  if (!path.pathname.endsWith(\"/\") && (hasExplicitTrailingSlash || hasCurrentTrailingSlash)) {\n    path.pathname += \"/\";\n  }\n  return path;\n}\nvar joinPaths = (paths) => paths.join(\"/\").replace(/\\/\\/+/g, \"/\");\nvar normalizePathname = (pathname) => pathname.replace(/\\/+$/, \"\").replace(/^\\/*/, \"/\");\nvar normalizeSearch = (search) => !search || search === \"?\" ? \"\" : search.startsWith(\"?\") ? search : \"?\" + search;\nvar normalizeHash = (hash) => !hash || hash === \"#\" ? \"\" : hash.startsWith(\"#\") ? hash : \"#\" + hash;\nvar DataWithResponseInit = class {\n  constructor(data2, init) {\n    this.type = \"DataWithResponseInit\";\n    this.data = data2;\n    this.init = init || null;\n  }\n};\nfunction data(data2, init) {\n  return new DataWithResponseInit(\n    data2,\n    typeof init === \"number\" ? { status: init } : init\n  );\n}\nvar redirect = (url, init = 302) => {\n  let responseInit = init;\n  if (typeof responseInit === \"number\") {\n    responseInit = { status: responseInit };\n  } else if (typeof responseInit.status === \"undefined\") {\n    responseInit.status = 302;\n  }\n  let headers = new Headers(responseInit.headers);\n  headers.set(\"Location\", url);\n  return new Response(null, { ...responseInit, headers });\n};\nvar redirectDocument = (url, init) => {\n  let response = redirect(url, init);\n  response.headers.set(\"X-Remix-Reload-Document\", \"true\");\n  return response;\n};\nvar replace = (url, init) => {\n  let response = redirect(url, init);\n  response.headers.set(\"X-Remix-Replace\", \"true\");\n  return response;\n};\nvar ErrorResponseImpl = class {\n  constructor(status, statusText, data2, internal = false) {\n    this.status = status;\n    this.statusText = statusText || \"\";\n    this.internal = internal;\n    if (data2 instanceof Error) {\n      this.data = data2.toString();\n      this.error = data2;\n    } else {\n      this.data = data2;\n    }\n  }\n};\nfunction isRouteErrorResponse(error) {\n  return error != null && typeof error.status === \"number\" && typeof error.statusText === \"string\" && typeof error.internal === \"boolean\" && \"data\" in error;\n}\n\n// lib/router/router.ts\nvar validMutationMethodsArr = [\n  \"POST\",\n  \"PUT\",\n  \"PATCH\",\n  \"DELETE\"\n];\nvar validMutationMethods = new Set(\n  validMutationMethodsArr\n);\nvar validRequestMethodsArr = [\n  \"GET\",\n  ...validMutationMethodsArr\n];\nvar validRequestMethods = new Set(validRequestMethodsArr);\nvar redirectStatusCodes = /* @__PURE__ */ new Set([301, 302, 303, 307, 308]);\nvar redirectPreserveMethodStatusCodes = /* @__PURE__ */ new Set([307, 308]);\nvar IDLE_NAVIGATION = {\n  state: \"idle\",\n  location: void 0,\n  formMethod: void 0,\n  formAction: void 0,\n  formEncType: void 0,\n  formData: void 0,\n  json: void 0,\n  text: void 0\n};\nvar IDLE_FETCHER = {\n  state: \"idle\",\n  data: void 0,\n  formMethod: void 0,\n  formAction: void 0,\n  formEncType: void 0,\n  formData: void 0,\n  json: void 0,\n  text: void 0\n};\nvar IDLE_BLOCKER = {\n  state: \"unblocked\",\n  proceed: void 0,\n  reset: void 0,\n  location: void 0\n};\nvar ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\nvar isAbsoluteUrl = (url) => ABSOLUTE_URL_REGEX.test(url);\nvar defaultMapRouteProperties = (route) => ({\n  hasErrorBoundary: Boolean(route.hasErrorBoundary)\n});\nvar TRANSITIONS_STORAGE_KEY = \"remix-router-transitions\";\nvar ResetLoaderDataSymbol = Symbol(\"ResetLoaderData\");\nfunction createRouter(init) {\n  const routerWindow = init.window ? init.window : typeof window !== \"undefined\" ? window : void 0;\n  const isBrowser2 = typeof routerWindow !== \"undefined\" && typeof routerWindow.document !== \"undefined\" && typeof routerWindow.document.createElement !== \"undefined\";\n  invariant(\n    init.routes.length > 0,\n    \"You must provide a non-empty routes array to createRouter\"\n  );\n  let hydrationRouteProperties2 = init.hydrationRouteProperties || [];\n  let mapRouteProperties2 = init.mapRouteProperties || defaultMapRouteProperties;\n  let manifest = {};\n  let dataRoutes = convertRoutesToDataRoutes(\n    init.routes,\n    mapRouteProperties2,\n    void 0,\n    manifest\n  );\n  let inFlightDataRoutes;\n  let basename = init.basename || \"/\";\n  let dataStrategyImpl = init.dataStrategy || defaultDataStrategyWithMiddleware;\n  let future = {\n    unstable_middleware: false,\n    ...init.future\n  };\n  let unlistenHistory = null;\n  let subscribers = /* @__PURE__ */ new Set();\n  let savedScrollPositions2 = null;\n  let getScrollRestorationKey2 = null;\n  let getScrollPosition = null;\n  let initialScrollRestored = init.hydrationData != null;\n  let initialMatches = matchRoutes(dataRoutes, init.history.location, basename);\n  let initialMatchesIsFOW = false;\n  let initialErrors = null;\n  let initialized;\n  if (initialMatches == null && !init.patchRoutesOnNavigation) {\n    let error = getInternalRouterError(404, {\n      pathname: init.history.location.pathname\n    });\n    let { matches, route } = getShortCircuitMatches(dataRoutes);\n    initialized = true;\n    initialMatches = matches;\n    initialErrors = { [route.id]: error };\n  } else {\n    if (initialMatches && !init.hydrationData) {\n      let fogOfWar = checkFogOfWar(\n        initialMatches,\n        dataRoutes,\n        init.history.location.pathname\n      );\n      if (fogOfWar.active) {\n        initialMatches = null;\n      }\n    }\n    if (!initialMatches) {\n      initialized = false;\n      initialMatches = [];\n      let fogOfWar = checkFogOfWar(\n        null,\n        dataRoutes,\n        init.history.location.pathname\n      );\n      if (fogOfWar.active && fogOfWar.matches) {\n        initialMatchesIsFOW = true;\n        initialMatches = fogOfWar.matches;\n      }\n    } else if (initialMatches.some((m) => m.route.lazy)) {\n      initialized = false;\n    } else if (!initialMatches.some((m) => m.route.loader)) {\n      initialized = true;\n    } else {\n      let loaderData = init.hydrationData ? init.hydrationData.loaderData : null;\n      let errors = init.hydrationData ? init.hydrationData.errors : null;\n      if (errors) {\n        let idx = initialMatches.findIndex(\n          (m) => errors[m.route.id] !== void 0\n        );\n        initialized = initialMatches.slice(0, idx + 1).every(\n          (m) => !shouldLoadRouteOnHydration(m.route, loaderData, errors)\n        );\n      } else {\n        initialized = initialMatches.every(\n          (m) => !shouldLoadRouteOnHydration(m.route, loaderData, errors)\n        );\n      }\n    }\n  }\n  let router;\n  let state = {\n    historyAction: init.history.action,\n    location: init.history.location,\n    matches: initialMatches,\n    initialized,\n    navigation: IDLE_NAVIGATION,\n    // Don't restore on initial updateState() if we were SSR'd\n    restoreScrollPosition: init.hydrationData != null ? false : null,\n    preventScrollReset: false,\n    revalidation: \"idle\",\n    loaderData: init.hydrationData && init.hydrationData.loaderData || {},\n    actionData: init.hydrationData && init.hydrationData.actionData || null,\n    errors: init.hydrationData && init.hydrationData.errors || initialErrors,\n    fetchers: /* @__PURE__ */ new Map(),\n    blockers: /* @__PURE__ */ new Map()\n  };\n  let pendingAction = \"POP\" /* Pop */;\n  let pendingPreventScrollReset = false;\n  let pendingNavigationController;\n  let pendingViewTransitionEnabled = false;\n  let appliedViewTransitions = /* @__PURE__ */ new Map();\n  let removePageHideEventListener = null;\n  let isUninterruptedRevalidation = false;\n  let isRevalidationRequired = false;\n  let cancelledFetcherLoads = /* @__PURE__ */ new Set();\n  let fetchControllers = /* @__PURE__ */ new Map();\n  let incrementingLoadId = 0;\n  let pendingNavigationLoadId = -1;\n  let fetchReloadIds = /* @__PURE__ */ new Map();\n  let fetchRedirectIds = /* @__PURE__ */ new Set();\n  let fetchLoadMatches = /* @__PURE__ */ new Map();\n  let activeFetchers = /* @__PURE__ */ new Map();\n  let fetchersQueuedForDeletion = /* @__PURE__ */ new Set();\n  let blockerFunctions = /* @__PURE__ */ new Map();\n  let unblockBlockerHistoryUpdate = void 0;\n  let pendingRevalidationDfd = null;\n  function initialize() {\n    unlistenHistory = init.history.listen(\n      ({ action: historyAction, location, delta }) => {\n        if (unblockBlockerHistoryUpdate) {\n          unblockBlockerHistoryUpdate();\n          unblockBlockerHistoryUpdate = void 0;\n          return;\n        }\n        warning(\n          blockerFunctions.size === 0 || delta != null,\n          \"You are trying to use a blocker on a POP navigation to a location that was not created by @remix-run/router. This will fail silently in production. This can happen if you are navigating outside the router via `window.history.pushState`/`window.location.hash` instead of using router navigation APIs.  This can also happen if you are using createHashRouter and the user manually changes the URL.\"\n        );\n        let blockerKey = shouldBlockNavigation({\n          currentLocation: state.location,\n          nextLocation: location,\n          historyAction\n        });\n        if (blockerKey && delta != null) {\n          let nextHistoryUpdatePromise = new Promise((resolve) => {\n            unblockBlockerHistoryUpdate = resolve;\n          });\n          init.history.go(delta * -1);\n          updateBlocker(blockerKey, {\n            state: \"blocked\",\n            location,\n            proceed() {\n              updateBlocker(blockerKey, {\n                state: \"proceeding\",\n                proceed: void 0,\n                reset: void 0,\n                location\n              });\n              nextHistoryUpdatePromise.then(() => init.history.go(delta));\n            },\n            reset() {\n              let blockers = new Map(state.blockers);\n              blockers.set(blockerKey, IDLE_BLOCKER);\n              updateState({ blockers });\n            }\n          });\n          return;\n        }\n        return startNavigation(historyAction, location);\n      }\n    );\n    if (isBrowser2) {\n      restoreAppliedTransitions(routerWindow, appliedViewTransitions);\n      let _saveAppliedTransitions = () => persistAppliedTransitions(routerWindow, appliedViewTransitions);\n      routerWindow.addEventListener(\"pagehide\", _saveAppliedTransitions);\n      removePageHideEventListener = () => routerWindow.removeEventListener(\"pagehide\", _saveAppliedTransitions);\n    }\n    if (!state.initialized) {\n      startNavigation(\"POP\" /* Pop */, state.location, {\n        initialHydration: true\n      });\n    }\n    return router;\n  }\n  function dispose() {\n    if (unlistenHistory) {\n      unlistenHistory();\n    }\n    if (removePageHideEventListener) {\n      removePageHideEventListener();\n    }\n    subscribers.clear();\n    pendingNavigationController && pendingNavigationController.abort();\n    state.fetchers.forEach((_, key) => deleteFetcher(key));\n    state.blockers.forEach((_, key) => deleteBlocker(key));\n  }\n  function subscribe(fn) {\n    subscribers.add(fn);\n    return () => subscribers.delete(fn);\n  }\n  function updateState(newState, opts = {}) {\n    if (newState.matches) {\n      newState.matches = newState.matches.map((m) => {\n        let route = manifest[m.route.id];\n        let matchRoute = m.route;\n        if (matchRoute.element !== route.element || matchRoute.errorElement !== route.errorElement || matchRoute.hydrateFallbackElement !== route.hydrateFallbackElement) {\n          return {\n            ...m,\n            route\n          };\n        }\n        return m;\n      });\n    }\n    state = {\n      ...state,\n      ...newState\n    };\n    let unmountedFetchers = [];\n    let mountedFetchers = [];\n    state.fetchers.forEach((fetcher, key) => {\n      if (fetcher.state === \"idle\") {\n        if (fetchersQueuedForDeletion.has(key)) {\n          unmountedFetchers.push(key);\n        } else {\n          mountedFetchers.push(key);\n        }\n      }\n    });\n    fetchersQueuedForDeletion.forEach((key) => {\n      if (!state.fetchers.has(key) && !fetchControllers.has(key)) {\n        unmountedFetchers.push(key);\n      }\n    });\n    [...subscribers].forEach(\n      (subscriber) => subscriber(state, {\n        deletedFetchers: unmountedFetchers,\n        viewTransitionOpts: opts.viewTransitionOpts,\n        flushSync: opts.flushSync === true\n      })\n    );\n    unmountedFetchers.forEach((key) => deleteFetcher(key));\n    mountedFetchers.forEach((key) => state.fetchers.delete(key));\n  }\n  function completeNavigation(location, newState, { flushSync } = {}) {\n    let isActionReload = state.actionData != null && state.navigation.formMethod != null && isMutationMethod(state.navigation.formMethod) && state.navigation.state === \"loading\" && location.state?._isRedirect !== true;\n    let actionData;\n    if (newState.actionData) {\n      if (Object.keys(newState.actionData).length > 0) {\n        actionData = newState.actionData;\n      } else {\n        actionData = null;\n      }\n    } else if (isActionReload) {\n      actionData = state.actionData;\n    } else {\n      actionData = null;\n    }\n    let loaderData = newState.loaderData ? mergeLoaderData(\n      state.loaderData,\n      newState.loaderData,\n      newState.matches || [],\n      newState.errors\n    ) : state.loaderData;\n    let blockers = state.blockers;\n    if (blockers.size > 0) {\n      blockers = new Map(blockers);\n      blockers.forEach((_, k) => blockers.set(k, IDLE_BLOCKER));\n    }\n    let restoreScrollPosition = isUninterruptedRevalidation ? false : getSavedScrollPosition(location, newState.matches || state.matches);\n    let preventScrollReset = pendingPreventScrollReset === true || state.navigation.formMethod != null && isMutationMethod(state.navigation.formMethod) && location.state?._isRedirect !== true;\n    if (inFlightDataRoutes) {\n      dataRoutes = inFlightDataRoutes;\n      inFlightDataRoutes = void 0;\n    }\n    if (isUninterruptedRevalidation) {\n    } else if (pendingAction === \"POP\" /* Pop */) {\n    } else if (pendingAction === \"PUSH\" /* Push */) {\n      init.history.push(location, location.state);\n    } else if (pendingAction === \"REPLACE\" /* Replace */) {\n      init.history.replace(location, location.state);\n    }\n    let viewTransitionOpts;\n    if (pendingAction === \"POP\" /* Pop */) {\n      let priorPaths = appliedViewTransitions.get(state.location.pathname);\n      if (priorPaths && priorPaths.has(location.pathname)) {\n        viewTransitionOpts = {\n          currentLocation: state.location,\n          nextLocation: location\n        };\n      } else if (appliedViewTransitions.has(location.pathname)) {\n        viewTransitionOpts = {\n          currentLocation: location,\n          nextLocation: state.location\n        };\n      }\n    } else if (pendingViewTransitionEnabled) {\n      let toPaths = appliedViewTransitions.get(state.location.pathname);\n      if (toPaths) {\n        toPaths.add(location.pathname);\n      } else {\n        toPaths = /* @__PURE__ */ new Set([location.pathname]);\n        appliedViewTransitions.set(state.location.pathname, toPaths);\n      }\n      viewTransitionOpts = {\n        currentLocation: state.location,\n        nextLocation: location\n      };\n    }\n    updateState(\n      {\n        ...newState,\n        // matches, errors, fetchers go through as-is\n        actionData,\n        loaderData,\n        historyAction: pendingAction,\n        location,\n        initialized: true,\n        navigation: IDLE_NAVIGATION,\n        revalidation: \"idle\",\n        restoreScrollPosition,\n        preventScrollReset,\n        blockers\n      },\n      {\n        viewTransitionOpts,\n        flushSync: flushSync === true\n      }\n    );\n    pendingAction = \"POP\" /* Pop */;\n    pendingPreventScrollReset = false;\n    pendingViewTransitionEnabled = false;\n    isUninterruptedRevalidation = false;\n    isRevalidationRequired = false;\n    pendingRevalidationDfd?.resolve();\n    pendingRevalidationDfd = null;\n  }\n  async function navigate(to, opts) {\n    if (typeof to === \"number\") {\n      init.history.go(to);\n      return;\n    }\n    let normalizedPath = normalizeTo(\n      state.location,\n      state.matches,\n      basename,\n      to,\n      opts?.fromRouteId,\n      opts?.relative\n    );\n    let { path, submission, error } = normalizeNavigateOptions(\n      false,\n      normalizedPath,\n      opts\n    );\n    let currentLocation = state.location;\n    let nextLocation = createLocation(state.location, path, opts && opts.state);\n    nextLocation = {\n      ...nextLocation,\n      ...init.history.encodeLocation(nextLocation)\n    };\n    let userReplace = opts && opts.replace != null ? opts.replace : void 0;\n    let historyAction = \"PUSH\" /* Push */;\n    if (userReplace === true) {\n      historyAction = \"REPLACE\" /* Replace */;\n    } else if (userReplace === false) {\n    } else if (submission != null && isMutationMethod(submission.formMethod) && submission.formAction === state.location.pathname + state.location.search) {\n      historyAction = \"REPLACE\" /* Replace */;\n    }\n    let preventScrollReset = opts && \"preventScrollReset\" in opts ? opts.preventScrollReset === true : void 0;\n    let flushSync = (opts && opts.flushSync) === true;\n    let blockerKey = shouldBlockNavigation({\n      currentLocation,\n      nextLocation,\n      historyAction\n    });\n    if (blockerKey) {\n      updateBlocker(blockerKey, {\n        state: \"blocked\",\n        location: nextLocation,\n        proceed() {\n          updateBlocker(blockerKey, {\n            state: \"proceeding\",\n            proceed: void 0,\n            reset: void 0,\n            location: nextLocation\n          });\n          navigate(to, opts);\n        },\n        reset() {\n          let blockers = new Map(state.blockers);\n          blockers.set(blockerKey, IDLE_BLOCKER);\n          updateState({ blockers });\n        }\n      });\n      return;\n    }\n    await startNavigation(historyAction, nextLocation, {\n      submission,\n      // Send through the formData serialization error if we have one so we can\n      // render at the right error boundary after we match routes\n      pendingError: error,\n      preventScrollReset,\n      replace: opts && opts.replace,\n      enableViewTransition: opts && opts.viewTransition,\n      flushSync\n    });\n  }\n  function revalidate() {\n    if (!pendingRevalidationDfd) {\n      pendingRevalidationDfd = createDeferred();\n    }\n    interruptActiveLoads();\n    updateState({ revalidation: \"loading\" });\n    let promise = pendingRevalidationDfd.promise;\n    if (state.navigation.state === \"submitting\") {\n      return promise;\n    }\n    if (state.navigation.state === \"idle\") {\n      startNavigation(state.historyAction, state.location, {\n        startUninterruptedRevalidation: true\n      });\n      return promise;\n    }\n    startNavigation(\n      pendingAction || state.historyAction,\n      state.navigation.location,\n      {\n        overrideNavigation: state.navigation,\n        // Proxy through any rending view transition\n        enableViewTransition: pendingViewTransitionEnabled === true\n      }\n    );\n    return promise;\n  }\n  async function startNavigation(historyAction, location, opts) {\n    pendingNavigationController && pendingNavigationController.abort();\n    pendingNavigationController = null;\n    pendingAction = historyAction;\n    isUninterruptedRevalidation = (opts && opts.startUninterruptedRevalidation) === true;\n    saveScrollPosition(state.location, state.matches);\n    pendingPreventScrollReset = (opts && opts.preventScrollReset) === true;\n    pendingViewTransitionEnabled = (opts && opts.enableViewTransition) === true;\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let loadingNavigation = opts && opts.overrideNavigation;\n    let matches = opts?.initialHydration && state.matches && state.matches.length > 0 && !initialMatchesIsFOW ? (\n      // `matchRoutes()` has already been called if we're in here via `router.initialize()`\n      state.matches\n    ) : matchRoutes(routesToUse, location, basename);\n    let flushSync = (opts && opts.flushSync) === true;\n    if (matches && state.initialized && !isRevalidationRequired && isHashChangeOnly(state.location, location) && !(opts && opts.submission && isMutationMethod(opts.submission.formMethod))) {\n      completeNavigation(location, { matches }, { flushSync });\n      return;\n    }\n    let fogOfWar = checkFogOfWar(matches, routesToUse, location.pathname);\n    if (fogOfWar.active && fogOfWar.matches) {\n      matches = fogOfWar.matches;\n    }\n    if (!matches) {\n      let { error, notFoundMatches, route } = handleNavigational404(\n        location.pathname\n      );\n      completeNavigation(\n        location,\n        {\n          matches: notFoundMatches,\n          loaderData: {},\n          errors: {\n            [route.id]: error\n          }\n        },\n        { flushSync }\n      );\n      return;\n    }\n    pendingNavigationController = new AbortController();\n    let request = createClientSideRequest(\n      init.history,\n      location,\n      pendingNavigationController.signal,\n      opts && opts.submission\n    );\n    let scopedContext = init.unstable_getContext ? await init.unstable_getContext() : new unstable_RouterContextProvider();\n    let pendingActionResult;\n    if (opts && opts.pendingError) {\n      pendingActionResult = [\n        findNearestBoundary(matches).route.id,\n        { type: \"error\" /* error */, error: opts.pendingError }\n      ];\n    } else if (opts && opts.submission && isMutationMethod(opts.submission.formMethod)) {\n      let actionResult = await handleAction(\n        request,\n        location,\n        opts.submission,\n        matches,\n        scopedContext,\n        fogOfWar.active,\n        opts && opts.initialHydration === true,\n        { replace: opts.replace, flushSync }\n      );\n      if (actionResult.shortCircuited) {\n        return;\n      }\n      if (actionResult.pendingActionResult) {\n        let [routeId, result] = actionResult.pendingActionResult;\n        if (isErrorResult(result) && isRouteErrorResponse(result.error) && result.error.status === 404) {\n          pendingNavigationController = null;\n          completeNavigation(location, {\n            matches: actionResult.matches,\n            loaderData: {},\n            errors: {\n              [routeId]: result.error\n            }\n          });\n          return;\n        }\n      }\n      matches = actionResult.matches || matches;\n      pendingActionResult = actionResult.pendingActionResult;\n      loadingNavigation = getLoadingNavigation(location, opts.submission);\n      flushSync = false;\n      fogOfWar.active = false;\n      request = createClientSideRequest(\n        init.history,\n        request.url,\n        request.signal\n      );\n    }\n    let {\n      shortCircuited,\n      matches: updatedMatches,\n      loaderData,\n      errors\n    } = await handleLoaders(\n      request,\n      location,\n      matches,\n      scopedContext,\n      fogOfWar.active,\n      loadingNavigation,\n      opts && opts.submission,\n      opts && opts.fetcherSubmission,\n      opts && opts.replace,\n      opts && opts.initialHydration === true,\n      flushSync,\n      pendingActionResult\n    );\n    if (shortCircuited) {\n      return;\n    }\n    pendingNavigationController = null;\n    completeNavigation(location, {\n      matches: updatedMatches || matches,\n      ...getActionDataForCommit(pendingActionResult),\n      loaderData,\n      errors\n    });\n  }\n  async function handleAction(request, location, submission, matches, scopedContext, isFogOfWar, initialHydration, opts = {}) {\n    interruptActiveLoads();\n    let navigation = getSubmittingNavigation(location, submission);\n    updateState({ navigation }, { flushSync: opts.flushSync === true });\n    if (isFogOfWar) {\n      let discoverResult = await discoverRoutes(\n        matches,\n        location.pathname,\n        request.signal\n      );\n      if (discoverResult.type === \"aborted\") {\n        return { shortCircuited: true };\n      } else if (discoverResult.type === \"error\") {\n        let boundaryId = findNearestBoundary(discoverResult.partialMatches).route.id;\n        return {\n          matches: discoverResult.partialMatches,\n          pendingActionResult: [\n            boundaryId,\n            {\n              type: \"error\" /* error */,\n              error: discoverResult.error\n            }\n          ]\n        };\n      } else if (!discoverResult.matches) {\n        let { notFoundMatches, error, route } = handleNavigational404(\n          location.pathname\n        );\n        return {\n          matches: notFoundMatches,\n          pendingActionResult: [\n            route.id,\n            {\n              type: \"error\" /* error */,\n              error\n            }\n          ]\n        };\n      } else {\n        matches = discoverResult.matches;\n      }\n    }\n    let result;\n    let actionMatch = getTargetMatch(matches, location);\n    if (!actionMatch.route.action && !actionMatch.route.lazy) {\n      result = {\n        type: \"error\" /* error */,\n        error: getInternalRouterError(405, {\n          method: request.method,\n          pathname: location.pathname,\n          routeId: actionMatch.route.id\n        })\n      };\n    } else {\n      let dsMatches = getTargetedDataStrategyMatches(\n        mapRouteProperties2,\n        manifest,\n        request,\n        matches,\n        actionMatch,\n        initialHydration ? [] : hydrationRouteProperties2,\n        scopedContext\n      );\n      let results = await callDataStrategy(\n        request,\n        dsMatches,\n        scopedContext,\n        null\n      );\n      result = results[actionMatch.route.id];\n      if (!result) {\n        for (let match of matches) {\n          if (results[match.route.id]) {\n            result = results[match.route.id];\n            break;\n          }\n        }\n      }\n      if (request.signal.aborted) {\n        return { shortCircuited: true };\n      }\n    }\n    if (isRedirectResult(result)) {\n      let replace2;\n      if (opts && opts.replace != null) {\n        replace2 = opts.replace;\n      } else {\n        let location2 = normalizeRedirectLocation(\n          result.response.headers.get(\"Location\"),\n          new URL(request.url),\n          basename\n        );\n        replace2 = location2 === state.location.pathname + state.location.search;\n      }\n      await startRedirectNavigation(request, result, true, {\n        submission,\n        replace: replace2\n      });\n      return { shortCircuited: true };\n    }\n    if (isErrorResult(result)) {\n      let boundaryMatch = findNearestBoundary(matches, actionMatch.route.id);\n      if ((opts && opts.replace) !== true) {\n        pendingAction = \"PUSH\" /* Push */;\n      }\n      return {\n        matches,\n        pendingActionResult: [\n          boundaryMatch.route.id,\n          result,\n          actionMatch.route.id\n        ]\n      };\n    }\n    return {\n      matches,\n      pendingActionResult: [actionMatch.route.id, result]\n    };\n  }\n  async function handleLoaders(request, location, matches, scopedContext, isFogOfWar, overrideNavigation, submission, fetcherSubmission, replace2, initialHydration, flushSync, pendingActionResult) {\n    let loadingNavigation = overrideNavigation || getLoadingNavigation(location, submission);\n    let activeSubmission = submission || fetcherSubmission || getSubmissionFromNavigation(loadingNavigation);\n    let shouldUpdateNavigationState = !isUninterruptedRevalidation && !initialHydration;\n    if (isFogOfWar) {\n      if (shouldUpdateNavigationState) {\n        let actionData = getUpdatedActionData(pendingActionResult);\n        updateState(\n          {\n            navigation: loadingNavigation,\n            ...actionData !== void 0 ? { actionData } : {}\n          },\n          {\n            flushSync\n          }\n        );\n      }\n      let discoverResult = await discoverRoutes(\n        matches,\n        location.pathname,\n        request.signal\n      );\n      if (discoverResult.type === \"aborted\") {\n        return { shortCircuited: true };\n      } else if (discoverResult.type === \"error\") {\n        let boundaryId = findNearestBoundary(discoverResult.partialMatches).route.id;\n        return {\n          matches: discoverResult.partialMatches,\n          loaderData: {},\n          errors: {\n            [boundaryId]: discoverResult.error\n          }\n        };\n      } else if (!discoverResult.matches) {\n        let { error, notFoundMatches, route } = handleNavigational404(\n          location.pathname\n        );\n        return {\n          matches: notFoundMatches,\n          loaderData: {},\n          errors: {\n            [route.id]: error\n          }\n        };\n      } else {\n        matches = discoverResult.matches;\n      }\n    }\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let { dsMatches, revalidatingFetchers } = getMatchesToLoad(\n      request,\n      scopedContext,\n      mapRouteProperties2,\n      manifest,\n      init.history,\n      state,\n      matches,\n      activeSubmission,\n      location,\n      initialHydration ? [] : hydrationRouteProperties2,\n      initialHydration === true,\n      isRevalidationRequired,\n      cancelledFetcherLoads,\n      fetchersQueuedForDeletion,\n      fetchLoadMatches,\n      fetchRedirectIds,\n      routesToUse,\n      basename,\n      init.patchRoutesOnNavigation != null,\n      pendingActionResult\n    );\n    pendingNavigationLoadId = ++incrementingLoadId;\n    if (!init.dataStrategy && !dsMatches.some((m) => m.shouldLoad) && !dsMatches.some((m) => m.route.unstable_middleware) && revalidatingFetchers.length === 0) {\n      let updatedFetchers2 = markFetchRedirectsDone();\n      completeNavigation(\n        location,\n        {\n          matches,\n          loaderData: {},\n          // Commit pending error if we're short circuiting\n          errors: pendingActionResult && isErrorResult(pendingActionResult[1]) ? { [pendingActionResult[0]]: pendingActionResult[1].error } : null,\n          ...getActionDataForCommit(pendingActionResult),\n          ...updatedFetchers2 ? { fetchers: new Map(state.fetchers) } : {}\n        },\n        { flushSync }\n      );\n      return { shortCircuited: true };\n    }\n    if (shouldUpdateNavigationState) {\n      let updates = {};\n      if (!isFogOfWar) {\n        updates.navigation = loadingNavigation;\n        let actionData = getUpdatedActionData(pendingActionResult);\n        if (actionData !== void 0) {\n          updates.actionData = actionData;\n        }\n      }\n      if (revalidatingFetchers.length > 0) {\n        updates.fetchers = getUpdatedRevalidatingFetchers(revalidatingFetchers);\n      }\n      updateState(updates, { flushSync });\n    }\n    revalidatingFetchers.forEach((rf) => {\n      abortFetcher(rf.key);\n      if (rf.controller) {\n        fetchControllers.set(rf.key, rf.controller);\n      }\n    });\n    let abortPendingFetchRevalidations = () => revalidatingFetchers.forEach((f) => abortFetcher(f.key));\n    if (pendingNavigationController) {\n      pendingNavigationController.signal.addEventListener(\n        \"abort\",\n        abortPendingFetchRevalidations\n      );\n    }\n    let { loaderResults, fetcherResults } = await callLoadersAndMaybeResolveData(\n      dsMatches,\n      revalidatingFetchers,\n      request,\n      scopedContext\n    );\n    if (request.signal.aborted) {\n      return { shortCircuited: true };\n    }\n    if (pendingNavigationController) {\n      pendingNavigationController.signal.removeEventListener(\n        \"abort\",\n        abortPendingFetchRevalidations\n      );\n    }\n    revalidatingFetchers.forEach((rf) => fetchControllers.delete(rf.key));\n    let redirect2 = findRedirect(loaderResults);\n    if (redirect2) {\n      await startRedirectNavigation(request, redirect2.result, true, {\n        replace: replace2\n      });\n      return { shortCircuited: true };\n    }\n    redirect2 = findRedirect(fetcherResults);\n    if (redirect2) {\n      fetchRedirectIds.add(redirect2.key);\n      await startRedirectNavigation(request, redirect2.result, true, {\n        replace: replace2\n      });\n      return { shortCircuited: true };\n    }\n    let { loaderData, errors } = processLoaderData(\n      state,\n      matches,\n      loaderResults,\n      pendingActionResult,\n      revalidatingFetchers,\n      fetcherResults\n    );\n    if (initialHydration && state.errors) {\n      errors = { ...state.errors, ...errors };\n    }\n    let updatedFetchers = markFetchRedirectsDone();\n    let didAbortFetchLoads = abortStaleFetchLoads(pendingNavigationLoadId);\n    let shouldUpdateFetchers = updatedFetchers || didAbortFetchLoads || revalidatingFetchers.length > 0;\n    return {\n      matches,\n      loaderData,\n      errors,\n      ...shouldUpdateFetchers ? { fetchers: new Map(state.fetchers) } : {}\n    };\n  }\n  function getUpdatedActionData(pendingActionResult) {\n    if (pendingActionResult && !isErrorResult(pendingActionResult[1])) {\n      return {\n        [pendingActionResult[0]]: pendingActionResult[1].data\n      };\n    } else if (state.actionData) {\n      if (Object.keys(state.actionData).length === 0) {\n        return null;\n      } else {\n        return state.actionData;\n      }\n    }\n  }\n  function getUpdatedRevalidatingFetchers(revalidatingFetchers) {\n    revalidatingFetchers.forEach((rf) => {\n      let fetcher = state.fetchers.get(rf.key);\n      let revalidatingFetcher = getLoadingFetcher(\n        void 0,\n        fetcher ? fetcher.data : void 0\n      );\n      state.fetchers.set(rf.key, revalidatingFetcher);\n    });\n    return new Map(state.fetchers);\n  }\n  async function fetch2(key, routeId, href, opts) {\n    abortFetcher(key);\n    let flushSync = (opts && opts.flushSync) === true;\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let normalizedPath = normalizeTo(\n      state.location,\n      state.matches,\n      basename,\n      href,\n      routeId,\n      opts?.relative\n    );\n    let matches = matchRoutes(routesToUse, normalizedPath, basename);\n    let fogOfWar = checkFogOfWar(matches, routesToUse, normalizedPath);\n    if (fogOfWar.active && fogOfWar.matches) {\n      matches = fogOfWar.matches;\n    }\n    if (!matches) {\n      setFetcherError(\n        key,\n        routeId,\n        getInternalRouterError(404, { pathname: normalizedPath }),\n        { flushSync }\n      );\n      return;\n    }\n    let { path, submission, error } = normalizeNavigateOptions(\n      true,\n      normalizedPath,\n      opts\n    );\n    if (error) {\n      setFetcherError(key, routeId, error, { flushSync });\n      return;\n    }\n    let scopedContext = init.unstable_getContext ? await init.unstable_getContext() : new unstable_RouterContextProvider();\n    let preventScrollReset = (opts && opts.preventScrollReset) === true;\n    if (submission && isMutationMethod(submission.formMethod)) {\n      await handleFetcherAction(\n        key,\n        routeId,\n        path,\n        matches,\n        scopedContext,\n        fogOfWar.active,\n        flushSync,\n        preventScrollReset,\n        submission\n      );\n      return;\n    }\n    fetchLoadMatches.set(key, { routeId, path });\n    await handleFetcherLoader(\n      key,\n      routeId,\n      path,\n      matches,\n      scopedContext,\n      fogOfWar.active,\n      flushSync,\n      preventScrollReset,\n      submission\n    );\n  }\n  async function handleFetcherAction(key, routeId, path, requestMatches, scopedContext, isFogOfWar, flushSync, preventScrollReset, submission) {\n    interruptActiveLoads();\n    fetchLoadMatches.delete(key);\n    let existingFetcher = state.fetchers.get(key);\n    updateFetcherState(key, getSubmittingFetcher(submission, existingFetcher), {\n      flushSync\n    });\n    let abortController = new AbortController();\n    let fetchRequest = createClientSideRequest(\n      init.history,\n      path,\n      abortController.signal,\n      submission\n    );\n    if (isFogOfWar) {\n      let discoverResult = await discoverRoutes(\n        requestMatches,\n        new URL(fetchRequest.url).pathname,\n        fetchRequest.signal,\n        key\n      );\n      if (discoverResult.type === \"aborted\") {\n        return;\n      } else if (discoverResult.type === \"error\") {\n        setFetcherError(key, routeId, discoverResult.error, { flushSync });\n        return;\n      } else if (!discoverResult.matches) {\n        setFetcherError(\n          key,\n          routeId,\n          getInternalRouterError(404, { pathname: path }),\n          { flushSync }\n        );\n        return;\n      } else {\n        requestMatches = discoverResult.matches;\n      }\n    }\n    let match = getTargetMatch(requestMatches, path);\n    if (!match.route.action && !match.route.lazy) {\n      let error = getInternalRouterError(405, {\n        method: submission.formMethod,\n        pathname: path,\n        routeId\n      });\n      setFetcherError(key, routeId, error, { flushSync });\n      return;\n    }\n    fetchControllers.set(key, abortController);\n    let originatingLoadId = incrementingLoadId;\n    let fetchMatches = getTargetedDataStrategyMatches(\n      mapRouteProperties2,\n      manifest,\n      fetchRequest,\n      requestMatches,\n      match,\n      hydrationRouteProperties2,\n      scopedContext\n    );\n    let actionResults = await callDataStrategy(\n      fetchRequest,\n      fetchMatches,\n      scopedContext,\n      key\n    );\n    let actionResult = actionResults[match.route.id];\n    if (fetchRequest.signal.aborted) {\n      if (fetchControllers.get(key) === abortController) {\n        fetchControllers.delete(key);\n      }\n      return;\n    }\n    if (fetchersQueuedForDeletion.has(key)) {\n      if (isRedirectResult(actionResult) || isErrorResult(actionResult)) {\n        updateFetcherState(key, getDoneFetcher(void 0));\n        return;\n      }\n    } else {\n      if (isRedirectResult(actionResult)) {\n        fetchControllers.delete(key);\n        if (pendingNavigationLoadId > originatingLoadId) {\n          updateFetcherState(key, getDoneFetcher(void 0));\n          return;\n        } else {\n          fetchRedirectIds.add(key);\n          updateFetcherState(key, getLoadingFetcher(submission));\n          return startRedirectNavigation(fetchRequest, actionResult, false, {\n            fetcherSubmission: submission,\n            preventScrollReset\n          });\n        }\n      }\n      if (isErrorResult(actionResult)) {\n        setFetcherError(key, routeId, actionResult.error);\n        return;\n      }\n    }\n    let nextLocation = state.navigation.location || state.location;\n    let revalidationRequest = createClientSideRequest(\n      init.history,\n      nextLocation,\n      abortController.signal\n    );\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let matches = state.navigation.state !== \"idle\" ? matchRoutes(routesToUse, state.navigation.location, basename) : state.matches;\n    invariant(matches, \"Didn't find any matches after fetcher action\");\n    let loadId = ++incrementingLoadId;\n    fetchReloadIds.set(key, loadId);\n    let loadFetcher = getLoadingFetcher(submission, actionResult.data);\n    state.fetchers.set(key, loadFetcher);\n    let { dsMatches, revalidatingFetchers } = getMatchesToLoad(\n      revalidationRequest,\n      scopedContext,\n      mapRouteProperties2,\n      manifest,\n      init.history,\n      state,\n      matches,\n      submission,\n      nextLocation,\n      hydrationRouteProperties2,\n      false,\n      isRevalidationRequired,\n      cancelledFetcherLoads,\n      fetchersQueuedForDeletion,\n      fetchLoadMatches,\n      fetchRedirectIds,\n      routesToUse,\n      basename,\n      init.patchRoutesOnNavigation != null,\n      [match.route.id, actionResult]\n    );\n    revalidatingFetchers.filter((rf) => rf.key !== key).forEach((rf) => {\n      let staleKey = rf.key;\n      let existingFetcher2 = state.fetchers.get(staleKey);\n      let revalidatingFetcher = getLoadingFetcher(\n        void 0,\n        existingFetcher2 ? existingFetcher2.data : void 0\n      );\n      state.fetchers.set(staleKey, revalidatingFetcher);\n      abortFetcher(staleKey);\n      if (rf.controller) {\n        fetchControllers.set(staleKey, rf.controller);\n      }\n    });\n    updateState({ fetchers: new Map(state.fetchers) });\n    let abortPendingFetchRevalidations = () => revalidatingFetchers.forEach((rf) => abortFetcher(rf.key));\n    abortController.signal.addEventListener(\n      \"abort\",\n      abortPendingFetchRevalidations\n    );\n    let { loaderResults, fetcherResults } = await callLoadersAndMaybeResolveData(\n      dsMatches,\n      revalidatingFetchers,\n      revalidationRequest,\n      scopedContext\n    );\n    if (abortController.signal.aborted) {\n      return;\n    }\n    abortController.signal.removeEventListener(\n      \"abort\",\n      abortPendingFetchRevalidations\n    );\n    fetchReloadIds.delete(key);\n    fetchControllers.delete(key);\n    revalidatingFetchers.forEach((r) => fetchControllers.delete(r.key));\n    if (state.fetchers.has(key)) {\n      let doneFetcher = getDoneFetcher(actionResult.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n    let redirect2 = findRedirect(loaderResults);\n    if (redirect2) {\n      return startRedirectNavigation(\n        revalidationRequest,\n        redirect2.result,\n        false,\n        { preventScrollReset }\n      );\n    }\n    redirect2 = findRedirect(fetcherResults);\n    if (redirect2) {\n      fetchRedirectIds.add(redirect2.key);\n      return startRedirectNavigation(\n        revalidationRequest,\n        redirect2.result,\n        false,\n        { preventScrollReset }\n      );\n    }\n    let { loaderData, errors } = processLoaderData(\n      state,\n      matches,\n      loaderResults,\n      void 0,\n      revalidatingFetchers,\n      fetcherResults\n    );\n    abortStaleFetchLoads(loadId);\n    if (state.navigation.state === \"loading\" && loadId > pendingNavigationLoadId) {\n      invariant(pendingAction, \"Expected pending action\");\n      pendingNavigationController && pendingNavigationController.abort();\n      completeNavigation(state.navigation.location, {\n        matches,\n        loaderData,\n        errors,\n        fetchers: new Map(state.fetchers)\n      });\n    } else {\n      updateState({\n        errors,\n        loaderData: mergeLoaderData(\n          state.loaderData,\n          loaderData,\n          matches,\n          errors\n        ),\n        fetchers: new Map(state.fetchers)\n      });\n      isRevalidationRequired = false;\n    }\n  }\n  async function handleFetcherLoader(key, routeId, path, matches, scopedContext, isFogOfWar, flushSync, preventScrollReset, submission) {\n    let existingFetcher = state.fetchers.get(key);\n    updateFetcherState(\n      key,\n      getLoadingFetcher(\n        submission,\n        existingFetcher ? existingFetcher.data : void 0\n      ),\n      { flushSync }\n    );\n    let abortController = new AbortController();\n    let fetchRequest = createClientSideRequest(\n      init.history,\n      path,\n      abortController.signal\n    );\n    if (isFogOfWar) {\n      let discoverResult = await discoverRoutes(\n        matches,\n        new URL(fetchRequest.url).pathname,\n        fetchRequest.signal,\n        key\n      );\n      if (discoverResult.type === \"aborted\") {\n        return;\n      } else if (discoverResult.type === \"error\") {\n        setFetcherError(key, routeId, discoverResult.error, { flushSync });\n        return;\n      } else if (!discoverResult.matches) {\n        setFetcherError(\n          key,\n          routeId,\n          getInternalRouterError(404, { pathname: path }),\n          { flushSync }\n        );\n        return;\n      } else {\n        matches = discoverResult.matches;\n      }\n    }\n    let match = getTargetMatch(matches, path);\n    fetchControllers.set(key, abortController);\n    let originatingLoadId = incrementingLoadId;\n    let dsMatches = getTargetedDataStrategyMatches(\n      mapRouteProperties2,\n      manifest,\n      fetchRequest,\n      matches,\n      match,\n      hydrationRouteProperties2,\n      scopedContext\n    );\n    let results = await callDataStrategy(\n      fetchRequest,\n      dsMatches,\n      scopedContext,\n      key\n    );\n    let result = results[match.route.id];\n    if (fetchControllers.get(key) === abortController) {\n      fetchControllers.delete(key);\n    }\n    if (fetchRequest.signal.aborted) {\n      return;\n    }\n    if (fetchersQueuedForDeletion.has(key)) {\n      updateFetcherState(key, getDoneFetcher(void 0));\n      return;\n    }\n    if (isRedirectResult(result)) {\n      if (pendingNavigationLoadId > originatingLoadId) {\n        updateFetcherState(key, getDoneFetcher(void 0));\n        return;\n      } else {\n        fetchRedirectIds.add(key);\n        await startRedirectNavigation(fetchRequest, result, false, {\n          preventScrollReset\n        });\n        return;\n      }\n    }\n    if (isErrorResult(result)) {\n      setFetcherError(key, routeId, result.error);\n      return;\n    }\n    updateFetcherState(key, getDoneFetcher(result.data));\n  }\n  async function startRedirectNavigation(request, redirect2, isNavigation, {\n    submission,\n    fetcherSubmission,\n    preventScrollReset,\n    replace: replace2\n  } = {}) {\n    if (redirect2.response.headers.has(\"X-Remix-Revalidate\")) {\n      isRevalidationRequired = true;\n    }\n    let location = redirect2.response.headers.get(\"Location\");\n    invariant(location, \"Expected a Location header on the redirect Response\");\n    location = normalizeRedirectLocation(\n      location,\n      new URL(request.url),\n      basename\n    );\n    let redirectLocation = createLocation(state.location, location, {\n      _isRedirect: true\n    });\n    if (isBrowser2) {\n      let isDocumentReload = false;\n      if (redirect2.response.headers.has(\"X-Remix-Reload-Document\")) {\n        isDocumentReload = true;\n      } else if (isAbsoluteUrl(location)) {\n        const url = createBrowserURLImpl(location, true);\n        isDocumentReload = // Hard reload if it's an absolute URL to a new origin\n        url.origin !== routerWindow.location.origin || // Hard reload if it's an absolute URL that does not match our basename\n        stripBasename(url.pathname, basename) == null;\n      }\n      if (isDocumentReload) {\n        if (replace2) {\n          routerWindow.location.replace(location);\n        } else {\n          routerWindow.location.assign(location);\n        }\n        return;\n      }\n    }\n    pendingNavigationController = null;\n    let redirectNavigationType = replace2 === true || redirect2.response.headers.has(\"X-Remix-Replace\") ? \"REPLACE\" /* Replace */ : \"PUSH\" /* Push */;\n    let { formMethod, formAction, formEncType } = state.navigation;\n    if (!submission && !fetcherSubmission && formMethod && formAction && formEncType) {\n      submission = getSubmissionFromNavigation(state.navigation);\n    }\n    let activeSubmission = submission || fetcherSubmission;\n    if (redirectPreserveMethodStatusCodes.has(redirect2.response.status) && activeSubmission && isMutationMethod(activeSubmission.formMethod)) {\n      await startNavigation(redirectNavigationType, redirectLocation, {\n        submission: {\n          ...activeSubmission,\n          formAction: location\n        },\n        // Preserve these flags across redirects\n        preventScrollReset: preventScrollReset || pendingPreventScrollReset,\n        enableViewTransition: isNavigation ? pendingViewTransitionEnabled : void 0\n      });\n    } else {\n      let overrideNavigation = getLoadingNavigation(\n        redirectLocation,\n        submission\n      );\n      await startNavigation(redirectNavigationType, redirectLocation, {\n        overrideNavigation,\n        // Send fetcher submissions through for shouldRevalidate\n        fetcherSubmission,\n        // Preserve these flags across redirects\n        preventScrollReset: preventScrollReset || pendingPreventScrollReset,\n        enableViewTransition: isNavigation ? pendingViewTransitionEnabled : void 0\n      });\n    }\n  }\n  async function callDataStrategy(request, matches, scopedContext, fetcherKey) {\n    let results;\n    let dataResults = {};\n    try {\n      results = await callDataStrategyImpl(\n        dataStrategyImpl,\n        request,\n        matches,\n        fetcherKey,\n        scopedContext,\n        false\n      );\n    } catch (e) {\n      matches.filter((m) => m.shouldLoad).forEach((m) => {\n        dataResults[m.route.id] = {\n          type: \"error\" /* error */,\n          error: e\n        };\n      });\n      return dataResults;\n    }\n    if (request.signal.aborted) {\n      return dataResults;\n    }\n    for (let [routeId, result] of Object.entries(results)) {\n      if (isRedirectDataStrategyResult(result)) {\n        let response = result.result;\n        dataResults[routeId] = {\n          type: \"redirect\" /* redirect */,\n          response: normalizeRelativeRoutingRedirectResponse(\n            response,\n            request,\n            routeId,\n            matches,\n            basename\n          )\n        };\n      } else {\n        dataResults[routeId] = await convertDataStrategyResultToDataResult(result);\n      }\n    }\n    return dataResults;\n  }\n  async function callLoadersAndMaybeResolveData(matches, fetchersToLoad, request, scopedContext) {\n    let loaderResultsPromise = callDataStrategy(\n      request,\n      matches,\n      scopedContext,\n      null\n    );\n    let fetcherResultsPromise = Promise.all(\n      fetchersToLoad.map(async (f) => {\n        if (f.matches && f.match && f.request && f.controller) {\n          let results = await callDataStrategy(\n            f.request,\n            f.matches,\n            scopedContext,\n            f.key\n          );\n          let result = results[f.match.route.id];\n          return { [f.key]: result };\n        } else {\n          return Promise.resolve({\n            [f.key]: {\n              type: \"error\" /* error */,\n              error: getInternalRouterError(404, {\n                pathname: f.path\n              })\n            }\n          });\n        }\n      })\n    );\n    let loaderResults = await loaderResultsPromise;\n    let fetcherResults = (await fetcherResultsPromise).reduce(\n      (acc, r) => Object.assign(acc, r),\n      {}\n    );\n    return {\n      loaderResults,\n      fetcherResults\n    };\n  }\n  function interruptActiveLoads() {\n    isRevalidationRequired = true;\n    fetchLoadMatches.forEach((_, key) => {\n      if (fetchControllers.has(key)) {\n        cancelledFetcherLoads.add(key);\n      }\n      abortFetcher(key);\n    });\n  }\n  function updateFetcherState(key, fetcher, opts = {}) {\n    state.fetchers.set(key, fetcher);\n    updateState(\n      { fetchers: new Map(state.fetchers) },\n      { flushSync: (opts && opts.flushSync) === true }\n    );\n  }\n  function setFetcherError(key, routeId, error, opts = {}) {\n    let boundaryMatch = findNearestBoundary(state.matches, routeId);\n    deleteFetcher(key);\n    updateState(\n      {\n        errors: {\n          [boundaryMatch.route.id]: error\n        },\n        fetchers: new Map(state.fetchers)\n      },\n      { flushSync: (opts && opts.flushSync) === true }\n    );\n  }\n  function getFetcher(key) {\n    activeFetchers.set(key, (activeFetchers.get(key) || 0) + 1);\n    if (fetchersQueuedForDeletion.has(key)) {\n      fetchersQueuedForDeletion.delete(key);\n    }\n    return state.fetchers.get(key) || IDLE_FETCHER;\n  }\n  function deleteFetcher(key) {\n    let fetcher = state.fetchers.get(key);\n    if (fetchControllers.has(key) && !(fetcher && fetcher.state === \"loading\" && fetchReloadIds.has(key))) {\n      abortFetcher(key);\n    }\n    fetchLoadMatches.delete(key);\n    fetchReloadIds.delete(key);\n    fetchRedirectIds.delete(key);\n    fetchersQueuedForDeletion.delete(key);\n    cancelledFetcherLoads.delete(key);\n    state.fetchers.delete(key);\n  }\n  function queueFetcherForDeletion(key) {\n    let count = (activeFetchers.get(key) || 0) - 1;\n    if (count <= 0) {\n      activeFetchers.delete(key);\n      fetchersQueuedForDeletion.add(key);\n    } else {\n      activeFetchers.set(key, count);\n    }\n    updateState({ fetchers: new Map(state.fetchers) });\n  }\n  function abortFetcher(key) {\n    let controller = fetchControllers.get(key);\n    if (controller) {\n      controller.abort();\n      fetchControllers.delete(key);\n    }\n  }\n  function markFetchersDone(keys) {\n    for (let key of keys) {\n      let fetcher = getFetcher(key);\n      let doneFetcher = getDoneFetcher(fetcher.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n  }\n  function markFetchRedirectsDone() {\n    let doneKeys = [];\n    let updatedFetchers = false;\n    for (let key of fetchRedirectIds) {\n      let fetcher = state.fetchers.get(key);\n      invariant(fetcher, `Expected fetcher: ${key}`);\n      if (fetcher.state === \"loading\") {\n        fetchRedirectIds.delete(key);\n        doneKeys.push(key);\n        updatedFetchers = true;\n      }\n    }\n    markFetchersDone(doneKeys);\n    return updatedFetchers;\n  }\n  function abortStaleFetchLoads(landedId) {\n    let yeetedKeys = [];\n    for (let [key, id] of fetchReloadIds) {\n      if (id < landedId) {\n        let fetcher = state.fetchers.get(key);\n        invariant(fetcher, `Expected fetcher: ${key}`);\n        if (fetcher.state === \"loading\") {\n          abortFetcher(key);\n          fetchReloadIds.delete(key);\n          yeetedKeys.push(key);\n        }\n      }\n    }\n    markFetchersDone(yeetedKeys);\n    return yeetedKeys.length > 0;\n  }\n  function getBlocker(key, fn) {\n    let blocker = state.blockers.get(key) || IDLE_BLOCKER;\n    if (blockerFunctions.get(key) !== fn) {\n      blockerFunctions.set(key, fn);\n    }\n    return blocker;\n  }\n  function deleteBlocker(key) {\n    state.blockers.delete(key);\n    blockerFunctions.delete(key);\n  }\n  function updateBlocker(key, newBlocker) {\n    let blocker = state.blockers.get(key) || IDLE_BLOCKER;\n    invariant(\n      blocker.state === \"unblocked\" && newBlocker.state === \"blocked\" || blocker.state === \"blocked\" && newBlocker.state === \"blocked\" || blocker.state === \"blocked\" && newBlocker.state === \"proceeding\" || blocker.state === \"blocked\" && newBlocker.state === \"unblocked\" || blocker.state === \"proceeding\" && newBlocker.state === \"unblocked\",\n      `Invalid blocker state transition: ${blocker.state} -> ${newBlocker.state}`\n    );\n    let blockers = new Map(state.blockers);\n    blockers.set(key, newBlocker);\n    updateState({ blockers });\n  }\n  function shouldBlockNavigation({\n    currentLocation,\n    nextLocation,\n    historyAction\n  }) {\n    if (blockerFunctions.size === 0) {\n      return;\n    }\n    if (blockerFunctions.size > 1) {\n      warning(false, \"A router only supports one blocker at a time\");\n    }\n    let entries = Array.from(blockerFunctions.entries());\n    let [blockerKey, blockerFunction] = entries[entries.length - 1];\n    let blocker = state.blockers.get(blockerKey);\n    if (blocker && blocker.state === \"proceeding\") {\n      return;\n    }\n    if (blockerFunction({ currentLocation, nextLocation, historyAction })) {\n      return blockerKey;\n    }\n  }\n  function handleNavigational404(pathname) {\n    let error = getInternalRouterError(404, { pathname });\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let { matches, route } = getShortCircuitMatches(routesToUse);\n    return { notFoundMatches: matches, route, error };\n  }\n  function enableScrollRestoration(positions, getPosition, getKey) {\n    savedScrollPositions2 = positions;\n    getScrollPosition = getPosition;\n    getScrollRestorationKey2 = getKey || null;\n    if (!initialScrollRestored && state.navigation === IDLE_NAVIGATION) {\n      initialScrollRestored = true;\n      let y = getSavedScrollPosition(state.location, state.matches);\n      if (y != null) {\n        updateState({ restoreScrollPosition: y });\n      }\n    }\n    return () => {\n      savedScrollPositions2 = null;\n      getScrollPosition = null;\n      getScrollRestorationKey2 = null;\n    };\n  }\n  function getScrollKey(location, matches) {\n    if (getScrollRestorationKey2) {\n      let key = getScrollRestorationKey2(\n        location,\n        matches.map((m) => convertRouteMatchToUiMatch(m, state.loaderData))\n      );\n      return key || location.key;\n    }\n    return location.key;\n  }\n  function saveScrollPosition(location, matches) {\n    if (savedScrollPositions2 && getScrollPosition) {\n      let key = getScrollKey(location, matches);\n      savedScrollPositions2[key] = getScrollPosition();\n    }\n  }\n  function getSavedScrollPosition(location, matches) {\n    if (savedScrollPositions2) {\n      let key = getScrollKey(location, matches);\n      let y = savedScrollPositions2[key];\n      if (typeof y === \"number\") {\n        return y;\n      }\n    }\n    return null;\n  }\n  function checkFogOfWar(matches, routesToUse, pathname) {\n    if (init.patchRoutesOnNavigation) {\n      if (!matches) {\n        let fogMatches = matchRoutesImpl(\n          routesToUse,\n          pathname,\n          basename,\n          true\n        );\n        return { active: true, matches: fogMatches || [] };\n      } else {\n        if (Object.keys(matches[0].params).length > 0) {\n          let partialMatches = matchRoutesImpl(\n            routesToUse,\n            pathname,\n            basename,\n            true\n          );\n          return { active: true, matches: partialMatches };\n        }\n      }\n    }\n    return { active: false, matches: null };\n  }\n  async function discoverRoutes(matches, pathname, signal, fetcherKey) {\n    if (!init.patchRoutesOnNavigation) {\n      return { type: \"success\", matches };\n    }\n    let partialMatches = matches;\n    while (true) {\n      let isNonHMR = inFlightDataRoutes == null;\n      let routesToUse = inFlightDataRoutes || dataRoutes;\n      let localManifest = manifest;\n      try {\n        await init.patchRoutesOnNavigation({\n          signal,\n          path: pathname,\n          matches: partialMatches,\n          fetcherKey,\n          patch: (routeId, children) => {\n            if (signal.aborted) return;\n            patchRoutesImpl(\n              routeId,\n              children,\n              routesToUse,\n              localManifest,\n              mapRouteProperties2,\n              false\n            );\n          }\n        });\n      } catch (e) {\n        return { type: \"error\", error: e, partialMatches };\n      } finally {\n        if (isNonHMR && !signal.aborted) {\n          dataRoutes = [...dataRoutes];\n        }\n      }\n      if (signal.aborted) {\n        return { type: \"aborted\" };\n      }\n      let newMatches = matchRoutes(routesToUse, pathname, basename);\n      if (newMatches) {\n        return { type: \"success\", matches: newMatches };\n      }\n      let newPartialMatches = matchRoutesImpl(\n        routesToUse,\n        pathname,\n        basename,\n        true\n      );\n      if (!newPartialMatches || partialMatches.length === newPartialMatches.length && partialMatches.every(\n        (m, i) => m.route.id === newPartialMatches[i].route.id\n      )) {\n        return { type: \"success\", matches: null };\n      }\n      partialMatches = newPartialMatches;\n    }\n  }\n  function _internalSetRoutes(newRoutes) {\n    manifest = {};\n    inFlightDataRoutes = convertRoutesToDataRoutes(\n      newRoutes,\n      mapRouteProperties2,\n      void 0,\n      manifest\n    );\n  }\n  function patchRoutes(routeId, children, unstable_allowElementMutations = false) {\n    let isNonHMR = inFlightDataRoutes == null;\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    patchRoutesImpl(\n      routeId,\n      children,\n      routesToUse,\n      manifest,\n      mapRouteProperties2,\n      unstable_allowElementMutations\n    );\n    if (isNonHMR) {\n      dataRoutes = [...dataRoutes];\n      updateState({});\n    }\n  }\n  router = {\n    get basename() {\n      return basename;\n    },\n    get future() {\n      return future;\n    },\n    get state() {\n      return state;\n    },\n    get routes() {\n      return dataRoutes;\n    },\n    get window() {\n      return routerWindow;\n    },\n    initialize,\n    subscribe,\n    enableScrollRestoration,\n    navigate,\n    fetch: fetch2,\n    revalidate,\n    // Passthrough to history-aware createHref used by useHref so we get proper\n    // hash-aware URLs in DOM paths\n    createHref: (to) => init.history.createHref(to),\n    encodeLocation: (to) => init.history.encodeLocation(to),\n    getFetcher,\n    deleteFetcher: queueFetcherForDeletion,\n    dispose,\n    getBlocker,\n    deleteBlocker,\n    patchRoutes,\n    _internalFetchControllers: fetchControllers,\n    // TODO: Remove setRoutes, it's temporary to avoid dealing with\n    // updating the tree while validating the update algorithm.\n    _internalSetRoutes,\n    _internalSetStateDoNotUseOrYouWillBreakYourApp(newState) {\n      updateState(newState);\n    }\n  };\n  return router;\n}\nfunction createStaticHandler(routes, opts) {\n  invariant(\n    routes.length > 0,\n    \"You must provide a non-empty routes array to createStaticHandler\"\n  );\n  let manifest = {};\n  let basename = (opts ? opts.basename : null) || \"/\";\n  let mapRouteProperties2 = opts?.mapRouteProperties || defaultMapRouteProperties;\n  let dataRoutes = convertRoutesToDataRoutes(\n    routes,\n    mapRouteProperties2,\n    void 0,\n    manifest\n  );\n  async function query(request, {\n    requestContext,\n    filterMatchesToLoad,\n    skipLoaderErrorBubbling,\n    skipRevalidation,\n    dataStrategy,\n    unstable_generateMiddlewareResponse: generateMiddlewareResponse\n  } = {}) {\n    let url = new URL(request.url);\n    let method = request.method;\n    let location = createLocation(\"\", createPath(url), null, \"default\");\n    let matches = matchRoutes(dataRoutes, location, basename);\n    requestContext = requestContext != null ? requestContext : new unstable_RouterContextProvider();\n    if (!isValidMethod(method) && method !== \"HEAD\") {\n      let error = getInternalRouterError(405, { method });\n      let { matches: methodNotAllowedMatches, route } = getShortCircuitMatches(dataRoutes);\n      let staticContext = {\n        basename,\n        location,\n        matches: methodNotAllowedMatches,\n        loaderData: {},\n        actionData: null,\n        errors: {\n          [route.id]: error\n        },\n        statusCode: error.status,\n        loaderHeaders: {},\n        actionHeaders: {}\n      };\n      return generateMiddlewareResponse ? generateMiddlewareResponse(() => Promise.resolve(staticContext)) : staticContext;\n    } else if (!matches) {\n      let error = getInternalRouterError(404, { pathname: location.pathname });\n      let { matches: notFoundMatches, route } = getShortCircuitMatches(dataRoutes);\n      let staticContext = {\n        basename,\n        location,\n        matches: notFoundMatches,\n        loaderData: {},\n        actionData: null,\n        errors: {\n          [route.id]: error\n        },\n        statusCode: error.status,\n        loaderHeaders: {},\n        actionHeaders: {}\n      };\n      return generateMiddlewareResponse ? generateMiddlewareResponse(() => Promise.resolve(staticContext)) : staticContext;\n    }\n    if (generateMiddlewareResponse) {\n      invariant(\n        requestContext instanceof unstable_RouterContextProvider,\n        \"When using middleware in `staticHandler.query()`, any provided `requestContext` must be an instance of `unstable_RouterContextProvider`\"\n      );\n      try {\n        await loadLazyMiddlewareForMatches(\n          matches,\n          manifest,\n          mapRouteProperties2\n        );\n        let renderedStaticContext;\n        let response = await runServerMiddlewarePipeline(\n          {\n            request,\n            matches,\n            params: matches[0].params,\n            // If we're calling middleware then it must be enabled so we can cast\n            // this to the proper type knowing it's not an `AppLoadContext`\n            context: requestContext\n          },\n          async () => {\n            let res = await generateMiddlewareResponse(\n              async (revalidationRequest) => {\n                let result2 = await queryImpl(\n                  revalidationRequest,\n                  location,\n                  matches,\n                  requestContext,\n                  dataStrategy || null,\n                  skipLoaderErrorBubbling === true,\n                  null,\n                  filterMatchesToLoad || null,\n                  skipRevalidation === true\n                );\n                if (isResponse(result2)) {\n                  return result2;\n                }\n                renderedStaticContext = { location, basename, ...result2 };\n                return renderedStaticContext;\n              }\n            );\n            return res;\n          },\n          async (error, routeId) => {\n            if (isRedirectResponse(error)) {\n              return error;\n            }\n            if (isResponse(error)) {\n              try {\n                error = new ErrorResponseImpl(\n                  error.status,\n                  error.statusText,\n                  await parseResponseBody(error)\n                );\n              } catch (e) {\n                error = e;\n              }\n            }\n            if (isDataWithResponseInit(error)) {\n              error = dataWithResponseInitToErrorResponse(error);\n            }\n            if (renderedStaticContext) {\n              if (routeId in renderedStaticContext.loaderData) {\n                renderedStaticContext.loaderData[routeId] = void 0;\n              }\n              let staticContext = getStaticContextFromError(\n                dataRoutes,\n                renderedStaticContext,\n                error,\n                skipLoaderErrorBubbling ? routeId : findNearestBoundary(matches, routeId).route.id\n              );\n              return generateMiddlewareResponse(\n                () => Promise.resolve(staticContext)\n              );\n            } else {\n              let boundaryRouteId = skipLoaderErrorBubbling ? routeId : findNearestBoundary(\n                matches,\n                matches.find(\n                  (m) => m.route.id === routeId || m.route.loader\n                )?.route.id || routeId\n              ).route.id;\n              let staticContext = {\n                matches,\n                location,\n                basename,\n                loaderData: {},\n                actionData: null,\n                errors: {\n                  [boundaryRouteId]: error\n                },\n                statusCode: isRouteErrorResponse(error) ? error.status : 500,\n                actionHeaders: {},\n                loaderHeaders: {}\n              };\n              return generateMiddlewareResponse(\n                () => Promise.resolve(staticContext)\n              );\n            }\n          }\n        );\n        invariant(isResponse(response), \"Expected a response in query()\");\n        return response;\n      } catch (e) {\n        if (isResponse(e)) {\n          return e;\n        }\n        throw e;\n      }\n    }\n    let result = await queryImpl(\n      request,\n      location,\n      matches,\n      requestContext,\n      dataStrategy || null,\n      skipLoaderErrorBubbling === true,\n      null,\n      filterMatchesToLoad || null,\n      skipRevalidation === true\n    );\n    if (isResponse(result)) {\n      return result;\n    }\n    return { location, basename, ...result };\n  }\n  async function queryRoute(request, {\n    routeId,\n    requestContext,\n    dataStrategy,\n    unstable_generateMiddlewareResponse: generateMiddlewareResponse\n  } = {}) {\n    let url = new URL(request.url);\n    let method = request.method;\n    let location = createLocation(\"\", createPath(url), null, \"default\");\n    let matches = matchRoutes(dataRoutes, location, basename);\n    requestContext = requestContext != null ? requestContext : new unstable_RouterContextProvider();\n    if (!isValidMethod(method) && method !== \"HEAD\" && method !== \"OPTIONS\") {\n      throw getInternalRouterError(405, { method });\n    } else if (!matches) {\n      throw getInternalRouterError(404, { pathname: location.pathname });\n    }\n    let match = routeId ? matches.find((m) => m.route.id === routeId) : getTargetMatch(matches, location);\n    if (routeId && !match) {\n      throw getInternalRouterError(403, {\n        pathname: location.pathname,\n        routeId\n      });\n    } else if (!match) {\n      throw getInternalRouterError(404, { pathname: location.pathname });\n    }\n    if (generateMiddlewareResponse) {\n      invariant(\n        requestContext instanceof unstable_RouterContextProvider,\n        \"When using middleware in `staticHandler.queryRoute()`, any provided `requestContext` must be an instance of `unstable_RouterContextProvider`\"\n      );\n      await loadLazyMiddlewareForMatches(matches, manifest, mapRouteProperties2);\n      let response = await runServerMiddlewarePipeline(\n        {\n          request,\n          matches,\n          params: matches[0].params,\n          // If we're calling middleware then it must be enabled so we can cast\n          // this to the proper type knowing it's not an `AppLoadContext`\n          context: requestContext\n        },\n        async () => {\n          let res = await generateMiddlewareResponse(\n            async (innerRequest) => {\n              let result2 = await queryImpl(\n                innerRequest,\n                location,\n                matches,\n                requestContext,\n                dataStrategy || null,\n                false,\n                match,\n                null,\n                false\n              );\n              let processed = handleQueryResult(result2);\n              return isResponse(processed) ? processed : typeof processed === \"string\" ? new Response(processed) : Response.json(processed);\n            }\n          );\n          return res;\n        },\n        (error) => {\n          if (isDataWithResponseInit(error)) {\n            return Promise.resolve(dataWithResponseInitToResponse(error));\n          }\n          if (isResponse(error)) {\n            return Promise.resolve(error);\n          }\n          throw error;\n        }\n      );\n      return response;\n    }\n    let result = await queryImpl(\n      request,\n      location,\n      matches,\n      requestContext,\n      dataStrategy || null,\n      false,\n      match,\n      null,\n      false\n    );\n    return handleQueryResult(result);\n    function handleQueryResult(result2) {\n      if (isResponse(result2)) {\n        return result2;\n      }\n      let error = result2.errors ? Object.values(result2.errors)[0] : void 0;\n      if (error !== void 0) {\n        throw error;\n      }\n      if (result2.actionData) {\n        return Object.values(result2.actionData)[0];\n      }\n      if (result2.loaderData) {\n        return Object.values(result2.loaderData)[0];\n      }\n      return void 0;\n    }\n  }\n  async function queryImpl(request, location, matches, requestContext, dataStrategy, skipLoaderErrorBubbling, routeMatch, filterMatchesToLoad, skipRevalidation) {\n    invariant(\n      request.signal,\n      \"query()/queryRoute() requests must contain an AbortController signal\"\n    );\n    try {\n      if (isMutationMethod(request.method)) {\n        let result2 = await submit(\n          request,\n          matches,\n          routeMatch || getTargetMatch(matches, location),\n          requestContext,\n          dataStrategy,\n          skipLoaderErrorBubbling,\n          routeMatch != null,\n          filterMatchesToLoad,\n          skipRevalidation\n        );\n        return result2;\n      }\n      let result = await loadRouteData(\n        request,\n        matches,\n        requestContext,\n        dataStrategy,\n        skipLoaderErrorBubbling,\n        routeMatch,\n        filterMatchesToLoad\n      );\n      return isResponse(result) ? result : {\n        ...result,\n        actionData: null,\n        actionHeaders: {}\n      };\n    } catch (e) {\n      if (isDataStrategyResult(e) && isResponse(e.result)) {\n        if (e.type === \"error\" /* error */) {\n          throw e.result;\n        }\n        return e.result;\n      }\n      if (isRedirectResponse(e)) {\n        return e;\n      }\n      throw e;\n    }\n  }\n  async function submit(request, matches, actionMatch, requestContext, dataStrategy, skipLoaderErrorBubbling, isRouteRequest, filterMatchesToLoad, skipRevalidation) {\n    let result;\n    if (!actionMatch.route.action && !actionMatch.route.lazy) {\n      let error = getInternalRouterError(405, {\n        method: request.method,\n        pathname: new URL(request.url).pathname,\n        routeId: actionMatch.route.id\n      });\n      if (isRouteRequest) {\n        throw error;\n      }\n      result = {\n        type: \"error\" /* error */,\n        error\n      };\n    } else {\n      let dsMatches = getTargetedDataStrategyMatches(\n        mapRouteProperties2,\n        manifest,\n        request,\n        matches,\n        actionMatch,\n        [],\n        requestContext\n      );\n      let results = await callDataStrategy(\n        request,\n        dsMatches,\n        isRouteRequest,\n        requestContext,\n        dataStrategy\n      );\n      result = results[actionMatch.route.id];\n      if (request.signal.aborted) {\n        throwStaticHandlerAbortedError(request, isRouteRequest);\n      }\n    }\n    if (isRedirectResult(result)) {\n      throw new Response(null, {\n        status: result.response.status,\n        headers: {\n          Location: result.response.headers.get(\"Location\")\n        }\n      });\n    }\n    if (isRouteRequest) {\n      if (isErrorResult(result)) {\n        throw result.error;\n      }\n      return {\n        matches: [actionMatch],\n        loaderData: {},\n        actionData: { [actionMatch.route.id]: result.data },\n        errors: null,\n        // Note: statusCode + headers are unused here since queryRoute will\n        // return the raw Response or value\n        statusCode: 200,\n        loaderHeaders: {},\n        actionHeaders: {}\n      };\n    }\n    if (skipRevalidation) {\n      if (isErrorResult(result)) {\n        let boundaryMatch = skipLoaderErrorBubbling ? actionMatch : findNearestBoundary(matches, actionMatch.route.id);\n        return {\n          statusCode: isRouteErrorResponse(result.error) ? result.error.status : result.statusCode != null ? result.statusCode : 500,\n          actionData: null,\n          actionHeaders: {\n            ...result.headers ? { [actionMatch.route.id]: result.headers } : {}\n          },\n          matches,\n          loaderData: {},\n          errors: {\n            [boundaryMatch.route.id]: result.error\n          },\n          loaderHeaders: {}\n        };\n      } else {\n        return {\n          actionData: {\n            [actionMatch.route.id]: result.data\n          },\n          actionHeaders: result.headers ? { [actionMatch.route.id]: result.headers } : {},\n          matches,\n          loaderData: {},\n          errors: null,\n          statusCode: result.statusCode || 200,\n          loaderHeaders: {}\n        };\n      }\n    }\n    let loaderRequest = new Request(request.url, {\n      headers: request.headers,\n      redirect: request.redirect,\n      signal: request.signal\n    });\n    if (isErrorResult(result)) {\n      let boundaryMatch = skipLoaderErrorBubbling ? actionMatch : findNearestBoundary(matches, actionMatch.route.id);\n      let handlerContext2 = await loadRouteData(\n        loaderRequest,\n        matches,\n        requestContext,\n        dataStrategy,\n        skipLoaderErrorBubbling,\n        null,\n        filterMatchesToLoad,\n        [boundaryMatch.route.id, result]\n      );\n      return {\n        ...handlerContext2,\n        statusCode: isRouteErrorResponse(result.error) ? result.error.status : result.statusCode != null ? result.statusCode : 500,\n        actionData: null,\n        actionHeaders: {\n          ...result.headers ? { [actionMatch.route.id]: result.headers } : {}\n        }\n      };\n    }\n    let handlerContext = await loadRouteData(\n      loaderRequest,\n      matches,\n      requestContext,\n      dataStrategy,\n      skipLoaderErrorBubbling,\n      null,\n      filterMatchesToLoad\n    );\n    return {\n      ...handlerContext,\n      actionData: {\n        [actionMatch.route.id]: result.data\n      },\n      // action status codes take precedence over loader status codes\n      ...result.statusCode ? { statusCode: result.statusCode } : {},\n      actionHeaders: result.headers ? { [actionMatch.route.id]: result.headers } : {}\n    };\n  }\n  async function loadRouteData(request, matches, requestContext, dataStrategy, skipLoaderErrorBubbling, routeMatch, filterMatchesToLoad, pendingActionResult) {\n    let isRouteRequest = routeMatch != null;\n    if (isRouteRequest && !routeMatch?.route.loader && !routeMatch?.route.lazy) {\n      throw getInternalRouterError(400, {\n        method: request.method,\n        pathname: new URL(request.url).pathname,\n        routeId: routeMatch?.route.id\n      });\n    }\n    let dsMatches;\n    if (routeMatch) {\n      dsMatches = getTargetedDataStrategyMatches(\n        mapRouteProperties2,\n        manifest,\n        request,\n        matches,\n        routeMatch,\n        [],\n        requestContext\n      );\n    } else {\n      let maxIdx = pendingActionResult && isErrorResult(pendingActionResult[1]) ? (\n        // Up to but not including the boundary\n        matches.findIndex((m) => m.route.id === pendingActionResult[0]) - 1\n      ) : void 0;\n      dsMatches = matches.map((match, index) => {\n        if (maxIdx != null && index > maxIdx) {\n          return getDataStrategyMatch(\n            mapRouteProperties2,\n            manifest,\n            request,\n            match,\n            [],\n            requestContext,\n            false\n          );\n        }\n        return getDataStrategyMatch(\n          mapRouteProperties2,\n          manifest,\n          request,\n          match,\n          [],\n          requestContext,\n          (match.route.loader || match.route.lazy) != null && (!filterMatchesToLoad || filterMatchesToLoad(match))\n        );\n      });\n    }\n    if (!dataStrategy && !dsMatches.some((m) => m.shouldLoad)) {\n      return {\n        matches,\n        loaderData: {},\n        errors: pendingActionResult && isErrorResult(pendingActionResult[1]) ? {\n          [pendingActionResult[0]]: pendingActionResult[1].error\n        } : null,\n        statusCode: 200,\n        loaderHeaders: {}\n      };\n    }\n    let results = await callDataStrategy(\n      request,\n      dsMatches,\n      isRouteRequest,\n      requestContext,\n      dataStrategy\n    );\n    if (request.signal.aborted) {\n      throwStaticHandlerAbortedError(request, isRouteRequest);\n    }\n    let handlerContext = processRouteLoaderData(\n      matches,\n      results,\n      pendingActionResult,\n      true,\n      skipLoaderErrorBubbling\n    );\n    return {\n      ...handlerContext,\n      matches\n    };\n  }\n  async function callDataStrategy(request, matches, isRouteRequest, requestContext, dataStrategy) {\n    let results = await callDataStrategyImpl(\n      dataStrategy || defaultDataStrategy,\n      request,\n      matches,\n      null,\n      requestContext,\n      true\n    );\n    let dataResults = {};\n    await Promise.all(\n      matches.map(async (match) => {\n        if (!(match.route.id in results)) {\n          return;\n        }\n        let result = results[match.route.id];\n        if (isRedirectDataStrategyResult(result)) {\n          let response = result.result;\n          throw normalizeRelativeRoutingRedirectResponse(\n            response,\n            request,\n            match.route.id,\n            matches,\n            basename\n          );\n        }\n        if (isRouteRequest) {\n          if (isResponse(result.result)) {\n            throw result;\n          } else if (isDataWithResponseInit(result.result)) {\n            throw dataWithResponseInitToResponse(result.result);\n          }\n        }\n        dataResults[match.route.id] = await convertDataStrategyResultToDataResult(result);\n      })\n    );\n    return dataResults;\n  }\n  return {\n    dataRoutes,\n    query,\n    queryRoute\n  };\n}\nfunction getStaticContextFromError(routes, handlerContext, error, boundaryId) {\n  let errorBoundaryId = boundaryId || handlerContext._deepestRenderedBoundaryId || routes[0].id;\n  return {\n    ...handlerContext,\n    statusCode: isRouteErrorResponse(error) ? error.status : 500,\n    errors: {\n      [errorBoundaryId]: error\n    }\n  };\n}\nfunction throwStaticHandlerAbortedError(request, isRouteRequest) {\n  if (request.signal.reason !== void 0) {\n    throw request.signal.reason;\n  }\n  let method = isRouteRequest ? \"queryRoute\" : \"query\";\n  throw new Error(\n    `${method}() call aborted without an \\`AbortSignal.reason\\`: ${request.method} ${request.url}`\n  );\n}\nfunction isSubmissionNavigation(opts) {\n  return opts != null && (\"formData\" in opts && opts.formData != null || \"body\" in opts && opts.body !== void 0);\n}\nfunction normalizeTo(location, matches, basename, to, fromRouteId, relative) {\n  let contextualMatches;\n  let activeRouteMatch;\n  if (fromRouteId) {\n    contextualMatches = [];\n    for (let match of matches) {\n      contextualMatches.push(match);\n      if (match.route.id === fromRouteId) {\n        activeRouteMatch = match;\n        break;\n      }\n    }\n  } else {\n    contextualMatches = matches;\n    activeRouteMatch = matches[matches.length - 1];\n  }\n  let path = resolveTo(\n    to ? to : \".\",\n    getResolveToMatches(contextualMatches),\n    stripBasename(location.pathname, basename) || location.pathname,\n    relative === \"path\"\n  );\n  if (to == null) {\n    path.search = location.search;\n    path.hash = location.hash;\n  }\n  if ((to == null || to === \"\" || to === \".\") && activeRouteMatch) {\n    let nakedIndex = hasNakedIndexQuery(path.search);\n    if (activeRouteMatch.route.index && !nakedIndex) {\n      path.search = path.search ? path.search.replace(/^\\?/, \"?index&\") : \"?index\";\n    } else if (!activeRouteMatch.route.index && nakedIndex) {\n      let params = new URLSearchParams(path.search);\n      let indexValues = params.getAll(\"index\");\n      params.delete(\"index\");\n      indexValues.filter((v) => v).forEach((v) => params.append(\"index\", v));\n      let qs = params.toString();\n      path.search = qs ? `?${qs}` : \"\";\n    }\n  }\n  if (basename !== \"/\") {\n    path.pathname = prependBasename({ basename, pathname: path.pathname });\n  }\n  return createPath(path);\n}\nfunction normalizeNavigateOptions(isFetcher, path, opts) {\n  if (!opts || !isSubmissionNavigation(opts)) {\n    return { path };\n  }\n  if (opts.formMethod && !isValidMethod(opts.formMethod)) {\n    return {\n      path,\n      error: getInternalRouterError(405, { method: opts.formMethod })\n    };\n  }\n  let getInvalidBodyError = () => ({\n    path,\n    error: getInternalRouterError(400, { type: \"invalid-body\" })\n  });\n  let rawFormMethod = opts.formMethod || \"get\";\n  let formMethod = rawFormMethod.toUpperCase();\n  let formAction = stripHashFromPath(path);\n  if (opts.body !== void 0) {\n    if (opts.formEncType === \"text/plain\") {\n      if (!isMutationMethod(formMethod)) {\n        return getInvalidBodyError();\n      }\n      let text = typeof opts.body === \"string\" ? opts.body : opts.body instanceof FormData || opts.body instanceof URLSearchParams ? (\n        // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#plain-text-form-data\n        Array.from(opts.body.entries()).reduce(\n          (acc, [name, value]) => `${acc}${name}=${value}\n`,\n          \"\"\n        )\n      ) : String(opts.body);\n      return {\n        path,\n        submission: {\n          formMethod,\n          formAction,\n          formEncType: opts.formEncType,\n          formData: void 0,\n          json: void 0,\n          text\n        }\n      };\n    } else if (opts.formEncType === \"application/json\") {\n      if (!isMutationMethod(formMethod)) {\n        return getInvalidBodyError();\n      }\n      try {\n        let json = typeof opts.body === \"string\" ? JSON.parse(opts.body) : opts.body;\n        return {\n          path,\n          submission: {\n            formMethod,\n            formAction,\n            formEncType: opts.formEncType,\n            formData: void 0,\n            json,\n            text: void 0\n          }\n        };\n      } catch (e) {\n        return getInvalidBodyError();\n      }\n    }\n  }\n  invariant(\n    typeof FormData === \"function\",\n    \"FormData is not available in this environment\"\n  );\n  let searchParams;\n  let formData;\n  if (opts.formData) {\n    searchParams = convertFormDataToSearchParams(opts.formData);\n    formData = opts.formData;\n  } else if (opts.body instanceof FormData) {\n    searchParams = convertFormDataToSearchParams(opts.body);\n    formData = opts.body;\n  } else if (opts.body instanceof URLSearchParams) {\n    searchParams = opts.body;\n    formData = convertSearchParamsToFormData(searchParams);\n  } else if (opts.body == null) {\n    searchParams = new URLSearchParams();\n    formData = new FormData();\n  } else {\n    try {\n      searchParams = new URLSearchParams(opts.body);\n      formData = convertSearchParamsToFormData(searchParams);\n    } catch (e) {\n      return getInvalidBodyError();\n    }\n  }\n  let submission = {\n    formMethod,\n    formAction,\n    formEncType: opts && opts.formEncType || \"application/x-www-form-urlencoded\",\n    formData,\n    json: void 0,\n    text: void 0\n  };\n  if (isMutationMethod(submission.formMethod)) {\n    return { path, submission };\n  }\n  let parsedPath = parsePath(path);\n  if (isFetcher && parsedPath.search && hasNakedIndexQuery(parsedPath.search)) {\n    searchParams.append(\"index\", \"\");\n  }\n  parsedPath.search = `?${searchParams}`;\n  return { path: createPath(parsedPath), submission };\n}\nfunction getMatchesToLoad(request, scopedContext, mapRouteProperties2, manifest, history, state, matches, submission, location, lazyRoutePropertiesToSkip, initialHydration, isRevalidationRequired, cancelledFetcherLoads, fetchersQueuedForDeletion, fetchLoadMatches, fetchRedirectIds, routesToUse, basename, hasPatchRoutesOnNavigation, pendingActionResult) {\n  let actionResult = pendingActionResult ? isErrorResult(pendingActionResult[1]) ? pendingActionResult[1].error : pendingActionResult[1].data : void 0;\n  let currentUrl = history.createURL(state.location);\n  let nextUrl = history.createURL(location);\n  let maxIdx;\n  if (initialHydration && state.errors) {\n    let boundaryId = Object.keys(state.errors)[0];\n    maxIdx = matches.findIndex((m) => m.route.id === boundaryId);\n  } else if (pendingActionResult && isErrorResult(pendingActionResult[1])) {\n    let boundaryId = pendingActionResult[0];\n    maxIdx = matches.findIndex((m) => m.route.id === boundaryId) - 1;\n  }\n  let actionStatus = pendingActionResult ? pendingActionResult[1].statusCode : void 0;\n  let shouldSkipRevalidation = actionStatus && actionStatus >= 400;\n  let baseShouldRevalidateArgs = {\n    currentUrl,\n    currentParams: state.matches[0]?.params || {},\n    nextUrl,\n    nextParams: matches[0].params,\n    ...submission,\n    actionResult,\n    actionStatus\n  };\n  let dsMatches = matches.map((match, index) => {\n    let { route } = match;\n    let forceShouldLoad = null;\n    if (maxIdx != null && index > maxIdx) {\n      forceShouldLoad = false;\n    } else if (route.lazy) {\n      forceShouldLoad = true;\n    } else if (route.loader == null) {\n      forceShouldLoad = false;\n    } else if (initialHydration) {\n      forceShouldLoad = shouldLoadRouteOnHydration(\n        route,\n        state.loaderData,\n        state.errors\n      );\n    } else if (isNewLoader(state.loaderData, state.matches[index], match)) {\n      forceShouldLoad = true;\n    }\n    if (forceShouldLoad !== null) {\n      return getDataStrategyMatch(\n        mapRouteProperties2,\n        manifest,\n        request,\n        match,\n        lazyRoutePropertiesToSkip,\n        scopedContext,\n        forceShouldLoad\n      );\n    }\n    let defaultShouldRevalidate = shouldSkipRevalidation ? false : (\n      // Forced revalidation due to submission, useRevalidator, or X-Remix-Revalidate\n      isRevalidationRequired || currentUrl.pathname + currentUrl.search === nextUrl.pathname + nextUrl.search || // Search params affect all loaders\n      currentUrl.search !== nextUrl.search || isNewRouteInstance(state.matches[index], match)\n    );\n    let shouldRevalidateArgs = {\n      ...baseShouldRevalidateArgs,\n      defaultShouldRevalidate\n    };\n    let shouldLoad = shouldRevalidateLoader(match, shouldRevalidateArgs);\n    return getDataStrategyMatch(\n      mapRouteProperties2,\n      manifest,\n      request,\n      match,\n      lazyRoutePropertiesToSkip,\n      scopedContext,\n      shouldLoad,\n      shouldRevalidateArgs\n    );\n  });\n  let revalidatingFetchers = [];\n  fetchLoadMatches.forEach((f, key) => {\n    if (initialHydration || !matches.some((m) => m.route.id === f.routeId) || fetchersQueuedForDeletion.has(key)) {\n      return;\n    }\n    let fetcher = state.fetchers.get(key);\n    let isMidInitialLoad = fetcher && fetcher.state !== \"idle\" && fetcher.data === void 0;\n    let fetcherMatches = matchRoutes(routesToUse, f.path, basename);\n    if (!fetcherMatches) {\n      if (hasPatchRoutesOnNavigation && isMidInitialLoad) {\n        return;\n      }\n      revalidatingFetchers.push({\n        key,\n        routeId: f.routeId,\n        path: f.path,\n        matches: null,\n        match: null,\n        request: null,\n        controller: null\n      });\n      return;\n    }\n    if (fetchRedirectIds.has(key)) {\n      return;\n    }\n    let fetcherMatch = getTargetMatch(fetcherMatches, f.path);\n    let fetchController = new AbortController();\n    let fetchRequest = createClientSideRequest(\n      history,\n      f.path,\n      fetchController.signal\n    );\n    let fetcherDsMatches = null;\n    if (cancelledFetcherLoads.has(key)) {\n      cancelledFetcherLoads.delete(key);\n      fetcherDsMatches = getTargetedDataStrategyMatches(\n        mapRouteProperties2,\n        manifest,\n        fetchRequest,\n        fetcherMatches,\n        fetcherMatch,\n        lazyRoutePropertiesToSkip,\n        scopedContext\n      );\n    } else if (isMidInitialLoad) {\n      if (isRevalidationRequired) {\n        fetcherDsMatches = getTargetedDataStrategyMatches(\n          mapRouteProperties2,\n          manifest,\n          fetchRequest,\n          fetcherMatches,\n          fetcherMatch,\n          lazyRoutePropertiesToSkip,\n          scopedContext\n        );\n      }\n    } else {\n      let shouldRevalidateArgs = {\n        ...baseShouldRevalidateArgs,\n        defaultShouldRevalidate: shouldSkipRevalidation ? false : isRevalidationRequired\n      };\n      if (shouldRevalidateLoader(fetcherMatch, shouldRevalidateArgs)) {\n        fetcherDsMatches = getTargetedDataStrategyMatches(\n          mapRouteProperties2,\n          manifest,\n          fetchRequest,\n          fetcherMatches,\n          fetcherMatch,\n          lazyRoutePropertiesToSkip,\n          scopedContext,\n          shouldRevalidateArgs\n        );\n      }\n    }\n    if (fetcherDsMatches) {\n      revalidatingFetchers.push({\n        key,\n        routeId: f.routeId,\n        path: f.path,\n        matches: fetcherDsMatches,\n        match: fetcherMatch,\n        request: fetchRequest,\n        controller: fetchController\n      });\n    }\n  });\n  return { dsMatches, revalidatingFetchers };\n}\nfunction shouldLoadRouteOnHydration(route, loaderData, errors) {\n  if (route.lazy) {\n    return true;\n  }\n  if (!route.loader) {\n    return false;\n  }\n  let hasData = loaderData != null && route.id in loaderData;\n  let hasError = errors != null && errors[route.id] !== void 0;\n  if (!hasData && hasError) {\n    return false;\n  }\n  if (typeof route.loader === \"function\" && route.loader.hydrate === true) {\n    return true;\n  }\n  return !hasData && !hasError;\n}\nfunction isNewLoader(currentLoaderData, currentMatch, match) {\n  let isNew = (\n    // [a] -> [a, b]\n    !currentMatch || // [a, b] -> [a, c]\n    match.route.id !== currentMatch.route.id\n  );\n  let isMissingData = !currentLoaderData.hasOwnProperty(match.route.id);\n  return isNew || isMissingData;\n}\nfunction isNewRouteInstance(currentMatch, match) {\n  let currentPath = currentMatch.route.path;\n  return (\n    // param change for this match, /users/123 -> /users/456\n    currentMatch.pathname !== match.pathname || // splat param changed, which is not present in match.path\n    // e.g. /files/images/avatar.jpg -> files/finances.xls\n    currentPath != null && currentPath.endsWith(\"*\") && currentMatch.params[\"*\"] !== match.params[\"*\"]\n  );\n}\nfunction shouldRevalidateLoader(loaderMatch, arg) {\n  if (loaderMatch.route.shouldRevalidate) {\n    let routeChoice = loaderMatch.route.shouldRevalidate(arg);\n    if (typeof routeChoice === \"boolean\") {\n      return routeChoice;\n    }\n  }\n  return arg.defaultShouldRevalidate;\n}\nfunction patchRoutesImpl(routeId, children, routesToUse, manifest, mapRouteProperties2, allowElementMutations) {\n  let childrenToPatch;\n  if (routeId) {\n    let route = manifest[routeId];\n    invariant(\n      route,\n      `No route found to patch children into: routeId = ${routeId}`\n    );\n    if (!route.children) {\n      route.children = [];\n    }\n    childrenToPatch = route.children;\n  } else {\n    childrenToPatch = routesToUse;\n  }\n  let uniqueChildren = [];\n  let existingChildren = [];\n  children.forEach((newRoute) => {\n    let existingRoute = childrenToPatch.find(\n      (existingRoute2) => isSameRoute(newRoute, existingRoute2)\n    );\n    if (existingRoute) {\n      existingChildren.push({ existingRoute, newRoute });\n    } else {\n      uniqueChildren.push(newRoute);\n    }\n  });\n  if (uniqueChildren.length > 0) {\n    let newRoutes = convertRoutesToDataRoutes(\n      uniqueChildren,\n      mapRouteProperties2,\n      [routeId || \"_\", \"patch\", String(childrenToPatch?.length || \"0\")],\n      manifest\n    );\n    childrenToPatch.push(...newRoutes);\n  }\n  if (allowElementMutations && existingChildren.length > 0) {\n    for (let i = 0; i < existingChildren.length; i++) {\n      let { existingRoute, newRoute } = existingChildren[i];\n      let existingRouteTyped = existingRoute;\n      let [newRouteTyped] = convertRoutesToDataRoutes(\n        [newRoute],\n        mapRouteProperties2,\n        [],\n        // Doesn't matter for mutated routes since they already have an id\n        {},\n        // Don't touch the manifest here since we're updating in place\n        true\n      );\n      Object.assign(existingRouteTyped, {\n        element: newRouteTyped.element ? newRouteTyped.element : existingRouteTyped.element,\n        errorElement: newRouteTyped.errorElement ? newRouteTyped.errorElement : existingRouteTyped.errorElement,\n        hydrateFallbackElement: newRouteTyped.hydrateFallbackElement ? newRouteTyped.hydrateFallbackElement : existingRouteTyped.hydrateFallbackElement\n      });\n    }\n  }\n}\nfunction isSameRoute(newRoute, existingRoute) {\n  if (\"id\" in newRoute && \"id\" in existingRoute && newRoute.id === existingRoute.id) {\n    return true;\n  }\n  if (!(newRoute.index === existingRoute.index && newRoute.path === existingRoute.path && newRoute.caseSensitive === existingRoute.caseSensitive)) {\n    return false;\n  }\n  if ((!newRoute.children || newRoute.children.length === 0) && (!existingRoute.children || existingRoute.children.length === 0)) {\n    return true;\n  }\n  return newRoute.children.every(\n    (aChild, i) => existingRoute.children?.some((bChild) => isSameRoute(aChild, bChild))\n  );\n}\nvar lazyRoutePropertyCache = /* @__PURE__ */ new WeakMap();\nvar loadLazyRouteProperty = ({\n  key,\n  route,\n  manifest,\n  mapRouteProperties: mapRouteProperties2\n}) => {\n  let routeToUpdate = manifest[route.id];\n  invariant(routeToUpdate, \"No route found in manifest\");\n  if (!routeToUpdate.lazy || typeof routeToUpdate.lazy !== \"object\") {\n    return;\n  }\n  let lazyFn = routeToUpdate.lazy[key];\n  if (!lazyFn) {\n    return;\n  }\n  let cache = lazyRoutePropertyCache.get(routeToUpdate);\n  if (!cache) {\n    cache = {};\n    lazyRoutePropertyCache.set(routeToUpdate, cache);\n  }\n  let cachedPromise = cache[key];\n  if (cachedPromise) {\n    return cachedPromise;\n  }\n  let propertyPromise = (async () => {\n    let isUnsupported = isUnsupportedLazyRouteObjectKey(key);\n    let staticRouteValue = routeToUpdate[key];\n    let isStaticallyDefined = staticRouteValue !== void 0 && key !== \"hasErrorBoundary\";\n    if (isUnsupported) {\n      warning(\n        !isUnsupported,\n        \"Route property \" + key + \" is not a supported lazy route property. This property will be ignored.\"\n      );\n      cache[key] = Promise.resolve();\n    } else if (isStaticallyDefined) {\n      warning(\n        false,\n        `Route \"${routeToUpdate.id}\" has a static property \"${key}\" defined. The lazy property will be ignored.`\n      );\n    } else {\n      let value = await lazyFn();\n      if (value != null) {\n        Object.assign(routeToUpdate, { [key]: value });\n        Object.assign(routeToUpdate, mapRouteProperties2(routeToUpdate));\n      }\n    }\n    if (typeof routeToUpdate.lazy === \"object\") {\n      routeToUpdate.lazy[key] = void 0;\n      if (Object.values(routeToUpdate.lazy).every((value) => value === void 0)) {\n        routeToUpdate.lazy = void 0;\n      }\n    }\n  })();\n  cache[key] = propertyPromise;\n  return propertyPromise;\n};\nvar lazyRouteFunctionCache = /* @__PURE__ */ new WeakMap();\nfunction loadLazyRoute(route, type, manifest, mapRouteProperties2, lazyRoutePropertiesToSkip) {\n  let routeToUpdate = manifest[route.id];\n  invariant(routeToUpdate, \"No route found in manifest\");\n  if (!route.lazy) {\n    return {\n      lazyRoutePromise: void 0,\n      lazyHandlerPromise: void 0\n    };\n  }\n  if (typeof route.lazy === \"function\") {\n    let cachedPromise = lazyRouteFunctionCache.get(routeToUpdate);\n    if (cachedPromise) {\n      return {\n        lazyRoutePromise: cachedPromise,\n        lazyHandlerPromise: cachedPromise\n      };\n    }\n    let lazyRoutePromise2 = (async () => {\n      invariant(\n        typeof route.lazy === \"function\",\n        \"No lazy route function found\"\n      );\n      let lazyRoute = await route.lazy();\n      let routeUpdates = {};\n      for (let lazyRouteProperty in lazyRoute) {\n        let lazyValue = lazyRoute[lazyRouteProperty];\n        if (lazyValue === void 0) {\n          continue;\n        }\n        let isUnsupported = isUnsupportedLazyRouteFunctionKey(lazyRouteProperty);\n        let staticRouteValue = routeToUpdate[lazyRouteProperty];\n        let isStaticallyDefined = staticRouteValue !== void 0 && // This property isn't static since it should always be updated based\n        // on the route updates\n        lazyRouteProperty !== \"hasErrorBoundary\";\n        if (isUnsupported) {\n          warning(\n            !isUnsupported,\n            \"Route property \" + lazyRouteProperty + \" is not a supported property to be returned from a lazy route function. This property will be ignored.\"\n          );\n        } else if (isStaticallyDefined) {\n          warning(\n            !isStaticallyDefined,\n            `Route \"${routeToUpdate.id}\" has a static property \"${lazyRouteProperty}\" defined but its lazy function is also returning a value for this property. The lazy route property \"${lazyRouteProperty}\" will be ignored.`\n          );\n        } else {\n          routeUpdates[lazyRouteProperty] = lazyValue;\n        }\n      }\n      Object.assign(routeToUpdate, routeUpdates);\n      Object.assign(routeToUpdate, {\n        // To keep things framework agnostic, we use the provided `mapRouteProperties`\n        // function to set the framework-aware properties (`element`/`hasErrorBoundary`)\n        // since the logic will differ between frameworks.\n        ...mapRouteProperties2(routeToUpdate),\n        lazy: void 0\n      });\n    })();\n    lazyRouteFunctionCache.set(routeToUpdate, lazyRoutePromise2);\n    lazyRoutePromise2.catch(() => {\n    });\n    return {\n      lazyRoutePromise: lazyRoutePromise2,\n      lazyHandlerPromise: lazyRoutePromise2\n    };\n  }\n  let lazyKeys = Object.keys(route.lazy);\n  let lazyPropertyPromises = [];\n  let lazyHandlerPromise = void 0;\n  for (let key of lazyKeys) {\n    if (lazyRoutePropertiesToSkip && lazyRoutePropertiesToSkip.includes(key)) {\n      continue;\n    }\n    let promise = loadLazyRouteProperty({\n      key,\n      route,\n      manifest,\n      mapRouteProperties: mapRouteProperties2\n    });\n    if (promise) {\n      lazyPropertyPromises.push(promise);\n      if (key === type) {\n        lazyHandlerPromise = promise;\n      }\n    }\n  }\n  let lazyRoutePromise = lazyPropertyPromises.length > 0 ? Promise.all(lazyPropertyPromises).then(() => {\n  }) : void 0;\n  lazyRoutePromise?.catch(() => {\n  });\n  lazyHandlerPromise?.catch(() => {\n  });\n  return {\n    lazyRoutePromise,\n    lazyHandlerPromise\n  };\n}\nfunction isNonNullable(value) {\n  return value !== void 0;\n}\nfunction loadLazyMiddlewareForMatches(matches, manifest, mapRouteProperties2) {\n  let promises = matches.map(({ route }) => {\n    if (typeof route.lazy !== \"object\" || !route.lazy.unstable_middleware) {\n      return void 0;\n    }\n    return loadLazyRouteProperty({\n      key: \"unstable_middleware\",\n      route,\n      manifest,\n      mapRouteProperties: mapRouteProperties2\n    });\n  }).filter(isNonNullable);\n  return promises.length > 0 ? Promise.all(promises) : void 0;\n}\nasync function defaultDataStrategy(args) {\n  let matchesToLoad = args.matches.filter((m) => m.shouldLoad);\n  let keyedResults = {};\n  let results = await Promise.all(matchesToLoad.map((m) => m.resolve()));\n  results.forEach((result, i) => {\n    keyedResults[matchesToLoad[i].route.id] = result;\n  });\n  return keyedResults;\n}\nasync function defaultDataStrategyWithMiddleware(args) {\n  if (!args.matches.some((m) => m.route.unstable_middleware)) {\n    return defaultDataStrategy(args);\n  }\n  let didCallHandler = false;\n  return runClientMiddlewarePipeline(\n    args,\n    () => {\n      didCallHandler = true;\n      return defaultDataStrategy(args);\n    },\n    (error, routeId) => clientMiddlewareErrorHandler(\n      error,\n      routeId,\n      args.matches,\n      didCallHandler\n    )\n  );\n}\nfunction clientMiddlewareErrorHandler(error, routeId, matches, didCallHandler) {\n  if (didCallHandler) {\n    return {\n      [routeId]: { type: \"error\", result: error }\n    };\n  } else {\n    let maxBoundaryIdx = Math.min(\n      // Throwing route\n      matches.findIndex((m) => m.route.id === routeId) || 0,\n      // or the shallowest route that needs to load data\n      matches.findIndex((m) => m.unstable_shouldCallHandler()) || 0\n    );\n    let boundaryRouteId = findNearestBoundary(\n      matches,\n      matches[maxBoundaryIdx].route.id\n    ).route.id;\n    return {\n      [boundaryRouteId]: { type: \"error\", result: error }\n    };\n  }\n}\nasync function runServerMiddlewarePipeline(args, handler, errorHandler) {\n  let { matches, request, params, context } = args;\n  let tuples = matches.flatMap(\n    (m) => m.route.unstable_middleware ? m.route.unstable_middleware.map((fn) => [m.route.id, fn]) : []\n  );\n  let result = await callServerRouteMiddleware(\n    { request, params, context },\n    tuples,\n    handler,\n    errorHandler\n  );\n  if (isResponse(result)) {\n    return result;\n  }\n  invariant(false, `Expected a Response to be returned from route middleware`);\n}\nasync function callServerRouteMiddleware(args, middlewares, handler, errorHandler, idx = 0) {\n  let { request } = args;\n  if (request.signal.aborted) {\n    if (request.signal.reason) {\n      throw request.signal.reason;\n    }\n    throw new Error(\n      `Request aborted without an \\`AbortSignal.reason\\`: ${request.method} ${request.url}`\n    );\n  }\n  let tuple = middlewares[idx];\n  if (!tuple) {\n    let result = await handler();\n    return result;\n  }\n  let [routeId, middleware] = tuple;\n  let nextCalled = false;\n  let nextResult = void 0;\n  let next = async () => {\n    if (nextCalled) {\n      throw new Error(\"You may only call `next()` once per middleware\");\n    }\n    nextCalled = true;\n    try {\n      let result = await callServerRouteMiddleware(\n        args,\n        middlewares,\n        handler,\n        errorHandler,\n        idx + 1\n      );\n      if (isDataWithResponseInit(result)) {\n        result = dataWithResponseInitToResponse(result);\n      }\n      nextResult = result;\n      return nextResult;\n    } catch (e) {\n      nextResult = await errorHandler(e, routeId);\n      return nextResult;\n    }\n  };\n  try {\n    let result = await middleware(\n      {\n        request: args.request,\n        params: args.params,\n        context: args.context\n      },\n      next\n    );\n    if (isDataWithResponseInit(result)) {\n      result = dataWithResponseInitToResponse(result);\n    }\n    if (nextCalled) {\n      return typeof result === \"undefined\" ? nextResult : result;\n    } else if (isResponse(result)) {\n      return result;\n    } else {\n      nextResult = await next();\n      return nextResult;\n    }\n  } catch (e) {\n    let response = await errorHandler(e, routeId);\n    return response;\n  }\n}\nasync function runClientMiddlewarePipeline(args, handler, errorHandler) {\n  let { matches, request, params, context } = args;\n  let tuples = matches.flatMap(\n    (m) => m.route.unstable_middleware ? m.route.unstable_middleware.map((fn) => [m.route.id, fn]) : []\n  );\n  let handlerResult = {};\n  await callClientRouteMiddleware(\n    { request, params, context },\n    tuples,\n    handler,\n    errorHandler,\n    handlerResult\n  );\n  return handlerResult;\n}\nasync function callClientRouteMiddleware(args, middlewares, handler, errorHandler, handlerResult = {}, idx = 0) {\n  let { request } = args;\n  if (request.signal.aborted) {\n    if (request.signal.reason) {\n      throw request.signal.reason;\n    }\n    throw new Error(\n      `Request aborted without an \\`AbortSignal.reason\\`: ${request.method} ${request.url}`\n    );\n  }\n  let tuple = middlewares[idx];\n  if (!tuple) {\n    let result = await handler();\n    Object.assign(handlerResult, result);\n    return;\n  }\n  let [routeId, middleware] = tuple;\n  let nextCalled = false;\n  let next = async () => {\n    if (nextCalled) {\n      throw new Error(\"You may only call `next()` once per middleware\");\n    }\n    nextCalled = true;\n    try {\n      let result = await callClientRouteMiddleware(\n        args,\n        middlewares,\n        handler,\n        errorHandler,\n        handlerResult,\n        idx + 1\n      );\n      Object.assign(handlerResult, result);\n    } catch (e) {\n      let result = await errorHandler(e, routeId);\n      Object.assign(handlerResult, result);\n    }\n  };\n  try {\n    let result = await middleware(\n      {\n        request: args.request,\n        params: args.params,\n        context: args.context\n      },\n      next\n    );\n    if (typeof result !== \"undefined\") {\n      console.warn(\n        \"client middlewares are not intended to return values, the value will be ignored\",\n        result\n      );\n    }\n    if (!nextCalled) {\n      await next();\n    }\n  } catch (error) {\n    let result = await errorHandler(error, routeId);\n    Object.assign(handlerResult, result);\n  }\n}\nfunction getDataStrategyMatchLazyPromises(mapRouteProperties2, manifest, request, match, lazyRoutePropertiesToSkip) {\n  let lazyMiddlewarePromise = loadLazyRouteProperty({\n    key: \"unstable_middleware\",\n    route: match.route,\n    manifest,\n    mapRouteProperties: mapRouteProperties2\n  });\n  let lazyRoutePromises = loadLazyRoute(\n    match.route,\n    isMutationMethod(request.method) ? \"action\" : \"loader\",\n    manifest,\n    mapRouteProperties2,\n    lazyRoutePropertiesToSkip\n  );\n  return {\n    middleware: lazyMiddlewarePromise,\n    route: lazyRoutePromises.lazyRoutePromise,\n    handler: lazyRoutePromises.lazyHandlerPromise\n  };\n}\nfunction getDataStrategyMatch(mapRouteProperties2, manifest, request, match, lazyRoutePropertiesToSkip, scopedContext, shouldLoad, unstable_shouldRevalidateArgs = null) {\n  let isUsingNewApi = false;\n  let _lazyPromises = getDataStrategyMatchLazyPromises(\n    mapRouteProperties2,\n    manifest,\n    request,\n    match,\n    lazyRoutePropertiesToSkip\n  );\n  return {\n    ...match,\n    _lazyPromises,\n    shouldLoad,\n    unstable_shouldRevalidateArgs,\n    unstable_shouldCallHandler(defaultShouldRevalidate) {\n      isUsingNewApi = true;\n      if (!unstable_shouldRevalidateArgs) {\n        return shouldLoad;\n      }\n      if (typeof defaultShouldRevalidate === \"boolean\") {\n        return shouldRevalidateLoader(match, {\n          ...unstable_shouldRevalidateArgs,\n          defaultShouldRevalidate\n        });\n      }\n      return shouldRevalidateLoader(match, unstable_shouldRevalidateArgs);\n    },\n    resolve(handlerOverride) {\n      if (isUsingNewApi || shouldLoad || handlerOverride && !isMutationMethod(request.method) && (match.route.lazy || match.route.loader)) {\n        return callLoaderOrAction({\n          request,\n          match,\n          lazyHandlerPromise: _lazyPromises?.handler,\n          lazyRoutePromise: _lazyPromises?.route,\n          handlerOverride,\n          scopedContext\n        });\n      }\n      return Promise.resolve({ type: \"data\" /* data */, result: void 0 });\n    }\n  };\n}\nfunction getTargetedDataStrategyMatches(mapRouteProperties2, manifest, request, matches, targetMatch, lazyRoutePropertiesToSkip, scopedContext, shouldRevalidateArgs = null) {\n  return matches.map((match) => {\n    if (match.route.id !== targetMatch.route.id) {\n      return {\n        ...match,\n        shouldLoad: false,\n        unstable_shouldRevalidateArgs: shouldRevalidateArgs,\n        unstable_shouldCallHandler: () => false,\n        _lazyPromises: getDataStrategyMatchLazyPromises(\n          mapRouteProperties2,\n          manifest,\n          request,\n          match,\n          lazyRoutePropertiesToSkip\n        ),\n        resolve: () => Promise.resolve({ type: \"data\", result: void 0 })\n      };\n    }\n    return getDataStrategyMatch(\n      mapRouteProperties2,\n      manifest,\n      request,\n      match,\n      lazyRoutePropertiesToSkip,\n      scopedContext,\n      true,\n      shouldRevalidateArgs\n    );\n  });\n}\nasync function callDataStrategyImpl(dataStrategyImpl, request, matches, fetcherKey, scopedContext, isStaticHandler) {\n  if (matches.some((m) => m._lazyPromises?.middleware)) {\n    await Promise.all(matches.map((m) => m._lazyPromises?.middleware));\n  }\n  let dataStrategyArgs = {\n    request,\n    params: matches[0].params,\n    context: scopedContext,\n    matches\n  };\n  let unstable_runClientMiddleware = isStaticHandler ? () => {\n    throw new Error(\n      \"You cannot call `unstable_runClientMiddleware()` from a static handler `dataStrategy`. Middleware is run outside of `dataStrategy` during SSR in order to bubble up the Response.  You can enable middleware via the `respond` API in `query`/`queryRoute`\"\n    );\n  } : (cb) => {\n    let typedDataStrategyArgs = dataStrategyArgs;\n    let didCallHandler = false;\n    return runClientMiddlewarePipeline(\n      typedDataStrategyArgs,\n      () => {\n        didCallHandler = true;\n        return cb({\n          ...typedDataStrategyArgs,\n          fetcherKey,\n          unstable_runClientMiddleware: () => {\n            throw new Error(\n              \"Cannot call `unstable_runClientMiddleware()` from within an `unstable_runClientMiddleware` handler\"\n            );\n          }\n        });\n      },\n      (error, routeId) => clientMiddlewareErrorHandler(\n        error,\n        routeId,\n        matches,\n        didCallHandler\n      )\n    );\n  };\n  let results = await dataStrategyImpl({\n    ...dataStrategyArgs,\n    fetcherKey,\n    unstable_runClientMiddleware\n  });\n  try {\n    await Promise.all(\n      matches.flatMap((m) => [\n        m._lazyPromises?.handler,\n        m._lazyPromises?.route\n      ])\n    );\n  } catch (e) {\n  }\n  return results;\n}\nasync function callLoaderOrAction({\n  request,\n  match,\n  lazyHandlerPromise,\n  lazyRoutePromise,\n  handlerOverride,\n  scopedContext\n}) {\n  let result;\n  let onReject;\n  let isAction = isMutationMethod(request.method);\n  let type = isAction ? \"action\" : \"loader\";\n  let runHandler = (handler) => {\n    let reject;\n    let abortPromise = new Promise((_, r) => reject = r);\n    onReject = () => reject();\n    request.signal.addEventListener(\"abort\", onReject);\n    let actualHandler = (ctx) => {\n      if (typeof handler !== \"function\") {\n        return Promise.reject(\n          new Error(\n            `You cannot call the handler for a route which defines a boolean \"${type}\" [routeId: ${match.route.id}]`\n          )\n        );\n      }\n      return handler(\n        {\n          request,\n          params: match.params,\n          context: scopedContext\n        },\n        ...ctx !== void 0 ? [ctx] : []\n      );\n    };\n    let handlerPromise = (async () => {\n      try {\n        let val = await (handlerOverride ? handlerOverride((ctx) => actualHandler(ctx)) : actualHandler());\n        return { type: \"data\", result: val };\n      } catch (e) {\n        return { type: \"error\", result: e };\n      }\n    })();\n    return Promise.race([handlerPromise, abortPromise]);\n  };\n  try {\n    let handler = isAction ? match.route.action : match.route.loader;\n    if (lazyHandlerPromise || lazyRoutePromise) {\n      if (handler) {\n        let handlerError;\n        let [value] = await Promise.all([\n          // If the handler throws, don't let it immediately bubble out,\n          // since we need to let the lazy() execution finish so we know if this\n          // route has a boundary that can handle the error\n          runHandler(handler).catch((e) => {\n            handlerError = e;\n          }),\n          // Ensure all lazy route promises are resolved before continuing\n          lazyHandlerPromise,\n          lazyRoutePromise\n        ]);\n        if (handlerError !== void 0) {\n          throw handlerError;\n        }\n        result = value;\n      } else {\n        await lazyHandlerPromise;\n        let handler2 = isAction ? match.route.action : match.route.loader;\n        if (handler2) {\n          [result] = await Promise.all([runHandler(handler2), lazyRoutePromise]);\n        } else if (type === \"action\") {\n          let url = new URL(request.url);\n          let pathname = url.pathname + url.search;\n          throw getInternalRouterError(405, {\n            method: request.method,\n            pathname,\n            routeId: match.route.id\n          });\n        } else {\n          return { type: \"data\" /* data */, result: void 0 };\n        }\n      }\n    } else if (!handler) {\n      let url = new URL(request.url);\n      let pathname = url.pathname + url.search;\n      throw getInternalRouterError(404, {\n        pathname\n      });\n    } else {\n      result = await runHandler(handler);\n    }\n  } catch (e) {\n    return { type: \"error\" /* error */, result: e };\n  } finally {\n    if (onReject) {\n      request.signal.removeEventListener(\"abort\", onReject);\n    }\n  }\n  return result;\n}\nasync function parseResponseBody(response) {\n  let contentType = response.headers.get(\"Content-Type\");\n  if (contentType && /\\bapplication\\/json\\b/.test(contentType)) {\n    return response.body == null ? null : response.json();\n  }\n  return response.text();\n}\nasync function convertDataStrategyResultToDataResult(dataStrategyResult) {\n  let { result, type } = dataStrategyResult;\n  if (isResponse(result)) {\n    let data2;\n    try {\n      data2 = await parseResponseBody(result);\n    } catch (e) {\n      return { type: \"error\" /* error */, error: e };\n    }\n    if (type === \"error\" /* error */) {\n      return {\n        type: \"error\" /* error */,\n        error: new ErrorResponseImpl(result.status, result.statusText, data2),\n        statusCode: result.status,\n        headers: result.headers\n      };\n    }\n    return {\n      type: \"data\" /* data */,\n      data: data2,\n      statusCode: result.status,\n      headers: result.headers\n    };\n  }\n  if (type === \"error\" /* error */) {\n    if (isDataWithResponseInit(result)) {\n      if (result.data instanceof Error) {\n        return {\n          type: \"error\" /* error */,\n          error: result.data,\n          statusCode: result.init?.status,\n          headers: result.init?.headers ? new Headers(result.init.headers) : void 0\n        };\n      }\n      return {\n        type: \"error\" /* error */,\n        error: new ErrorResponseImpl(\n          result.init?.status || 500,\n          void 0,\n          result.data\n        ),\n        statusCode: isRouteErrorResponse(result) ? result.status : void 0,\n        headers: result.init?.headers ? new Headers(result.init.headers) : void 0\n      };\n    }\n    return {\n      type: \"error\" /* error */,\n      error: result,\n      statusCode: isRouteErrorResponse(result) ? result.status : void 0\n    };\n  }\n  if (isDataWithResponseInit(result)) {\n    return {\n      type: \"data\" /* data */,\n      data: result.data,\n      statusCode: result.init?.status,\n      headers: result.init?.headers ? new Headers(result.init.headers) : void 0\n    };\n  }\n  return { type: \"data\" /* data */, data: result };\n}\nfunction normalizeRelativeRoutingRedirectResponse(response, request, routeId, matches, basename) {\n  let location = response.headers.get(\"Location\");\n  invariant(\n    location,\n    \"Redirects returned/thrown from loaders/actions must have a Location header\"\n  );\n  if (!isAbsoluteUrl(location)) {\n    let trimmedMatches = matches.slice(\n      0,\n      matches.findIndex((m) => m.route.id === routeId) + 1\n    );\n    location = normalizeTo(\n      new URL(request.url),\n      trimmedMatches,\n      basename,\n      location\n    );\n    response.headers.set(\"Location\", location);\n  }\n  return response;\n}\nfunction normalizeRedirectLocation(location, currentUrl, basename) {\n  if (isAbsoluteUrl(location)) {\n    let normalizedLocation = location;\n    let url = normalizedLocation.startsWith(\"//\") ? new URL(currentUrl.protocol + normalizedLocation) : new URL(normalizedLocation);\n    let isSameBasename = stripBasename(url.pathname, basename) != null;\n    if (url.origin === currentUrl.origin && isSameBasename) {\n      return url.pathname + url.search + url.hash;\n    }\n  }\n  return location;\n}\nfunction createClientSideRequest(history, location, signal, submission) {\n  let url = history.createURL(stripHashFromPath(location)).toString();\n  let init = { signal };\n  if (submission && isMutationMethod(submission.formMethod)) {\n    let { formMethod, formEncType } = submission;\n    init.method = formMethod.toUpperCase();\n    if (formEncType === \"application/json\") {\n      init.headers = new Headers({ \"Content-Type\": formEncType });\n      init.body = JSON.stringify(submission.json);\n    } else if (formEncType === \"text/plain\") {\n      init.body = submission.text;\n    } else if (formEncType === \"application/x-www-form-urlencoded\" && submission.formData) {\n      init.body = convertFormDataToSearchParams(submission.formData);\n    } else {\n      init.body = submission.formData;\n    }\n  }\n  return new Request(url, init);\n}\nfunction convertFormDataToSearchParams(formData) {\n  let searchParams = new URLSearchParams();\n  for (let [key, value] of formData.entries()) {\n    searchParams.append(key, typeof value === \"string\" ? value : value.name);\n  }\n  return searchParams;\n}\nfunction convertSearchParamsToFormData(searchParams) {\n  let formData = new FormData();\n  for (let [key, value] of searchParams.entries()) {\n    formData.append(key, value);\n  }\n  return formData;\n}\nfunction processRouteLoaderData(matches, results, pendingActionResult, isStaticHandler = false, skipLoaderErrorBubbling = false) {\n  let loaderData = {};\n  let errors = null;\n  let statusCode;\n  let foundError = false;\n  let loaderHeaders = {};\n  let pendingError = pendingActionResult && isErrorResult(pendingActionResult[1]) ? pendingActionResult[1].error : void 0;\n  matches.forEach((match) => {\n    if (!(match.route.id in results)) {\n      return;\n    }\n    let id = match.route.id;\n    let result = results[id];\n    invariant(\n      !isRedirectResult(result),\n      \"Cannot handle redirect results in processLoaderData\"\n    );\n    if (isErrorResult(result)) {\n      let error = result.error;\n      if (pendingError !== void 0) {\n        error = pendingError;\n        pendingError = void 0;\n      }\n      errors = errors || {};\n      if (skipLoaderErrorBubbling) {\n        errors[id] = error;\n      } else {\n        let boundaryMatch = findNearestBoundary(matches, id);\n        if (errors[boundaryMatch.route.id] == null) {\n          errors[boundaryMatch.route.id] = error;\n        }\n      }\n      if (!isStaticHandler) {\n        loaderData[id] = ResetLoaderDataSymbol;\n      }\n      if (!foundError) {\n        foundError = true;\n        statusCode = isRouteErrorResponse(result.error) ? result.error.status : 500;\n      }\n      if (result.headers) {\n        loaderHeaders[id] = result.headers;\n      }\n    } else {\n      loaderData[id] = result.data;\n      if (result.statusCode && result.statusCode !== 200 && !foundError) {\n        statusCode = result.statusCode;\n      }\n      if (result.headers) {\n        loaderHeaders[id] = result.headers;\n      }\n    }\n  });\n  if (pendingError !== void 0 && pendingActionResult) {\n    errors = { [pendingActionResult[0]]: pendingError };\n    if (pendingActionResult[2]) {\n      loaderData[pendingActionResult[2]] = void 0;\n    }\n  }\n  return {\n    loaderData,\n    errors,\n    statusCode: statusCode || 200,\n    loaderHeaders\n  };\n}\nfunction processLoaderData(state, matches, results, pendingActionResult, revalidatingFetchers, fetcherResults) {\n  let { loaderData, errors } = processRouteLoaderData(\n    matches,\n    results,\n    pendingActionResult\n  );\n  revalidatingFetchers.filter((f) => !f.matches || f.matches.some((m) => m.shouldLoad)).forEach((rf) => {\n    let { key, match, controller } = rf;\n    if (controller && controller.signal.aborted) {\n      return;\n    }\n    let result = fetcherResults[key];\n    invariant(result, \"Did not find corresponding fetcher result\");\n    if (isErrorResult(result)) {\n      let boundaryMatch = findNearestBoundary(state.matches, match?.route.id);\n      if (!(errors && errors[boundaryMatch.route.id])) {\n        errors = {\n          ...errors,\n          [boundaryMatch.route.id]: result.error\n        };\n      }\n      state.fetchers.delete(key);\n    } else if (isRedirectResult(result)) {\n      invariant(false, \"Unhandled fetcher revalidation redirect\");\n    } else {\n      let doneFetcher = getDoneFetcher(result.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n  });\n  return { loaderData, errors };\n}\nfunction mergeLoaderData(loaderData, newLoaderData, matches, errors) {\n  let mergedLoaderData = Object.entries(newLoaderData).filter(([, v]) => v !== ResetLoaderDataSymbol).reduce((merged, [k, v]) => {\n    merged[k] = v;\n    return merged;\n  }, {});\n  for (let match of matches) {\n    let id = match.route.id;\n    if (!newLoaderData.hasOwnProperty(id) && loaderData.hasOwnProperty(id) && match.route.loader) {\n      mergedLoaderData[id] = loaderData[id];\n    }\n    if (errors && errors.hasOwnProperty(id)) {\n      break;\n    }\n  }\n  return mergedLoaderData;\n}\nfunction getActionDataForCommit(pendingActionResult) {\n  if (!pendingActionResult) {\n    return {};\n  }\n  return isErrorResult(pendingActionResult[1]) ? {\n    // Clear out prior actionData on errors\n    actionData: {}\n  } : {\n    actionData: {\n      [pendingActionResult[0]]: pendingActionResult[1].data\n    }\n  };\n}\nfunction findNearestBoundary(matches, routeId) {\n  let eligibleMatches = routeId ? matches.slice(0, matches.findIndex((m) => m.route.id === routeId) + 1) : [...matches];\n  return eligibleMatches.reverse().find((m) => m.route.hasErrorBoundary === true) || matches[0];\n}\nfunction getShortCircuitMatches(routes) {\n  let route = routes.length === 1 ? routes[0] : routes.find((r) => r.index || !r.path || r.path === \"/\") || {\n    id: `__shim-error-route__`\n  };\n  return {\n    matches: [\n      {\n        params: {},\n        pathname: \"\",\n        pathnameBase: \"\",\n        route\n      }\n    ],\n    route\n  };\n}\nfunction getInternalRouterError(status, {\n  pathname,\n  routeId,\n  method,\n  type,\n  message\n} = {}) {\n  let statusText = \"Unknown Server Error\";\n  let errorMessage = \"Unknown @remix-run/router error\";\n  if (status === 400) {\n    statusText = \"Bad Request\";\n    if (method && pathname && routeId) {\n      errorMessage = `You made a ${method} request to \"${pathname}\" but did not provide a \\`loader\\` for route \"${routeId}\", so there is no way to handle the request.`;\n    } else if (type === \"invalid-body\") {\n      errorMessage = \"Unable to encode submission body\";\n    }\n  } else if (status === 403) {\n    statusText = \"Forbidden\";\n    errorMessage = `Route \"${routeId}\" does not match URL \"${pathname}\"`;\n  } else if (status === 404) {\n    statusText = \"Not Found\";\n    errorMessage = `No route matches URL \"${pathname}\"`;\n  } else if (status === 405) {\n    statusText = \"Method Not Allowed\";\n    if (method && pathname && routeId) {\n      errorMessage = `You made a ${method.toUpperCase()} request to \"${pathname}\" but did not provide an \\`action\\` for route \"${routeId}\", so there is no way to handle the request.`;\n    } else if (method) {\n      errorMessage = `Invalid request method \"${method.toUpperCase()}\"`;\n    }\n  }\n  return new ErrorResponseImpl(\n    status || 500,\n    statusText,\n    new Error(errorMessage),\n    true\n  );\n}\nfunction findRedirect(results) {\n  let entries = Object.entries(results);\n  for (let i = entries.length - 1; i >= 0; i--) {\n    let [key, result] = entries[i];\n    if (isRedirectResult(result)) {\n      return { key, result };\n    }\n  }\n}\nfunction stripHashFromPath(path) {\n  let parsedPath = typeof path === \"string\" ? parsePath(path) : path;\n  return createPath({ ...parsedPath, hash: \"\" });\n}\nfunction isHashChangeOnly(a, b) {\n  if (a.pathname !== b.pathname || a.search !== b.search) {\n    return false;\n  }\n  if (a.hash === \"\") {\n    return b.hash !== \"\";\n  } else if (a.hash === b.hash) {\n    return true;\n  } else if (b.hash !== \"\") {\n    return true;\n  }\n  return false;\n}\nfunction dataWithResponseInitToResponse(data2) {\n  return Response.json(data2.data, data2.init ?? void 0);\n}\nfunction dataWithResponseInitToErrorResponse(data2) {\n  return new ErrorResponseImpl(\n    data2.init?.status ?? 500,\n    data2.init?.statusText ?? \"Internal Server Error\",\n    data2.data\n  );\n}\nfunction isDataStrategyResult(result) {\n  return result != null && typeof result === \"object\" && \"type\" in result && \"result\" in result && (result.type === \"data\" /* data */ || result.type === \"error\" /* error */);\n}\nfunction isRedirectDataStrategyResult(result) {\n  return isResponse(result.result) && redirectStatusCodes.has(result.result.status);\n}\nfunction isErrorResult(result) {\n  return result.type === \"error\" /* error */;\n}\nfunction isRedirectResult(result) {\n  return (result && result.type) === \"redirect\" /* redirect */;\n}\nfunction isDataWithResponseInit(value) {\n  return typeof value === \"object\" && value != null && \"type\" in value && \"data\" in value && \"init\" in value && value.type === \"DataWithResponseInit\";\n}\nfunction isResponse(value) {\n  return value != null && typeof value.status === \"number\" && typeof value.statusText === \"string\" && typeof value.headers === \"object\" && typeof value.body !== \"undefined\";\n}\nfunction isRedirectStatusCode(statusCode) {\n  return redirectStatusCodes.has(statusCode);\n}\nfunction isRedirectResponse(result) {\n  return isResponse(result) && isRedirectStatusCode(result.status) && result.headers.has(\"Location\");\n}\nfunction isValidMethod(method) {\n  return validRequestMethods.has(method.toUpperCase());\n}\nfunction isMutationMethod(method) {\n  return validMutationMethods.has(method.toUpperCase());\n}\nfunction hasNakedIndexQuery(search) {\n  return new URLSearchParams(search).getAll(\"index\").some((v) => v === \"\");\n}\nfunction getTargetMatch(matches, location) {\n  let search = typeof location === \"string\" ? parsePath(location).search : location.search;\n  if (matches[matches.length - 1].route.index && hasNakedIndexQuery(search || \"\")) {\n    return matches[matches.length - 1];\n  }\n  let pathMatches = getPathContributingMatches(matches);\n  return pathMatches[pathMatches.length - 1];\n}\nfunction getSubmissionFromNavigation(navigation) {\n  let { formMethod, formAction, formEncType, text, formData, json } = navigation;\n  if (!formMethod || !formAction || !formEncType) {\n    return;\n  }\n  if (text != null) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData: void 0,\n      json: void 0,\n      text\n    };\n  } else if (formData != null) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData,\n      json: void 0,\n      text: void 0\n    };\n  } else if (json !== void 0) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData: void 0,\n      json,\n      text: void 0\n    };\n  }\n}\nfunction getLoadingNavigation(location, submission) {\n  if (submission) {\n    let navigation = {\n      state: \"loading\",\n      location,\n      formMethod: submission.formMethod,\n      formAction: submission.formAction,\n      formEncType: submission.formEncType,\n      formData: submission.formData,\n      json: submission.json,\n      text: submission.text\n    };\n    return navigation;\n  } else {\n    let navigation = {\n      state: \"loading\",\n      location,\n      formMethod: void 0,\n      formAction: void 0,\n      formEncType: void 0,\n      formData: void 0,\n      json: void 0,\n      text: void 0\n    };\n    return navigation;\n  }\n}\nfunction getSubmittingNavigation(location, submission) {\n  let navigation = {\n    state: \"submitting\",\n    location,\n    formMethod: submission.formMethod,\n    formAction: submission.formAction,\n    formEncType: submission.formEncType,\n    formData: submission.formData,\n    json: submission.json,\n    text: submission.text\n  };\n  return navigation;\n}\nfunction getLoadingFetcher(submission, data2) {\n  if (submission) {\n    let fetcher = {\n      state: \"loading\",\n      formMethod: submission.formMethod,\n      formAction: submission.formAction,\n      formEncType: submission.formEncType,\n      formData: submission.formData,\n      json: submission.json,\n      text: submission.text,\n      data: data2\n    };\n    return fetcher;\n  } else {\n    let fetcher = {\n      state: \"loading\",\n      formMethod: void 0,\n      formAction: void 0,\n      formEncType: void 0,\n      formData: void 0,\n      json: void 0,\n      text: void 0,\n      data: data2\n    };\n    return fetcher;\n  }\n}\nfunction getSubmittingFetcher(submission, existingFetcher) {\n  let fetcher = {\n    state: \"submitting\",\n    formMethod: submission.formMethod,\n    formAction: submission.formAction,\n    formEncType: submission.formEncType,\n    formData: submission.formData,\n    json: submission.json,\n    text: submission.text,\n    data: existingFetcher ? existingFetcher.data : void 0\n  };\n  return fetcher;\n}\nfunction getDoneFetcher(data2) {\n  let fetcher = {\n    state: \"idle\",\n    formMethod: void 0,\n    formAction: void 0,\n    formEncType: void 0,\n    formData: void 0,\n    json: void 0,\n    text: void 0,\n    data: data2\n  };\n  return fetcher;\n}\nfunction restoreAppliedTransitions(_window, transitions) {\n  try {\n    let sessionPositions = _window.sessionStorage.getItem(\n      TRANSITIONS_STORAGE_KEY\n    );\n    if (sessionPositions) {\n      let json = JSON.parse(sessionPositions);\n      for (let [k, v] of Object.entries(json || {})) {\n        if (v && Array.isArray(v)) {\n          transitions.set(k, new Set(v || []));\n        }\n      }\n    }\n  } catch (e) {\n  }\n}\nfunction persistAppliedTransitions(_window, transitions) {\n  if (transitions.size > 0) {\n    let json = {};\n    for (let [k, v] of transitions) {\n      json[k] = [...v];\n    }\n    try {\n      _window.sessionStorage.setItem(\n        TRANSITIONS_STORAGE_KEY,\n        JSON.stringify(json)\n      );\n    } catch (error) {\n      warning(\n        false,\n        `Failed to save applied view transitions in sessionStorage (${error}).`\n      );\n    }\n  }\n}\nfunction createDeferred() {\n  let resolve;\n  let reject;\n  let promise = new Promise((res, rej) => {\n    resolve = async (val) => {\n      res(val);\n      try {\n        await promise;\n      } catch (e) {\n      }\n    };\n    reject = async (error) => {\n      rej(error);\n      try {\n        await promise;\n      } catch (e) {\n      }\n    };\n  });\n  return {\n    promise,\n    //@ts-ignore\n    resolve,\n    //@ts-ignore\n    reject\n  };\n}\n\n// lib/context.ts\nimport * as React from \"react\";\nvar DataRouterContext = React.createContext(null);\nDataRouterContext.displayName = \"DataRouter\";\nvar DataRouterStateContext = React.createContext(null);\nDataRouterStateContext.displayName = \"DataRouterState\";\nvar RSCRouterContext = React.createContext(false);\nfunction useIsRSCRouterContext() {\n  return React.useContext(RSCRouterContext);\n}\nvar ViewTransitionContext = React.createContext({\n  isTransitioning: false\n});\nViewTransitionContext.displayName = \"ViewTransition\";\nvar FetchersContext = React.createContext(\n  /* @__PURE__ */ new Map()\n);\nFetchersContext.displayName = \"Fetchers\";\nvar AwaitContext = React.createContext(null);\nAwaitContext.displayName = \"Await\";\nvar NavigationContext = React.createContext(\n  null\n);\nNavigationContext.displayName = \"Navigation\";\nvar LocationContext = React.createContext(\n  null\n);\nLocationContext.displayName = \"Location\";\nvar RouteContext = React.createContext({\n  outlet: null,\n  matches: [],\n  isDataRoute: false\n});\nRouteContext.displayName = \"Route\";\nvar RouteErrorContext = React.createContext(null);\nRouteErrorContext.displayName = \"RouteError\";\nvar ENABLE_DEV_WARNINGS = true;\n\n// lib/hooks.tsx\nimport * as React2 from \"react\";\nfunction useHref(to, { relative } = {}) {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useHref() may be used only in the context of a <Router> component.`\n  );\n  let { basename, navigator } = React2.useContext(NavigationContext);\n  let { hash, pathname, search } = useResolvedPath(to, { relative });\n  let joinedPathname = pathname;\n  if (basename !== \"/\") {\n    joinedPathname = pathname === \"/\" ? basename : joinPaths([basename, pathname]);\n  }\n  return navigator.createHref({ pathname: joinedPathname, search, hash });\n}\nfunction useInRouterContext() {\n  return React2.useContext(LocationContext) != null;\n}\nfunction useLocation() {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useLocation() may be used only in the context of a <Router> component.`\n  );\n  return React2.useContext(LocationContext).location;\n}\nfunction useNavigationType() {\n  return React2.useContext(LocationContext).navigationType;\n}\nfunction useMatch(pattern) {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useMatch() may be used only in the context of a <Router> component.`\n  );\n  let { pathname } = useLocation();\n  return React2.useMemo(\n    () => matchPath(pattern, decodePath(pathname)),\n    [pathname, pattern]\n  );\n}\nvar navigateEffectWarning = `You should call navigate() in a React.useEffect(), not when your component is first rendered.`;\nfunction useIsomorphicLayoutEffect(cb) {\n  let isStatic = React2.useContext(NavigationContext).static;\n  if (!isStatic) {\n    React2.useLayoutEffect(cb);\n  }\n}\nfunction useNavigate() {\n  let { isDataRoute } = React2.useContext(RouteContext);\n  return isDataRoute ? useNavigateStable() : useNavigateUnstable();\n}\nfunction useNavigateUnstable() {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useNavigate() may be used only in the context of a <Router> component.`\n  );\n  let dataRouterContext = React2.useContext(DataRouterContext);\n  let { basename, navigator } = React2.useContext(NavigationContext);\n  let { matches } = React2.useContext(RouteContext);\n  let { pathname: locationPathname } = useLocation();\n  let routePathnamesJson = JSON.stringify(getResolveToMatches(matches));\n  let activeRef = React2.useRef(false);\n  useIsomorphicLayoutEffect(() => {\n    activeRef.current = true;\n  });\n  let navigate = React2.useCallback(\n    (to, options = {}) => {\n      warning(activeRef.current, navigateEffectWarning);\n      if (!activeRef.current) return;\n      if (typeof to === \"number\") {\n        navigator.go(to);\n        return;\n      }\n      let path = resolveTo(\n        to,\n        JSON.parse(routePathnamesJson),\n        locationPathname,\n        options.relative === \"path\"\n      );\n      if (dataRouterContext == null && basename !== \"/\") {\n        path.pathname = path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n      }\n      (!!options.replace ? navigator.replace : navigator.push)(\n        path,\n        options.state,\n        options\n      );\n    },\n    [\n      basename,\n      navigator,\n      routePathnamesJson,\n      locationPathname,\n      dataRouterContext\n    ]\n  );\n  return navigate;\n}\nvar OutletContext = React2.createContext(null);\nfunction useOutletContext() {\n  return React2.useContext(OutletContext);\n}\nfunction useOutlet(context) {\n  let outlet = React2.useContext(RouteContext).outlet;\n  if (outlet) {\n    return /* @__PURE__ */ React2.createElement(OutletContext.Provider, { value: context }, outlet);\n  }\n  return outlet;\n}\nfunction useParams() {\n  let { matches } = React2.useContext(RouteContext);\n  let routeMatch = matches[matches.length - 1];\n  return routeMatch ? routeMatch.params : {};\n}\nfunction useResolvedPath(to, { relative } = {}) {\n  let { matches } = React2.useContext(RouteContext);\n  let { pathname: locationPathname } = useLocation();\n  let routePathnamesJson = JSON.stringify(getResolveToMatches(matches));\n  return React2.useMemo(\n    () => resolveTo(\n      to,\n      JSON.parse(routePathnamesJson),\n      locationPathname,\n      relative === \"path\"\n    ),\n    [to, routePathnamesJson, locationPathname, relative]\n  );\n}\nfunction useRoutes(routes, locationArg) {\n  return useRoutesImpl(routes, locationArg);\n}\nfunction useRoutesImpl(routes, locationArg, dataRouterState, future) {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useRoutes() may be used only in the context of a <Router> component.`\n  );\n  let { navigator } = React2.useContext(NavigationContext);\n  let { matches: parentMatches } = React2.useContext(RouteContext);\n  let routeMatch = parentMatches[parentMatches.length - 1];\n  let parentParams = routeMatch ? routeMatch.params : {};\n  let parentPathname = routeMatch ? routeMatch.pathname : \"/\";\n  let parentPathnameBase = routeMatch ? routeMatch.pathnameBase : \"/\";\n  let parentRoute = routeMatch && routeMatch.route;\n  if (ENABLE_DEV_WARNINGS) {\n    let parentPath = parentRoute && parentRoute.path || \"\";\n    warningOnce(\n      parentPathname,\n      !parentRoute || parentPath.endsWith(\"*\") || parentPath.endsWith(\"*?\"),\n      `You rendered descendant <Routes> (or called \\`useRoutes()\\`) at \"${parentPathname}\" (under <Route path=\"${parentPath}\">) but the parent route path has no trailing \"*\". This means if you navigate deeper, the parent won't match anymore and therefore the child routes will never render.\n\nPlease change the parent <Route path=\"${parentPath}\"> to <Route path=\"${parentPath === \"/\" ? \"*\" : `${parentPath}/*`}\">.`\n    );\n  }\n  let locationFromContext = useLocation();\n  let location;\n  if (locationArg) {\n    let parsedLocationArg = typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n    invariant(\n      parentPathnameBase === \"/\" || parsedLocationArg.pathname?.startsWith(parentPathnameBase),\n      `When overriding the location using \\`<Routes location>\\` or \\`useRoutes(routes, location)\\`, the location pathname must begin with the portion of the URL pathname that was matched by all parent routes. The current pathname base is \"${parentPathnameBase}\" but pathname \"${parsedLocationArg.pathname}\" was given in the \\`location\\` prop.`\n    );\n    location = parsedLocationArg;\n  } else {\n    location = locationFromContext;\n  }\n  let pathname = location.pathname || \"/\";\n  let remainingPathname = pathname;\n  if (parentPathnameBase !== \"/\") {\n    let parentSegments = parentPathnameBase.replace(/^\\//, \"\").split(\"/\");\n    let segments = pathname.replace(/^\\//, \"\").split(\"/\");\n    remainingPathname = \"/\" + segments.slice(parentSegments.length).join(\"/\");\n  }\n  let matches = matchRoutes(routes, { pathname: remainingPathname });\n  if (ENABLE_DEV_WARNINGS) {\n    warning(\n      parentRoute || matches != null,\n      `No routes matched location \"${location.pathname}${location.search}${location.hash}\" `\n    );\n    warning(\n      matches == null || matches[matches.length - 1].route.element !== void 0 || matches[matches.length - 1].route.Component !== void 0 || matches[matches.length - 1].route.lazy !== void 0,\n      `Matched leaf route at location \"${location.pathname}${location.search}${location.hash}\" does not have an element or Component. This means it will render an <Outlet /> with a null value by default resulting in an \"empty\" page.`\n    );\n  }\n  let renderedMatches = _renderMatches(\n    matches && matches.map(\n      (match) => Object.assign({}, match, {\n        params: Object.assign({}, parentParams, match.params),\n        pathname: joinPaths([\n          parentPathnameBase,\n          // Re-encode pathnames that were decoded inside matchRoutes\n          navigator.encodeLocation ? navigator.encodeLocation(match.pathname).pathname : match.pathname\n        ]),\n        pathnameBase: match.pathnameBase === \"/\" ? parentPathnameBase : joinPaths([\n          parentPathnameBase,\n          // Re-encode pathnames that were decoded inside matchRoutes\n          navigator.encodeLocation ? navigator.encodeLocation(match.pathnameBase).pathname : match.pathnameBase\n        ])\n      })\n    ),\n    parentMatches,\n    dataRouterState,\n    future\n  );\n  if (locationArg && renderedMatches) {\n    return /* @__PURE__ */ React2.createElement(\n      LocationContext.Provider,\n      {\n        value: {\n          location: {\n            pathname: \"/\",\n            search: \"\",\n            hash: \"\",\n            state: null,\n            key: \"default\",\n            ...location\n          },\n          navigationType: \"POP\" /* Pop */\n        }\n      },\n      renderedMatches\n    );\n  }\n  return renderedMatches;\n}\nfunction DefaultErrorComponent() {\n  let error = useRouteError();\n  let message = isRouteErrorResponse(error) ? `${error.status} ${error.statusText}` : error instanceof Error ? error.message : JSON.stringify(error);\n  let stack = error instanceof Error ? error.stack : null;\n  let lightgrey = \"rgba(200,200,200, 0.5)\";\n  let preStyles = { padding: \"0.5rem\", backgroundColor: lightgrey };\n  let codeStyles = { padding: \"2px 4px\", backgroundColor: lightgrey };\n  let devInfo = null;\n  if (ENABLE_DEV_WARNINGS) {\n    console.error(\n      \"Error handled by React Router default ErrorBoundary:\",\n      error\n    );\n    devInfo = /* @__PURE__ */ React2.createElement(React2.Fragment, null, /* @__PURE__ */ React2.createElement(\"p\", null, \"\\u{1F4BF} Hey developer \\u{1F44B}\"), /* @__PURE__ */ React2.createElement(\"p\", null, \"You can provide a way better UX than this when your app throws errors by providing your own \", /* @__PURE__ */ React2.createElement(\"code\", { style: codeStyles }, \"ErrorBoundary\"), \" or\", \" \", /* @__PURE__ */ React2.createElement(\"code\", { style: codeStyles }, \"errorElement\"), \" prop on your route.\"));\n  }\n  return /* @__PURE__ */ React2.createElement(React2.Fragment, null, /* @__PURE__ */ React2.createElement(\"h2\", null, \"Unexpected Application Error!\"), /* @__PURE__ */ React2.createElement(\"h3\", { style: { fontStyle: \"italic\" } }, message), stack ? /* @__PURE__ */ React2.createElement(\"pre\", { style: preStyles }, stack) : null, devInfo);\n}\nvar defaultErrorElement = /* @__PURE__ */ React2.createElement(DefaultErrorComponent, null);\nvar RenderErrorBoundary = class extends React2.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      location: props.location,\n      revalidation: props.revalidation,\n      error: props.error\n    };\n  }\n  static getDerivedStateFromError(error) {\n    return { error };\n  }\n  static getDerivedStateFromProps(props, state) {\n    if (state.location !== props.location || state.revalidation !== \"idle\" && props.revalidation === \"idle\") {\n      return {\n        error: props.error,\n        location: props.location,\n        revalidation: props.revalidation\n      };\n    }\n    return {\n      error: props.error !== void 0 ? props.error : state.error,\n      location: state.location,\n      revalidation: props.revalidation || state.revalidation\n    };\n  }\n  componentDidCatch(error, errorInfo) {\n    console.error(\n      \"React Router caught the following error during render\",\n      error,\n      errorInfo\n    );\n  }\n  render() {\n    return this.state.error !== void 0 ? /* @__PURE__ */ React2.createElement(RouteContext.Provider, { value: this.props.routeContext }, /* @__PURE__ */ React2.createElement(\n      RouteErrorContext.Provider,\n      {\n        value: this.state.error,\n        children: this.props.component\n      }\n    )) : this.props.children;\n  }\n};\nfunction RenderedRoute({ routeContext, match, children }) {\n  let dataRouterContext = React2.useContext(DataRouterContext);\n  if (dataRouterContext && dataRouterContext.static && dataRouterContext.staticContext && (match.route.errorElement || match.route.ErrorBoundary)) {\n    dataRouterContext.staticContext._deepestRenderedBoundaryId = match.route.id;\n  }\n  return /* @__PURE__ */ React2.createElement(RouteContext.Provider, { value: routeContext }, children);\n}\nfunction _renderMatches(matches, parentMatches = [], dataRouterState = null, future = null) {\n  if (matches == null) {\n    if (!dataRouterState) {\n      return null;\n    }\n    if (dataRouterState.errors) {\n      matches = dataRouterState.matches;\n    } else if (parentMatches.length === 0 && !dataRouterState.initialized && dataRouterState.matches.length > 0) {\n      matches = dataRouterState.matches;\n    } else {\n      return null;\n    }\n  }\n  let renderedMatches = matches;\n  let errors = dataRouterState?.errors;\n  if (errors != null) {\n    let errorIndex = renderedMatches.findIndex(\n      (m) => m.route.id && errors?.[m.route.id] !== void 0\n    );\n    invariant(\n      errorIndex >= 0,\n      `Could not find a matching route for errors on route IDs: ${Object.keys(\n        errors\n      ).join(\",\")}`\n    );\n    renderedMatches = renderedMatches.slice(\n      0,\n      Math.min(renderedMatches.length, errorIndex + 1)\n    );\n  }\n  let renderFallback = false;\n  let fallbackIndex = -1;\n  if (dataRouterState) {\n    for (let i = 0; i < renderedMatches.length; i++) {\n      let match = renderedMatches[i];\n      if (match.route.HydrateFallback || match.route.hydrateFallbackElement) {\n        fallbackIndex = i;\n      }\n      if (match.route.id) {\n        let { loaderData, errors: errors2 } = dataRouterState;\n        let needsToRunLoader = match.route.loader && !loaderData.hasOwnProperty(match.route.id) && (!errors2 || errors2[match.route.id] === void 0);\n        if (match.route.lazy || needsToRunLoader) {\n          renderFallback = true;\n          if (fallbackIndex >= 0) {\n            renderedMatches = renderedMatches.slice(0, fallbackIndex + 1);\n          } else {\n            renderedMatches = [renderedMatches[0]];\n          }\n          break;\n        }\n      }\n    }\n  }\n  return renderedMatches.reduceRight(\n    (outlet, match, index) => {\n      let error;\n      let shouldRenderHydrateFallback = false;\n      let errorElement = null;\n      let hydrateFallbackElement = null;\n      if (dataRouterState) {\n        error = errors && match.route.id ? errors[match.route.id] : void 0;\n        errorElement = match.route.errorElement || defaultErrorElement;\n        if (renderFallback) {\n          if (fallbackIndex < 0 && index === 0) {\n            warningOnce(\n              \"route-fallback\",\n              false,\n              \"No `HydrateFallback` element provided to render during initial hydration\"\n            );\n            shouldRenderHydrateFallback = true;\n            hydrateFallbackElement = null;\n          } else if (fallbackIndex === index) {\n            shouldRenderHydrateFallback = true;\n            hydrateFallbackElement = match.route.hydrateFallbackElement || null;\n          }\n        }\n      }\n      let matches2 = parentMatches.concat(renderedMatches.slice(0, index + 1));\n      let getChildren = () => {\n        let children;\n        if (error) {\n          children = errorElement;\n        } else if (shouldRenderHydrateFallback) {\n          children = hydrateFallbackElement;\n        } else if (match.route.Component) {\n          children = /* @__PURE__ */ React2.createElement(match.route.Component, null);\n        } else if (match.route.element) {\n          children = match.route.element;\n        } else {\n          children = outlet;\n        }\n        return /* @__PURE__ */ React2.createElement(\n          RenderedRoute,\n          {\n            match,\n            routeContext: {\n              outlet,\n              matches: matches2,\n              isDataRoute: dataRouterState != null\n            },\n            children\n          }\n        );\n      };\n      return dataRouterState && (match.route.ErrorBoundary || match.route.errorElement || index === 0) ? /* @__PURE__ */ React2.createElement(\n        RenderErrorBoundary,\n        {\n          location: dataRouterState.location,\n          revalidation: dataRouterState.revalidation,\n          component: errorElement,\n          error,\n          children: getChildren(),\n          routeContext: { outlet: null, matches: matches2, isDataRoute: true }\n        }\n      ) : getChildren();\n    },\n    null\n  );\n}\nfunction getDataRouterConsoleError(hookName) {\n  return `${hookName} must be used within a data router.  See https://reactrouter.com/en/main/routers/picking-a-router.`;\n}\nfunction useDataRouterContext(hookName) {\n  let ctx = React2.useContext(DataRouterContext);\n  invariant(ctx, getDataRouterConsoleError(hookName));\n  return ctx;\n}\nfunction useDataRouterState(hookName) {\n  let state = React2.useContext(DataRouterStateContext);\n  invariant(state, getDataRouterConsoleError(hookName));\n  return state;\n}\nfunction useRouteContext(hookName) {\n  let route = React2.useContext(RouteContext);\n  invariant(route, getDataRouterConsoleError(hookName));\n  return route;\n}\nfunction useCurrentRouteId(hookName) {\n  let route = useRouteContext(hookName);\n  let thisRoute = route.matches[route.matches.length - 1];\n  invariant(\n    thisRoute.route.id,\n    `${hookName} can only be used on routes that contain a unique \"id\"`\n  );\n  return thisRoute.route.id;\n}\nfunction useRouteId() {\n  return useCurrentRouteId(\"useRouteId\" /* UseRouteId */);\n}\nfunction useNavigation() {\n  let state = useDataRouterState(\"useNavigation\" /* UseNavigation */);\n  return state.navigation;\n}\nfunction useRevalidator() {\n  let dataRouterContext = useDataRouterContext(\"useRevalidator\" /* UseRevalidator */);\n  let state = useDataRouterState(\"useRevalidator\" /* UseRevalidator */);\n  let revalidate = React2.useCallback(async () => {\n    await dataRouterContext.router.revalidate();\n  }, [dataRouterContext.router]);\n  return React2.useMemo(\n    () => ({ revalidate, state: state.revalidation }),\n    [revalidate, state.revalidation]\n  );\n}\nfunction useMatches() {\n  let { matches, loaderData } = useDataRouterState(\n    \"useMatches\" /* UseMatches */\n  );\n  return React2.useMemo(\n    () => matches.map((m) => convertRouteMatchToUiMatch(m, loaderData)),\n    [matches, loaderData]\n  );\n}\nfunction useLoaderData() {\n  let state = useDataRouterState(\"useLoaderData\" /* UseLoaderData */);\n  let routeId = useCurrentRouteId(\"useLoaderData\" /* UseLoaderData */);\n  return state.loaderData[routeId];\n}\nfunction useRouteLoaderData(routeId) {\n  let state = useDataRouterState(\"useRouteLoaderData\" /* UseRouteLoaderData */);\n  return state.loaderData[routeId];\n}\nfunction useActionData() {\n  let state = useDataRouterState(\"useActionData\" /* UseActionData */);\n  let routeId = useCurrentRouteId(\"useLoaderData\" /* UseLoaderData */);\n  return state.actionData ? state.actionData[routeId] : void 0;\n}\nfunction useRouteError() {\n  let error = React2.useContext(RouteErrorContext);\n  let state = useDataRouterState(\"useRouteError\" /* UseRouteError */);\n  let routeId = useCurrentRouteId(\"useRouteError\" /* UseRouteError */);\n  if (error !== void 0) {\n    return error;\n  }\n  return state.errors?.[routeId];\n}\nfunction useAsyncValue() {\n  let value = React2.useContext(AwaitContext);\n  return value?._data;\n}\nfunction useAsyncError() {\n  let value = React2.useContext(AwaitContext);\n  return value?._error;\n}\nvar blockerId = 0;\nfunction useBlocker(shouldBlock) {\n  let { router, basename } = useDataRouterContext(\"useBlocker\" /* UseBlocker */);\n  let state = useDataRouterState(\"useBlocker\" /* UseBlocker */);\n  let [blockerKey, setBlockerKey] = React2.useState(\"\");\n  let blockerFunction = React2.useCallback(\n    (arg) => {\n      if (typeof shouldBlock !== \"function\") {\n        return !!shouldBlock;\n      }\n      if (basename === \"/\") {\n        return shouldBlock(arg);\n      }\n      let { currentLocation, nextLocation, historyAction } = arg;\n      return shouldBlock({\n        currentLocation: {\n          ...currentLocation,\n          pathname: stripBasename(currentLocation.pathname, basename) || currentLocation.pathname\n        },\n        nextLocation: {\n          ...nextLocation,\n          pathname: stripBasename(nextLocation.pathname, basename) || nextLocation.pathname\n        },\n        historyAction\n      });\n    },\n    [basename, shouldBlock]\n  );\n  React2.useEffect(() => {\n    let key = String(++blockerId);\n    setBlockerKey(key);\n    return () => router.deleteBlocker(key);\n  }, [router]);\n  React2.useEffect(() => {\n    if (blockerKey !== \"\") {\n      router.getBlocker(blockerKey, blockerFunction);\n    }\n  }, [router, blockerKey, blockerFunction]);\n  return blockerKey && state.blockers.has(blockerKey) ? state.blockers.get(blockerKey) : IDLE_BLOCKER;\n}\nfunction useNavigateStable() {\n  let { router } = useDataRouterContext(\"useNavigate\" /* UseNavigateStable */);\n  let id = useCurrentRouteId(\"useNavigate\" /* UseNavigateStable */);\n  let activeRef = React2.useRef(false);\n  useIsomorphicLayoutEffect(() => {\n    activeRef.current = true;\n  });\n  let navigate = React2.useCallback(\n    async (to, options = {}) => {\n      warning(activeRef.current, navigateEffectWarning);\n      if (!activeRef.current) return;\n      if (typeof to === \"number\") {\n        router.navigate(to);\n      } else {\n        await router.navigate(to, { fromRouteId: id, ...options });\n      }\n    },\n    [router, id]\n  );\n  return navigate;\n}\nvar alreadyWarned = {};\nfunction warningOnce(key, cond, message) {\n  if (!cond && !alreadyWarned[key]) {\n    alreadyWarned[key] = true;\n    warning(false, message);\n  }\n}\n\n// lib/components.tsx\nimport * as React3 from \"react\";\n\n// lib/server-runtime/warnings.ts\nvar alreadyWarned2 = {};\nfunction warnOnce(condition, message) {\n  if (!condition && !alreadyWarned2[message]) {\n    alreadyWarned2[message] = true;\n    console.warn(message);\n  }\n}\n\n// lib/components.tsx\nfunction mapRouteProperties(route) {\n  let updates = {\n    // Note: this check also occurs in createRoutesFromChildren so update\n    // there if you change this -- please and thank you!\n    hasErrorBoundary: route.hasErrorBoundary || route.ErrorBoundary != null || route.errorElement != null\n  };\n  if (route.Component) {\n    if (ENABLE_DEV_WARNINGS) {\n      if (route.element) {\n        warning(\n          false,\n          \"You should not include both `Component` and `element` on your route - `Component` will be used.\"\n        );\n      }\n    }\n    Object.assign(updates, {\n      element: React3.createElement(route.Component),\n      Component: void 0\n    });\n  }\n  if (route.HydrateFallback) {\n    if (ENABLE_DEV_WARNINGS) {\n      if (route.hydrateFallbackElement) {\n        warning(\n          false,\n          \"You should not include both `HydrateFallback` and `hydrateFallbackElement` on your route - `HydrateFallback` will be used.\"\n        );\n      }\n    }\n    Object.assign(updates, {\n      hydrateFallbackElement: React3.createElement(route.HydrateFallback),\n      HydrateFallback: void 0\n    });\n  }\n  if (route.ErrorBoundary) {\n    if (ENABLE_DEV_WARNINGS) {\n      if (route.errorElement) {\n        warning(\n          false,\n          \"You should not include both `ErrorBoundary` and `errorElement` on your route - `ErrorBoundary` will be used.\"\n        );\n      }\n    }\n    Object.assign(updates, {\n      errorElement: React3.createElement(route.ErrorBoundary),\n      ErrorBoundary: void 0\n    });\n  }\n  return updates;\n}\nvar hydrationRouteProperties = [\n  \"HydrateFallback\",\n  \"hydrateFallbackElement\"\n];\nfunction createMemoryRouter(routes, opts) {\n  return createRouter({\n    basename: opts?.basename,\n    unstable_getContext: opts?.unstable_getContext,\n    future: opts?.future,\n    history: createMemoryHistory({\n      initialEntries: opts?.initialEntries,\n      initialIndex: opts?.initialIndex\n    }),\n    hydrationData: opts?.hydrationData,\n    routes,\n    hydrationRouteProperties,\n    mapRouteProperties,\n    dataStrategy: opts?.dataStrategy,\n    patchRoutesOnNavigation: opts?.patchRoutesOnNavigation\n  }).initialize();\n}\nvar Deferred = class {\n  constructor() {\n    this.status = \"pending\";\n    this.promise = new Promise((resolve, reject) => {\n      this.resolve = (value) => {\n        if (this.status === \"pending\") {\n          this.status = \"resolved\";\n          resolve(value);\n        }\n      };\n      this.reject = (reason) => {\n        if (this.status === \"pending\") {\n          this.status = \"rejected\";\n          reject(reason);\n        }\n      };\n    });\n  }\n};\nfunction RouterProvider({\n  router,\n  flushSync: reactDomFlushSyncImpl\n}) {\n  let [state, setStateImpl] = React3.useState(router.state);\n  let [pendingState, setPendingState] = React3.useState();\n  let [vtContext, setVtContext] = React3.useState({\n    isTransitioning: false\n  });\n  let [renderDfd, setRenderDfd] = React3.useState();\n  let [transition, setTransition] = React3.useState();\n  let [interruption, setInterruption] = React3.useState();\n  let fetcherData = React3.useRef(/* @__PURE__ */ new Map());\n  let setState = React3.useCallback(\n    (newState, { deletedFetchers, flushSync, viewTransitionOpts }) => {\n      newState.fetchers.forEach((fetcher, key) => {\n        if (fetcher.data !== void 0) {\n          fetcherData.current.set(key, fetcher.data);\n        }\n      });\n      deletedFetchers.forEach((key) => fetcherData.current.delete(key));\n      warnOnce(\n        flushSync === false || reactDomFlushSyncImpl != null,\n        'You provided the `flushSync` option to a router update, but you are not using the `<RouterProvider>` from `react-router/dom` so `ReactDOM.flushSync()` is unavailable.  Please update your app to `import { RouterProvider } from \"react-router/dom\"` and ensure you have `react-dom` installed as a dependency to use the `flushSync` option.'\n      );\n      let isViewTransitionAvailable = router.window != null && router.window.document != null && typeof router.window.document.startViewTransition === \"function\";\n      warnOnce(\n        viewTransitionOpts == null || isViewTransitionAvailable,\n        \"You provided the `viewTransition` option to a router update, but you do not appear to be running in a DOM environment as `window.startViewTransition` is not available.\"\n      );\n      if (!viewTransitionOpts || !isViewTransitionAvailable) {\n        if (reactDomFlushSyncImpl && flushSync) {\n          reactDomFlushSyncImpl(() => setStateImpl(newState));\n        } else {\n          React3.startTransition(() => setStateImpl(newState));\n        }\n        return;\n      }\n      if (reactDomFlushSyncImpl && flushSync) {\n        reactDomFlushSyncImpl(() => {\n          if (transition) {\n            renderDfd && renderDfd.resolve();\n            transition.skipTransition();\n          }\n          setVtContext({\n            isTransitioning: true,\n            flushSync: true,\n            currentLocation: viewTransitionOpts.currentLocation,\n            nextLocation: viewTransitionOpts.nextLocation\n          });\n        });\n        let t = router.window.document.startViewTransition(() => {\n          reactDomFlushSyncImpl(() => setStateImpl(newState));\n        });\n        t.finished.finally(() => {\n          reactDomFlushSyncImpl(() => {\n            setRenderDfd(void 0);\n            setTransition(void 0);\n            setPendingState(void 0);\n            setVtContext({ isTransitioning: false });\n          });\n        });\n        reactDomFlushSyncImpl(() => setTransition(t));\n        return;\n      }\n      if (transition) {\n        renderDfd && renderDfd.resolve();\n        transition.skipTransition();\n        setInterruption({\n          state: newState,\n          currentLocation: viewTransitionOpts.currentLocation,\n          nextLocation: viewTransitionOpts.nextLocation\n        });\n      } else {\n        setPendingState(newState);\n        setVtContext({\n          isTransitioning: true,\n          flushSync: false,\n          currentLocation: viewTransitionOpts.currentLocation,\n          nextLocation: viewTransitionOpts.nextLocation\n        });\n      }\n    },\n    [router.window, reactDomFlushSyncImpl, transition, renderDfd]\n  );\n  React3.useLayoutEffect(() => router.subscribe(setState), [router, setState]);\n  React3.useEffect(() => {\n    if (vtContext.isTransitioning && !vtContext.flushSync) {\n      setRenderDfd(new Deferred());\n    }\n  }, [vtContext]);\n  React3.useEffect(() => {\n    if (renderDfd && pendingState && router.window) {\n      let newState = pendingState;\n      let renderPromise = renderDfd.promise;\n      let transition2 = router.window.document.startViewTransition(async () => {\n        React3.startTransition(() => setStateImpl(newState));\n        await renderPromise;\n      });\n      transition2.finished.finally(() => {\n        setRenderDfd(void 0);\n        setTransition(void 0);\n        setPendingState(void 0);\n        setVtContext({ isTransitioning: false });\n      });\n      setTransition(transition2);\n    }\n  }, [pendingState, renderDfd, router.window]);\n  React3.useEffect(() => {\n    if (renderDfd && pendingState && state.location.key === pendingState.location.key) {\n      renderDfd.resolve();\n    }\n  }, [renderDfd, transition, state.location, pendingState]);\n  React3.useEffect(() => {\n    if (!vtContext.isTransitioning && interruption) {\n      setPendingState(interruption.state);\n      setVtContext({\n        isTransitioning: true,\n        flushSync: false,\n        currentLocation: interruption.currentLocation,\n        nextLocation: interruption.nextLocation\n      });\n      setInterruption(void 0);\n    }\n  }, [vtContext.isTransitioning, interruption]);\n  let navigator = React3.useMemo(() => {\n    return {\n      createHref: router.createHref,\n      encodeLocation: router.encodeLocation,\n      go: (n) => router.navigate(n),\n      push: (to, state2, opts) => router.navigate(to, {\n        state: state2,\n        preventScrollReset: opts?.preventScrollReset\n      }),\n      replace: (to, state2, opts) => router.navigate(to, {\n        replace: true,\n        state: state2,\n        preventScrollReset: opts?.preventScrollReset\n      })\n    };\n  }, [router]);\n  let basename = router.basename || \"/\";\n  let dataRouterContext = React3.useMemo(\n    () => ({\n      router,\n      navigator,\n      static: false,\n      basename\n    }),\n    [router, navigator, basename]\n  );\n  return /* @__PURE__ */ React3.createElement(React3.Fragment, null, /* @__PURE__ */ React3.createElement(DataRouterContext.Provider, { value: dataRouterContext }, /* @__PURE__ */ React3.createElement(DataRouterStateContext.Provider, { value: state }, /* @__PURE__ */ React3.createElement(FetchersContext.Provider, { value: fetcherData.current }, /* @__PURE__ */ React3.createElement(ViewTransitionContext.Provider, { value: vtContext }, /* @__PURE__ */ React3.createElement(\n    Router,\n    {\n      basename,\n      location: state.location,\n      navigationType: state.historyAction,\n      navigator\n    },\n    /* @__PURE__ */ React3.createElement(\n      MemoizedDataRoutes,\n      {\n        routes: router.routes,\n        future: router.future,\n        state\n      }\n    )\n  ))))), null);\n}\nvar MemoizedDataRoutes = React3.memo(DataRoutes);\nfunction DataRoutes({\n  routes,\n  future,\n  state\n}) {\n  return useRoutesImpl(routes, void 0, state, future);\n}\nfunction MemoryRouter({\n  basename,\n  children,\n  initialEntries,\n  initialIndex\n}) {\n  let historyRef = React3.useRef();\n  if (historyRef.current == null) {\n    historyRef.current = createMemoryHistory({\n      initialEntries,\n      initialIndex,\n      v5Compat: true\n    });\n  }\n  let history = historyRef.current;\n  let [state, setStateImpl] = React3.useState({\n    action: history.action,\n    location: history.location\n  });\n  let setState = React3.useCallback(\n    (newState) => {\n      React3.startTransition(() => setStateImpl(newState));\n    },\n    [setStateImpl]\n  );\n  React3.useLayoutEffect(() => history.listen(setState), [history, setState]);\n  return /* @__PURE__ */ React3.createElement(\n    Router,\n    {\n      basename,\n      children,\n      location: state.location,\n      navigationType: state.action,\n      navigator: history\n    }\n  );\n}\nfunction Navigate({\n  to,\n  replace: replace2,\n  state,\n  relative\n}) {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of\n    // the router loaded. We can help them understand how to avoid that.\n    `<Navigate> may be used only in the context of a <Router> component.`\n  );\n  let { static: isStatic } = React3.useContext(NavigationContext);\n  warning(\n    !isStatic,\n    `<Navigate> must not be used on the initial render in a <StaticRouter>. This is a no-op, but you should modify your code so the <Navigate> is only ever rendered in response to some user interaction or state change.`\n  );\n  let { matches } = React3.useContext(RouteContext);\n  let { pathname: locationPathname } = useLocation();\n  let navigate = useNavigate();\n  let path = resolveTo(\n    to,\n    getResolveToMatches(matches),\n    locationPathname,\n    relative === \"path\"\n  );\n  let jsonPath = JSON.stringify(path);\n  React3.useEffect(() => {\n    navigate(JSON.parse(jsonPath), { replace: replace2, state, relative });\n  }, [navigate, jsonPath, relative, replace2, state]);\n  return null;\n}\nfunction Outlet(props) {\n  return useOutlet(props.context);\n}\nfunction Route(props) {\n  invariant(\n    false,\n    `A <Route> is only ever to be used as the child of <Routes> element, never rendered directly. Please wrap your <Route> in a <Routes>.`\n  );\n}\nfunction Router({\n  basename: basenameProp = \"/\",\n  children = null,\n  location: locationProp,\n  navigationType = \"POP\" /* Pop */,\n  navigator,\n  static: staticProp = false\n}) {\n  invariant(\n    !useInRouterContext(),\n    `You cannot render a <Router> inside another <Router>. You should never have more than one in your app.`\n  );\n  let basename = basenameProp.replace(/^\\/*/, \"/\");\n  let navigationContext = React3.useMemo(\n    () => ({\n      basename,\n      navigator,\n      static: staticProp,\n      future: {}\n    }),\n    [basename, navigator, staticProp]\n  );\n  if (typeof locationProp === \"string\") {\n    locationProp = parsePath(locationProp);\n  }\n  let {\n    pathname = \"/\",\n    search = \"\",\n    hash = \"\",\n    state = null,\n    key = \"default\"\n  } = locationProp;\n  let locationContext = React3.useMemo(() => {\n    let trailingPathname = stripBasename(pathname, basename);\n    if (trailingPathname == null) {\n      return null;\n    }\n    return {\n      location: {\n        pathname: trailingPathname,\n        search,\n        hash,\n        state,\n        key\n      },\n      navigationType\n    };\n  }, [basename, pathname, search, hash, state, key, navigationType]);\n  warning(\n    locationContext != null,\n    `<Router basename=\"${basename}\"> is not able to match the URL \"${pathname}${search}${hash}\" because it does not start with the basename, so the <Router> won't render anything.`\n  );\n  if (locationContext == null) {\n    return null;\n  }\n  return /* @__PURE__ */ React3.createElement(NavigationContext.Provider, { value: navigationContext }, /* @__PURE__ */ React3.createElement(LocationContext.Provider, { children, value: locationContext }));\n}\nfunction Routes({\n  children,\n  location\n}) {\n  return useRoutes(createRoutesFromChildren(children), location);\n}\nfunction Await({\n  children,\n  errorElement,\n  resolve\n}) {\n  return /* @__PURE__ */ React3.createElement(AwaitErrorBoundary, { resolve, errorElement }, /* @__PURE__ */ React3.createElement(ResolveAwait, null, children));\n}\nvar AwaitErrorBoundary = class extends React3.Component {\n  constructor(props) {\n    super(props);\n    this.state = { error: null };\n  }\n  static getDerivedStateFromError(error) {\n    return { error };\n  }\n  componentDidCatch(error, errorInfo) {\n    console.error(\n      \"<Await> caught the following error during render\",\n      error,\n      errorInfo\n    );\n  }\n  render() {\n    let { children, errorElement, resolve } = this.props;\n    let promise = null;\n    let status = 0 /* pending */;\n    if (!(resolve instanceof Promise)) {\n      status = 1 /* success */;\n      promise = Promise.resolve();\n      Object.defineProperty(promise, \"_tracked\", { get: () => true });\n      Object.defineProperty(promise, \"_data\", { get: () => resolve });\n    } else if (this.state.error) {\n      status = 2 /* error */;\n      let renderError = this.state.error;\n      promise = Promise.reject().catch(() => {\n      });\n      Object.defineProperty(promise, \"_tracked\", { get: () => true });\n      Object.defineProperty(promise, \"_error\", { get: () => renderError });\n    } else if (resolve._tracked) {\n      promise = resolve;\n      status = \"_error\" in promise ? 2 /* error */ : \"_data\" in promise ? 1 /* success */ : 0 /* pending */;\n    } else {\n      status = 0 /* pending */;\n      Object.defineProperty(resolve, \"_tracked\", { get: () => true });\n      promise = resolve.then(\n        (data2) => Object.defineProperty(resolve, \"_data\", { get: () => data2 }),\n        (error) => Object.defineProperty(resolve, \"_error\", { get: () => error })\n      );\n    }\n    if (status === 2 /* error */ && !errorElement) {\n      throw promise._error;\n    }\n    if (status === 2 /* error */) {\n      return /* @__PURE__ */ React3.createElement(AwaitContext.Provider, { value: promise, children: errorElement });\n    }\n    if (status === 1 /* success */) {\n      return /* @__PURE__ */ React3.createElement(AwaitContext.Provider, { value: promise, children });\n    }\n    throw promise;\n  }\n};\nfunction ResolveAwait({\n  children\n}) {\n  let data2 = useAsyncValue();\n  let toRender = typeof children === \"function\" ? children(data2) : children;\n  return /* @__PURE__ */ React3.createElement(React3.Fragment, null, toRender);\n}\nfunction createRoutesFromChildren(children, parentPath = []) {\n  let routes = [];\n  React3.Children.forEach(children, (element, index) => {\n    if (!React3.isValidElement(element)) {\n      return;\n    }\n    let treePath = [...parentPath, index];\n    if (element.type === React3.Fragment) {\n      routes.push.apply(\n        routes,\n        createRoutesFromChildren(element.props.children, treePath)\n      );\n      return;\n    }\n    invariant(\n      element.type === Route,\n      `[${typeof element.type === \"string\" ? element.type : element.type.name}] is not a <Route> component. All component children of <Routes> must be a <Route> or <React.Fragment>`\n    );\n    invariant(\n      !element.props.index || !element.props.children,\n      \"An index route cannot have child routes.\"\n    );\n    let route = {\n      id: element.props.id || treePath.join(\"-\"),\n      caseSensitive: element.props.caseSensitive,\n      element: element.props.element,\n      Component: element.props.Component,\n      index: element.props.index,\n      path: element.props.path,\n      loader: element.props.loader,\n      action: element.props.action,\n      hydrateFallbackElement: element.props.hydrateFallbackElement,\n      HydrateFallback: element.props.HydrateFallback,\n      errorElement: element.props.errorElement,\n      ErrorBoundary: element.props.ErrorBoundary,\n      hasErrorBoundary: element.props.hasErrorBoundary === true || element.props.ErrorBoundary != null || element.props.errorElement != null,\n      shouldRevalidate: element.props.shouldRevalidate,\n      handle: element.props.handle,\n      lazy: element.props.lazy\n    };\n    if (element.props.children) {\n      route.children = createRoutesFromChildren(\n        element.props.children,\n        treePath\n      );\n    }\n    routes.push(route);\n  });\n  return routes;\n}\nvar createRoutesFromElements = createRoutesFromChildren;\nfunction renderMatches(matches) {\n  return _renderMatches(matches);\n}\nfunction useRouteComponentProps() {\n  return {\n    params: useParams(),\n    loaderData: useLoaderData(),\n    actionData: useActionData(),\n    matches: useMatches()\n  };\n}\nfunction WithComponentProps({\n  children\n}) {\n  const props = useRouteComponentProps();\n  return React3.cloneElement(children, props);\n}\nfunction withComponentProps(Component4) {\n  return function WithComponentProps2() {\n    const props = useRouteComponentProps();\n    return React3.createElement(Component4, props);\n  };\n}\nfunction useHydrateFallbackProps() {\n  return {\n    params: useParams(),\n    loaderData: useLoaderData(),\n    actionData: useActionData()\n  };\n}\nfunction WithHydrateFallbackProps({\n  children\n}) {\n  const props = useHydrateFallbackProps();\n  return React3.cloneElement(children, props);\n}\nfunction withHydrateFallbackProps(HydrateFallback) {\n  return function WithHydrateFallbackProps2() {\n    const props = useHydrateFallbackProps();\n    return React3.createElement(HydrateFallback, props);\n  };\n}\nfunction useErrorBoundaryProps() {\n  return {\n    params: useParams(),\n    loaderData: useLoaderData(),\n    actionData: useActionData(),\n    error: useRouteError()\n  };\n}\nfunction WithErrorBoundaryProps({\n  children\n}) {\n  const props = useErrorBoundaryProps();\n  return React3.cloneElement(children, props);\n}\nfunction withErrorBoundaryProps(ErrorBoundary) {\n  return function WithErrorBoundaryProps2() {\n    const props = useErrorBoundaryProps();\n    return React3.createElement(ErrorBoundary, props);\n  };\n}\n\n// lib/dom/dom.ts\nvar defaultMethod = \"get\";\nvar defaultEncType = \"application/x-www-form-urlencoded\";\nfunction isHtmlElement(object) {\n  return object != null && typeof object.tagName === \"string\";\n}\nfunction isButtonElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"button\";\n}\nfunction isFormElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"form\";\n}\nfunction isInputElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"input\";\n}\nfunction isModifiedEvent(event) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\nfunction shouldProcessLinkClick(event, target) {\n  return event.button === 0 && // Ignore everything but left clicks\n  (!target || target === \"_self\") && // Let browser handle \"target=_blank\" etc.\n  !isModifiedEvent(event);\n}\nfunction createSearchParams(init = \"\") {\n  return new URLSearchParams(\n    typeof init === \"string\" || Array.isArray(init) || init instanceof URLSearchParams ? init : Object.keys(init).reduce((memo2, key) => {\n      let value = init[key];\n      return memo2.concat(\n        Array.isArray(value) ? value.map((v) => [key, v]) : [[key, value]]\n      );\n    }, [])\n  );\n}\nfunction getSearchParamsForLocation(locationSearch, defaultSearchParams) {\n  let searchParams = createSearchParams(locationSearch);\n  if (defaultSearchParams) {\n    defaultSearchParams.forEach((_, key) => {\n      if (!searchParams.has(key)) {\n        defaultSearchParams.getAll(key).forEach((value) => {\n          searchParams.append(key, value);\n        });\n      }\n    });\n  }\n  return searchParams;\n}\nvar _formDataSupportsSubmitter = null;\nfunction isFormDataSubmitterSupported() {\n  if (_formDataSupportsSubmitter === null) {\n    try {\n      new FormData(\n        document.createElement(\"form\"),\n        // @ts-expect-error if FormData supports the submitter parameter, this will throw\n        0\n      );\n      _formDataSupportsSubmitter = false;\n    } catch (e) {\n      _formDataSupportsSubmitter = true;\n    }\n  }\n  return _formDataSupportsSubmitter;\n}\nvar supportedFormEncTypes = /* @__PURE__ */ new Set([\n  \"application/x-www-form-urlencoded\",\n  \"multipart/form-data\",\n  \"text/plain\"\n]);\nfunction getFormEncType(encType) {\n  if (encType != null && !supportedFormEncTypes.has(encType)) {\n    warning(\n      false,\n      `\"${encType}\" is not a valid \\`encType\\` for \\`<Form>\\`/\\`<fetcher.Form>\\` and will default to \"${defaultEncType}\"`\n    );\n    return null;\n  }\n  return encType;\n}\nfunction getFormSubmissionInfo(target, basename) {\n  let method;\n  let action;\n  let encType;\n  let formData;\n  let body;\n  if (isFormElement(target)) {\n    let attr = target.getAttribute(\"action\");\n    action = attr ? stripBasename(attr, basename) : null;\n    method = target.getAttribute(\"method\") || defaultMethod;\n    encType = getFormEncType(target.getAttribute(\"enctype\")) || defaultEncType;\n    formData = new FormData(target);\n  } else if (isButtonElement(target) || isInputElement(target) && (target.type === \"submit\" || target.type === \"image\")) {\n    let form = target.form;\n    if (form == null) {\n      throw new Error(\n        `Cannot submit a <button> or <input type=\"submit\"> without a <form>`\n      );\n    }\n    let attr = target.getAttribute(\"formaction\") || form.getAttribute(\"action\");\n    action = attr ? stripBasename(attr, basename) : null;\n    method = target.getAttribute(\"formmethod\") || form.getAttribute(\"method\") || defaultMethod;\n    encType = getFormEncType(target.getAttribute(\"formenctype\")) || getFormEncType(form.getAttribute(\"enctype\")) || defaultEncType;\n    formData = new FormData(form, target);\n    if (!isFormDataSubmitterSupported()) {\n      let { name, type, value } = target;\n      if (type === \"image\") {\n        let prefix = name ? `${name}.` : \"\";\n        formData.append(`${prefix}x`, \"0\");\n        formData.append(`${prefix}y`, \"0\");\n      } else if (name) {\n        formData.append(name, value);\n      }\n    }\n  } else if (isHtmlElement(target)) {\n    throw new Error(\n      `Cannot submit element that is not <form>, <button>, or <input type=\"submit|image\">`\n    );\n  } else {\n    method = defaultMethod;\n    action = null;\n    encType = defaultEncType;\n    body = target;\n  }\n  if (formData && encType === \"text/plain\") {\n    body = formData;\n    formData = void 0;\n  }\n  return { action, method: method.toLowerCase(), encType, formData, body };\n}\n\n// lib/dom/ssr/single-fetch.tsx\nimport * as React4 from \"react\";\n\n// vendor/turbo-stream-v2/utils.ts\nvar HOLE = -1;\nvar NAN = -2;\nvar NEGATIVE_INFINITY = -3;\nvar NEGATIVE_ZERO = -4;\nvar NULL = -5;\nvar POSITIVE_INFINITY = -6;\nvar UNDEFINED = -7;\nvar TYPE_BIGINT = \"B\";\nvar TYPE_DATE = \"D\";\nvar TYPE_ERROR = \"E\";\nvar TYPE_MAP = \"M\";\nvar TYPE_NULL_OBJECT = \"N\";\nvar TYPE_PROMISE = \"P\";\nvar TYPE_REGEXP = \"R\";\nvar TYPE_SET = \"S\";\nvar TYPE_SYMBOL = \"Y\";\nvar TYPE_URL = \"U\";\nvar TYPE_PREVIOUS_RESOLVED = \"Z\";\nvar Deferred2 = class {\n  constructor() {\n    this.promise = new Promise((resolve, reject) => {\n      this.resolve = resolve;\n      this.reject = reject;\n    });\n  }\n};\nfunction createLineSplittingTransform() {\n  const decoder = new TextDecoder();\n  let leftover = \"\";\n  return new TransformStream({\n    transform(chunk, controller) {\n      const str = decoder.decode(chunk, { stream: true });\n      const parts = (leftover + str).split(\"\\n\");\n      leftover = parts.pop() || \"\";\n      for (const part of parts) {\n        controller.enqueue(part);\n      }\n    },\n    flush(controller) {\n      if (leftover) {\n        controller.enqueue(leftover);\n      }\n    }\n  });\n}\n\n// vendor/turbo-stream-v2/flatten.ts\nfunction flatten(input) {\n  const { indices } = this;\n  const existing = indices.get(input);\n  if (existing) return [existing];\n  if (input === void 0) return UNDEFINED;\n  if (input === null) return NULL;\n  if (Number.isNaN(input)) return NAN;\n  if (input === Number.POSITIVE_INFINITY) return POSITIVE_INFINITY;\n  if (input === Number.NEGATIVE_INFINITY) return NEGATIVE_INFINITY;\n  if (input === 0 && 1 / input < 0) return NEGATIVE_ZERO;\n  const index = this.index++;\n  indices.set(input, index);\n  stringify.call(this, input, index);\n  return index;\n}\nfunction stringify(input, index) {\n  const { deferred, plugins, postPlugins } = this;\n  const str = this.stringified;\n  const stack = [[input, index]];\n  while (stack.length > 0) {\n    const [input2, index2] = stack.pop();\n    const partsForObj = (obj) => Object.keys(obj).map((k) => `\"_${flatten.call(this, k)}\":${flatten.call(this, obj[k])}`).join(\",\");\n    let error = null;\n    switch (typeof input2) {\n      case \"boolean\":\n      case \"number\":\n      case \"string\":\n        str[index2] = JSON.stringify(input2);\n        break;\n      case \"bigint\":\n        str[index2] = `[\"${TYPE_BIGINT}\",\"${input2}\"]`;\n        break;\n      case \"symbol\": {\n        const keyFor = Symbol.keyFor(input2);\n        if (!keyFor) {\n          error = new Error(\n            \"Cannot encode symbol unless created with Symbol.for()\"\n          );\n        } else {\n          str[index2] = `[\"${TYPE_SYMBOL}\",${JSON.stringify(keyFor)}]`;\n        }\n        break;\n      }\n      case \"object\": {\n        if (!input2) {\n          str[index2] = `${NULL}`;\n          break;\n        }\n        const isArray = Array.isArray(input2);\n        let pluginHandled = false;\n        if (!isArray && plugins) {\n          for (const plugin of plugins) {\n            const pluginResult = plugin(input2);\n            if (Array.isArray(pluginResult)) {\n              pluginHandled = true;\n              const [pluginIdentifier, ...rest] = pluginResult;\n              str[index2] = `[${JSON.stringify(pluginIdentifier)}`;\n              if (rest.length > 0) {\n                str[index2] += `,${rest.map((v) => flatten.call(this, v)).join(\",\")}`;\n              }\n              str[index2] += \"]\";\n              break;\n            }\n          }\n        }\n        if (!pluginHandled) {\n          let result = isArray ? \"[\" : \"{\";\n          if (isArray) {\n            for (let i = 0; i < input2.length; i++)\n              result += (i ? \",\" : \"\") + (i in input2 ? flatten.call(this, input2[i]) : HOLE);\n            str[index2] = `${result}]`;\n          } else if (input2 instanceof Date) {\n            const dateTime = input2.getTime();\n            str[index2] = `[\"${TYPE_DATE}\",${Number.isNaN(dateTime) ? JSON.stringify(\"invalid\") : dateTime}]`;\n          } else if (input2 instanceof URL) {\n            str[index2] = `[\"${TYPE_URL}\",${JSON.stringify(input2.href)}]`;\n          } else if (input2 instanceof RegExp) {\n            str[index2] = `[\"${TYPE_REGEXP}\",${JSON.stringify(\n              input2.source\n            )},${JSON.stringify(input2.flags)}]`;\n          } else if (input2 instanceof Set) {\n            if (input2.size > 0) {\n              str[index2] = `[\"${TYPE_SET}\",${[...input2].map((val) => flatten.call(this, val)).join(\",\")}]`;\n            } else {\n              str[index2] = `[\"${TYPE_SET}\"]`;\n            }\n          } else if (input2 instanceof Map) {\n            if (input2.size > 0) {\n              str[index2] = `[\"${TYPE_MAP}\",${[...input2].flatMap(([k, v]) => [\n                flatten.call(this, k),\n                flatten.call(this, v)\n              ]).join(\",\")}]`;\n            } else {\n              str[index2] = `[\"${TYPE_MAP}\"]`;\n            }\n          } else if (input2 instanceof Promise) {\n            str[index2] = `[\"${TYPE_PROMISE}\",${index2}]`;\n            deferred[index2] = input2;\n          } else if (input2 instanceof Error) {\n            str[index2] = `[\"${TYPE_ERROR}\",${JSON.stringify(input2.message)}`;\n            if (input2.name !== \"Error\") {\n              str[index2] += `,${JSON.stringify(input2.name)}`;\n            }\n            str[index2] += \"]\";\n          } else if (Object.getPrototypeOf(input2) === null) {\n            str[index2] = `[\"${TYPE_NULL_OBJECT}\",{${partsForObj(input2)}}]`;\n          } else if (isPlainObject(input2)) {\n            str[index2] = `{${partsForObj(input2)}}`;\n          } else {\n            error = new Error(\"Cannot encode object with prototype\");\n          }\n        }\n        break;\n      }\n      default: {\n        const isArray = Array.isArray(input2);\n        let pluginHandled = false;\n        if (!isArray && plugins) {\n          for (const plugin of plugins) {\n            const pluginResult = plugin(input2);\n            if (Array.isArray(pluginResult)) {\n              pluginHandled = true;\n              const [pluginIdentifier, ...rest] = pluginResult;\n              str[index2] = `[${JSON.stringify(pluginIdentifier)}`;\n              if (rest.length > 0) {\n                str[index2] += `,${rest.map((v) => flatten.call(this, v)).join(\",\")}`;\n              }\n              str[index2] += \"]\";\n              break;\n            }\n          }\n        }\n        if (!pluginHandled) {\n          error = new Error(\"Cannot encode function or unexpected type\");\n        }\n      }\n    }\n    if (error) {\n      let pluginHandled = false;\n      if (postPlugins) {\n        for (const plugin of postPlugins) {\n          const pluginResult = plugin(input2);\n          if (Array.isArray(pluginResult)) {\n            pluginHandled = true;\n            const [pluginIdentifier, ...rest] = pluginResult;\n            str[index2] = `[${JSON.stringify(pluginIdentifier)}`;\n            if (rest.length > 0) {\n              str[index2] += `,${rest.map((v) => flatten.call(this, v)).join(\",\")}`;\n            }\n            str[index2] += \"]\";\n            break;\n          }\n        }\n      }\n      if (!pluginHandled) {\n        throw error;\n      }\n    }\n  }\n}\nvar objectProtoNames = Object.getOwnPropertyNames(Object.prototype).sort().join(\"\\0\");\nfunction isPlainObject(thing) {\n  const proto = Object.getPrototypeOf(thing);\n  return proto === Object.prototype || proto === null || Object.getOwnPropertyNames(proto).sort().join(\"\\0\") === objectProtoNames;\n}\n\n// vendor/turbo-stream-v2/unflatten.ts\nvar globalObj = typeof window !== \"undefined\" ? window : typeof globalThis !== \"undefined\" ? globalThis : void 0;\nfunction unflatten(parsed) {\n  const { hydrated, values } = this;\n  if (typeof parsed === \"number\") return hydrate.call(this, parsed);\n  if (!Array.isArray(parsed) || !parsed.length) throw new SyntaxError();\n  const startIndex = values.length;\n  for (const value of parsed) {\n    values.push(value);\n  }\n  hydrated.length = values.length;\n  return hydrate.call(this, startIndex);\n}\nfunction hydrate(index) {\n  const { hydrated, values, deferred, plugins } = this;\n  let result;\n  const stack = [\n    [\n      index,\n      (v) => {\n        result = v;\n      }\n    ]\n  ];\n  let postRun = [];\n  while (stack.length > 0) {\n    const [index2, set] = stack.pop();\n    switch (index2) {\n      case UNDEFINED:\n        set(void 0);\n        continue;\n      case NULL:\n        set(null);\n        continue;\n      case NAN:\n        set(NaN);\n        continue;\n      case POSITIVE_INFINITY:\n        set(Infinity);\n        continue;\n      case NEGATIVE_INFINITY:\n        set(-Infinity);\n        continue;\n      case NEGATIVE_ZERO:\n        set(-0);\n        continue;\n    }\n    if (hydrated[index2]) {\n      set(hydrated[index2]);\n      continue;\n    }\n    const value = values[index2];\n    if (!value || typeof value !== \"object\") {\n      hydrated[index2] = value;\n      set(value);\n      continue;\n    }\n    if (Array.isArray(value)) {\n      if (typeof value[0] === \"string\") {\n        const [type, b, c] = value;\n        switch (type) {\n          case TYPE_DATE:\n            set(hydrated[index2] = new Date(b));\n            continue;\n          case TYPE_URL:\n            set(hydrated[index2] = new URL(b));\n            continue;\n          case TYPE_BIGINT:\n            set(hydrated[index2] = BigInt(b));\n            continue;\n          case TYPE_REGEXP:\n            set(hydrated[index2] = new RegExp(b, c));\n            continue;\n          case TYPE_SYMBOL:\n            set(hydrated[index2] = Symbol.for(b));\n            continue;\n          case TYPE_SET:\n            const newSet = /* @__PURE__ */ new Set();\n            hydrated[index2] = newSet;\n            for (let i = value.length - 1; i > 0; i--)\n              stack.push([\n                value[i],\n                (v) => {\n                  newSet.add(v);\n                }\n              ]);\n            set(newSet);\n            continue;\n          case TYPE_MAP:\n            const map = /* @__PURE__ */ new Map();\n            hydrated[index2] = map;\n            for (let i = value.length - 2; i > 0; i -= 2) {\n              const r = [];\n              stack.push([\n                value[i + 1],\n                (v) => {\n                  r[1] = v;\n                }\n              ]);\n              stack.push([\n                value[i],\n                (k) => {\n                  r[0] = k;\n                }\n              ]);\n              postRun.push(() => {\n                map.set(r[0], r[1]);\n              });\n            }\n            set(map);\n            continue;\n          case TYPE_NULL_OBJECT:\n            const obj = /* @__PURE__ */ Object.create(null);\n            hydrated[index2] = obj;\n            for (const key of Object.keys(b).reverse()) {\n              const r = [];\n              stack.push([\n                b[key],\n                (v) => {\n                  r[1] = v;\n                }\n              ]);\n              stack.push([\n                Number(key.slice(1)),\n                (k) => {\n                  r[0] = k;\n                }\n              ]);\n              postRun.push(() => {\n                obj[r[0]] = r[1];\n              });\n            }\n            set(obj);\n            continue;\n          case TYPE_PROMISE:\n            if (hydrated[b]) {\n              set(hydrated[index2] = hydrated[b]);\n            } else {\n              const d = new Deferred2();\n              deferred[b] = d;\n              set(hydrated[index2] = d.promise);\n            }\n            continue;\n          case TYPE_ERROR:\n            const [, message, errorType] = value;\n            let error = errorType && globalObj && globalObj[errorType] ? new globalObj[errorType](message) : new Error(message);\n            hydrated[index2] = error;\n            set(error);\n            continue;\n          case TYPE_PREVIOUS_RESOLVED:\n            set(hydrated[index2] = hydrated[b]);\n            continue;\n          default:\n            if (Array.isArray(plugins)) {\n              const r = [];\n              const vals = value.slice(1);\n              for (let i = 0; i < vals.length; i++) {\n                const v = vals[i];\n                stack.push([\n                  v,\n                  (v2) => {\n                    r[i] = v2;\n                  }\n                ]);\n              }\n              postRun.push(() => {\n                for (const plugin of plugins) {\n                  const result2 = plugin(value[0], ...r);\n                  if (result2) {\n                    set(hydrated[index2] = result2.value);\n                    return;\n                  }\n                }\n                throw new SyntaxError();\n              });\n              continue;\n            }\n            throw new SyntaxError();\n        }\n      } else {\n        const array = [];\n        hydrated[index2] = array;\n        for (let i = 0; i < value.length; i++) {\n          const n = value[i];\n          if (n !== HOLE) {\n            stack.push([\n              n,\n              (v) => {\n                array[i] = v;\n              }\n            ]);\n          }\n        }\n        set(array);\n        continue;\n      }\n    } else {\n      const object = {};\n      hydrated[index2] = object;\n      for (const key of Object.keys(value).reverse()) {\n        const r = [];\n        stack.push([\n          value[key],\n          (v) => {\n            r[1] = v;\n          }\n        ]);\n        stack.push([\n          Number(key.slice(1)),\n          (k) => {\n            r[0] = k;\n          }\n        ]);\n        postRun.push(() => {\n          object[r[0]] = r[1];\n        });\n      }\n      set(object);\n      continue;\n    }\n  }\n  while (postRun.length > 0) {\n    postRun.pop()();\n  }\n  return result;\n}\n\n// vendor/turbo-stream-v2/turbo-stream.ts\nasync function decode(readable, options) {\n  const { plugins } = options ?? {};\n  const done = new Deferred2();\n  const reader = readable.pipeThrough(createLineSplittingTransform()).getReader();\n  const decoder = {\n    values: [],\n    hydrated: [],\n    deferred: {},\n    plugins\n  };\n  const decoded = await decodeInitial.call(decoder, reader);\n  let donePromise = done.promise;\n  if (decoded.done) {\n    done.resolve();\n  } else {\n    donePromise = decodeDeferred.call(decoder, reader).then(done.resolve).catch((reason) => {\n      for (const deferred of Object.values(decoder.deferred)) {\n        deferred.reject(reason);\n      }\n      done.reject(reason);\n    });\n  }\n  return {\n    done: donePromise.then(() => reader.closed),\n    value: decoded.value\n  };\n}\nasync function decodeInitial(reader) {\n  const read = await reader.read();\n  if (!read.value) {\n    throw new SyntaxError();\n  }\n  let line;\n  try {\n    line = JSON.parse(read.value);\n  } catch (reason) {\n    throw new SyntaxError();\n  }\n  return {\n    done: read.done,\n    value: unflatten.call(this, line)\n  };\n}\nasync function decodeDeferred(reader) {\n  let read = await reader.read();\n  while (!read.done) {\n    if (!read.value) continue;\n    const line = read.value;\n    switch (line[0]) {\n      case TYPE_PROMISE: {\n        const colonIndex = line.indexOf(\":\");\n        const deferredId = Number(line.slice(1, colonIndex));\n        const deferred = this.deferred[deferredId];\n        if (!deferred) {\n          throw new Error(`Deferred ID ${deferredId} not found in stream`);\n        }\n        const lineData = line.slice(colonIndex + 1);\n        let jsonLine;\n        try {\n          jsonLine = JSON.parse(lineData);\n        } catch (reason) {\n          throw new SyntaxError();\n        }\n        const value = unflatten.call(this, jsonLine);\n        deferred.resolve(value);\n        break;\n      }\n      case TYPE_ERROR: {\n        const colonIndex = line.indexOf(\":\");\n        const deferredId = Number(line.slice(1, colonIndex));\n        const deferred = this.deferred[deferredId];\n        if (!deferred) {\n          throw new Error(`Deferred ID ${deferredId} not found in stream`);\n        }\n        const lineData = line.slice(colonIndex + 1);\n        let jsonLine;\n        try {\n          jsonLine = JSON.parse(lineData);\n        } catch (reason) {\n          throw new SyntaxError();\n        }\n        const value = unflatten.call(this, jsonLine);\n        deferred.reject(value);\n        break;\n      }\n      default:\n        throw new SyntaxError();\n    }\n    read = await reader.read();\n  }\n}\nfunction encode(input, options) {\n  const { plugins, postPlugins, signal } = options ?? {};\n  const encoder = {\n    deferred: {},\n    index: 0,\n    indices: /* @__PURE__ */ new Map(),\n    stringified: [],\n    plugins,\n    postPlugins,\n    signal\n  };\n  const textEncoder = new TextEncoder();\n  let lastSentIndex = 0;\n  const readable = new ReadableStream({\n    async start(controller) {\n      const id = flatten.call(encoder, input);\n      if (Array.isArray(id)) {\n        throw new Error(\"This should never happen\");\n      }\n      if (id < 0) {\n        controller.enqueue(textEncoder.encode(`${id}\n`));\n      } else {\n        controller.enqueue(\n          textEncoder.encode(`[${encoder.stringified.join(\",\")}]\n`)\n        );\n        lastSentIndex = encoder.stringified.length - 1;\n      }\n      const seenPromises = /* @__PURE__ */ new WeakSet();\n      if (Object.keys(encoder.deferred).length) {\n        let raceDone;\n        const racePromise = new Promise((resolve, reject) => {\n          raceDone = resolve;\n          if (signal) {\n            const rejectPromise = () => reject(signal.reason || new Error(\"Signal was aborted.\"));\n            if (signal.aborted) {\n              rejectPromise();\n            } else {\n              signal.addEventListener(\"abort\", (event) => {\n                rejectPromise();\n              });\n            }\n          }\n        });\n        while (Object.keys(encoder.deferred).length > 0) {\n          for (const [deferredId, deferred] of Object.entries(\n            encoder.deferred\n          )) {\n            if (seenPromises.has(deferred)) continue;\n            seenPromises.add(\n              // biome-ignore lint/suspicious/noAssignInExpressions: <explanation>\n              encoder.deferred[Number(deferredId)] = Promise.race([\n                racePromise,\n                deferred\n              ]).then(\n                (resolved) => {\n                  const id2 = flatten.call(encoder, resolved);\n                  if (Array.isArray(id2)) {\n                    controller.enqueue(\n                      textEncoder.encode(\n                        `${TYPE_PROMISE}${deferredId}:[[\"${TYPE_PREVIOUS_RESOLVED}\",${id2[0]}]]\n`\n                      )\n                    );\n                    encoder.index++;\n                    lastSentIndex++;\n                  } else if (id2 < 0) {\n                    controller.enqueue(\n                      textEncoder.encode(\n                        `${TYPE_PROMISE}${deferredId}:${id2}\n`\n                      )\n                    );\n                  } else {\n                    const values = encoder.stringified.slice(lastSentIndex + 1).join(\",\");\n                    controller.enqueue(\n                      textEncoder.encode(\n                        `${TYPE_PROMISE}${deferredId}:[${values}]\n`\n                      )\n                    );\n                    lastSentIndex = encoder.stringified.length - 1;\n                  }\n                },\n                (reason) => {\n                  if (!reason || typeof reason !== \"object\" || !(reason instanceof Error)) {\n                    reason = new Error(\"An unknown error occurred\");\n                  }\n                  const id2 = flatten.call(encoder, reason);\n                  if (Array.isArray(id2)) {\n                    controller.enqueue(\n                      textEncoder.encode(\n                        `${TYPE_ERROR}${deferredId}:[[\"${TYPE_PREVIOUS_RESOLVED}\",${id2[0]}]]\n`\n                      )\n                    );\n                    encoder.index++;\n                    lastSentIndex++;\n                  } else if (id2 < 0) {\n                    controller.enqueue(\n                      textEncoder.encode(\n                        `${TYPE_ERROR}${deferredId}:${id2}\n`\n                      )\n                    );\n                  } else {\n                    const values = encoder.stringified.slice(lastSentIndex + 1).join(\",\");\n                    controller.enqueue(\n                      textEncoder.encode(\n                        `${TYPE_ERROR}${deferredId}:[${values}]\n`\n                      )\n                    );\n                    lastSentIndex = encoder.stringified.length - 1;\n                  }\n                }\n              ).finally(() => {\n                delete encoder.deferred[Number(deferredId)];\n              })\n            );\n          }\n          await Promise.race(Object.values(encoder.deferred));\n        }\n        raceDone();\n      }\n      await Promise.all(Object.values(encoder.deferred));\n      controller.close();\n    }\n  });\n  return readable;\n}\n\n// lib/dom/ssr/data.ts\nasync function createRequestInit(request) {\n  let init = { signal: request.signal };\n  if (request.method !== \"GET\") {\n    init.method = request.method;\n    let contentType = request.headers.get(\"Content-Type\");\n    if (contentType && /\\bapplication\\/json\\b/.test(contentType)) {\n      init.headers = { \"Content-Type\": contentType };\n      init.body = JSON.stringify(await request.json());\n    } else if (contentType && /\\btext\\/plain\\b/.test(contentType)) {\n      init.headers = { \"Content-Type\": contentType };\n      init.body = await request.text();\n    } else if (contentType && /\\bapplication\\/x-www-form-urlencoded\\b/.test(contentType)) {\n      init.body = new URLSearchParams(await request.text());\n    } else {\n      init.body = await request.formData();\n    }\n  }\n  return init;\n}\n\n// lib/dom/ssr/markup.ts\nvar ESCAPE_LOOKUP = {\n  \"&\": \"\\\\u0026\",\n  \">\": \"\\\\u003e\",\n  \"<\": \"\\\\u003c\",\n  \"\\u2028\": \"\\\\u2028\",\n  \"\\u2029\": \"\\\\u2029\"\n};\nvar ESCAPE_REGEX = /[&><\\u2028\\u2029]/g;\nfunction escapeHtml(html) {\n  return html.replace(ESCAPE_REGEX, (match) => ESCAPE_LOOKUP[match]);\n}\nfunction createHtml(html) {\n  return { __html: html };\n}\n\n// lib/dom/ssr/invariant.ts\nfunction invariant2(value, message) {\n  if (value === false || value === null || typeof value === \"undefined\") {\n    throw new Error(message);\n  }\n}\n\n// lib/dom/ssr/single-fetch.tsx\nvar SingleFetchRedirectSymbol = Symbol(\"SingleFetchRedirect\");\nvar SingleFetchNoResultError = class extends Error {\n};\nvar SINGLE_FETCH_REDIRECT_STATUS = 202;\nvar NO_BODY_STATUS_CODES = /* @__PURE__ */ new Set([100, 101, 204, 205]);\nfunction StreamTransfer({\n  context,\n  identifier,\n  reader,\n  textDecoder,\n  nonce\n}) {\n  if (!context.renderMeta || !context.renderMeta.didRenderScripts) {\n    return null;\n  }\n  if (!context.renderMeta.streamCache) {\n    context.renderMeta.streamCache = {};\n  }\n  let { streamCache } = context.renderMeta;\n  let promise = streamCache[identifier];\n  if (!promise) {\n    promise = streamCache[identifier] = reader.read().then((result) => {\n      streamCache[identifier].result = {\n        done: result.done,\n        value: textDecoder.decode(result.value, { stream: true })\n      };\n    }).catch((e) => {\n      streamCache[identifier].error = e;\n    });\n  }\n  if (promise.error) {\n    throw promise.error;\n  }\n  if (promise.result === void 0) {\n    throw promise;\n  }\n  let { done, value } = promise.result;\n  let scriptTag = value ? /* @__PURE__ */ React4.createElement(\n    \"script\",\n    {\n      nonce,\n      dangerouslySetInnerHTML: {\n        __html: `window.__reactRouterContext.streamController.enqueue(${escapeHtml(\n          JSON.stringify(value)\n        )});`\n      }\n    }\n  ) : null;\n  if (done) {\n    return /* @__PURE__ */ React4.createElement(React4.Fragment, null, scriptTag, /* @__PURE__ */ React4.createElement(\n      \"script\",\n      {\n        nonce,\n        dangerouslySetInnerHTML: {\n          __html: `window.__reactRouterContext.streamController.close();`\n        }\n      }\n    ));\n  } else {\n    return /* @__PURE__ */ React4.createElement(React4.Fragment, null, scriptTag, /* @__PURE__ */ React4.createElement(React4.Suspense, null, /* @__PURE__ */ React4.createElement(\n      StreamTransfer,\n      {\n        context,\n        identifier: identifier + 1,\n        reader,\n        textDecoder,\n        nonce\n      }\n    )));\n  }\n}\nfunction getTurboStreamSingleFetchDataStrategy(getRouter, manifest, routeModules, ssr, basename) {\n  let dataStrategy = getSingleFetchDataStrategyImpl(\n    getRouter,\n    (match) => {\n      let manifestRoute = manifest.routes[match.route.id];\n      invariant2(manifestRoute, \"Route not found in manifest\");\n      let routeModule = routeModules[match.route.id];\n      return {\n        hasLoader: manifestRoute.hasLoader,\n        hasClientLoader: manifestRoute.hasClientLoader,\n        hasShouldRevalidate: Boolean(routeModule?.shouldRevalidate)\n      };\n    },\n    fetchAndDecodeViaTurboStream,\n    ssr,\n    basename\n  );\n  return async (args) => args.unstable_runClientMiddleware(dataStrategy);\n}\nfunction getSingleFetchDataStrategyImpl(getRouter, getRouteInfo, fetchAndDecode, ssr, basename, shouldAllowOptOut = () => true) {\n  return async (args) => {\n    let { request, matches, fetcherKey } = args;\n    let router = getRouter();\n    if (request.method !== \"GET\") {\n      return singleFetchActionStrategy(args, fetchAndDecode, basename);\n    }\n    let foundRevalidatingServerLoader = matches.some((m) => {\n      let { hasLoader, hasClientLoader } = getRouteInfo(m);\n      return m.unstable_shouldCallHandler() && hasLoader && !hasClientLoader;\n    });\n    if (!ssr && !foundRevalidatingServerLoader) {\n      return nonSsrStrategy(args, getRouteInfo, fetchAndDecode, basename);\n    }\n    if (fetcherKey) {\n      return singleFetchLoaderFetcherStrategy(args, fetchAndDecode, basename);\n    }\n    return singleFetchLoaderNavigationStrategy(\n      args,\n      router,\n      getRouteInfo,\n      fetchAndDecode,\n      ssr,\n      basename,\n      shouldAllowOptOut\n    );\n  };\n}\nasync function singleFetchActionStrategy(args, fetchAndDecode, basename) {\n  let actionMatch = args.matches.find((m) => m.unstable_shouldCallHandler());\n  invariant2(actionMatch, \"No action match found\");\n  let actionStatus = void 0;\n  let result = await actionMatch.resolve(async (handler) => {\n    let result2 = await handler(async () => {\n      let { data: data2, status } = await fetchAndDecode(args, basename, [\n        actionMatch.route.id\n      ]);\n      actionStatus = status;\n      return unwrapSingleFetchResult(data2, actionMatch.route.id);\n    });\n    return result2;\n  });\n  if (isResponse(result.result) || isRouteErrorResponse(result.result) || isDataWithResponseInit(result.result)) {\n    return { [actionMatch.route.id]: result };\n  }\n  return {\n    [actionMatch.route.id]: {\n      type: result.type,\n      result: data(result.result, actionStatus)\n    }\n  };\n}\nasync function nonSsrStrategy(args, getRouteInfo, fetchAndDecode, basename) {\n  let matchesToLoad = args.matches.filter(\n    (m) => m.unstable_shouldCallHandler()\n  );\n  let results = {};\n  await Promise.all(\n    matchesToLoad.map(\n      (m) => m.resolve(async (handler) => {\n        try {\n          let { hasClientLoader } = getRouteInfo(m);\n          let routeId = m.route.id;\n          let result = hasClientLoader ? await handler(async () => {\n            let { data: data2 } = await fetchAndDecode(args, basename, [routeId]);\n            return unwrapSingleFetchResult(data2, routeId);\n          }) : await handler();\n          results[m.route.id] = { type: \"data\", result };\n        } catch (e) {\n          results[m.route.id] = { type: \"error\", result: e };\n        }\n      })\n    )\n  );\n  return results;\n}\nasync function singleFetchLoaderNavigationStrategy(args, router, getRouteInfo, fetchAndDecode, ssr, basename, shouldAllowOptOut = () => true) {\n  let routesParams = /* @__PURE__ */ new Set();\n  let foundOptOutRoute = false;\n  let routeDfds = args.matches.map(() => createDeferred2());\n  let singleFetchDfd = createDeferred2();\n  let results = {};\n  let resolvePromise = Promise.all(\n    args.matches.map(\n      async (m, i) => m.resolve(async (handler) => {\n        routeDfds[i].resolve();\n        let routeId = m.route.id;\n        let { hasLoader, hasClientLoader, hasShouldRevalidate } = getRouteInfo(m);\n        let defaultShouldRevalidate = !m.unstable_shouldRevalidateArgs || m.unstable_shouldRevalidateArgs.actionStatus == null || m.unstable_shouldRevalidateArgs.actionStatus < 400;\n        let shouldCall = m.unstable_shouldCallHandler(defaultShouldRevalidate);\n        if (!shouldCall) {\n          foundOptOutRoute || (foundOptOutRoute = m.unstable_shouldRevalidateArgs != null && // This is a revalidation,\n          hasLoader && // for a route with a server loader,\n          hasShouldRevalidate === true);\n          return;\n        }\n        if (shouldAllowOptOut(m) && hasClientLoader) {\n          if (hasLoader) {\n            foundOptOutRoute = true;\n          }\n          try {\n            let result = await handler(async () => {\n              let { data: data2 } = await fetchAndDecode(args, basename, [routeId]);\n              return unwrapSingleFetchResult(data2, routeId);\n            });\n            results[routeId] = { type: \"data\", result };\n          } catch (e) {\n            results[routeId] = { type: \"error\", result: e };\n          }\n          return;\n        }\n        if (hasLoader) {\n          routesParams.add(routeId);\n        }\n        try {\n          let result = await handler(async () => {\n            let data2 = await singleFetchDfd.promise;\n            return unwrapSingleFetchResult(data2, routeId);\n          });\n          results[routeId] = { type: \"data\", result };\n        } catch (e) {\n          results[routeId] = { type: \"error\", result: e };\n        }\n      })\n    )\n  );\n  await Promise.all(routeDfds.map((d) => d.promise));\n  let isInitialLoad = !router.state.initialized && router.state.navigation.state === \"idle\";\n  if ((isInitialLoad || routesParams.size === 0) && !window.__reactRouterHdrActive) {\n    singleFetchDfd.resolve({ routes: {} });\n  } else {\n    let targetRoutes = ssr && foundOptOutRoute && routesParams.size > 0 ? [...routesParams.keys()] : void 0;\n    try {\n      let data2 = await fetchAndDecode(args, basename, targetRoutes);\n      singleFetchDfd.resolve(data2.data);\n    } catch (e) {\n      singleFetchDfd.reject(e);\n    }\n  }\n  await resolvePromise;\n  await bubbleMiddlewareErrors(\n    singleFetchDfd.promise,\n    args.matches,\n    routesParams,\n    results\n  );\n  return results;\n}\nasync function bubbleMiddlewareErrors(singleFetchPromise, matches, routesParams, results) {\n  try {\n    let middlewareError;\n    let fetchedData = await singleFetchPromise;\n    if (\"routes\" in fetchedData) {\n      for (let match of matches) {\n        if (match.route.id in fetchedData.routes) {\n          let routeResult = fetchedData.routes[match.route.id];\n          if (\"error\" in routeResult) {\n            middlewareError = routeResult.error;\n            if (results[match.route.id]?.result == null) {\n              results[match.route.id] = {\n                type: \"error\",\n                result: middlewareError\n              };\n            }\n            break;\n          }\n        }\n      }\n    }\n    if (middlewareError !== void 0) {\n      Array.from(routesParams.values()).forEach((routeId) => {\n        if (results[routeId].result instanceof SingleFetchNoResultError) {\n          results[routeId].result = middlewareError;\n        }\n      });\n    }\n  } catch (e) {\n  }\n}\nasync function singleFetchLoaderFetcherStrategy(args, fetchAndDecode, basename) {\n  let fetcherMatch = args.matches.find((m) => m.unstable_shouldCallHandler());\n  invariant2(fetcherMatch, \"No fetcher match found\");\n  let routeId = fetcherMatch.route.id;\n  let result = await fetcherMatch.resolve(\n    async (handler) => handler(async () => {\n      let { data: data2 } = await fetchAndDecode(args, basename, [routeId]);\n      return unwrapSingleFetchResult(data2, routeId);\n    })\n  );\n  return { [fetcherMatch.route.id]: result };\n}\nfunction stripIndexParam(url) {\n  let indexValues = url.searchParams.getAll(\"index\");\n  url.searchParams.delete(\"index\");\n  let indexValuesToKeep = [];\n  for (let indexValue of indexValues) {\n    if (indexValue) {\n      indexValuesToKeep.push(indexValue);\n    }\n  }\n  for (let toKeep of indexValuesToKeep) {\n    url.searchParams.append(\"index\", toKeep);\n  }\n  return url;\n}\nfunction singleFetchUrl(reqUrl, basename, extension) {\n  let url = typeof reqUrl === \"string\" ? new URL(\n    reqUrl,\n    // This can be called during the SSR flow via PrefetchPageLinksImpl so\n    // don't assume window is available\n    typeof window === \"undefined\" ? \"server://singlefetch/\" : window.location.origin\n  ) : reqUrl;\n  if (url.pathname === \"/\") {\n    url.pathname = `_root.${extension}`;\n  } else if (basename && stripBasename(url.pathname, basename) === \"/\") {\n    url.pathname = `${basename.replace(/\\/$/, \"\")}/_root.${extension}`;\n  } else {\n    url.pathname = `${url.pathname.replace(/\\/$/, \"\")}.${extension}`;\n  }\n  return url;\n}\nasync function fetchAndDecodeViaTurboStream(args, basename, targetRoutes) {\n  let { request } = args;\n  let url = singleFetchUrl(request.url, basename, \"data\");\n  if (request.method === \"GET\") {\n    url = stripIndexParam(url);\n    if (targetRoutes) {\n      url.searchParams.set(\"_routes\", targetRoutes.join(\",\"));\n    }\n  }\n  let res = await fetch(url, await createRequestInit(request));\n  if (res.status === 404 && !res.headers.has(\"X-Remix-Response\")) {\n    throw new ErrorResponseImpl(404, \"Not Found\", true);\n  }\n  if (res.status === 204 && res.headers.has(\"X-Remix-Redirect\")) {\n    return {\n      status: SINGLE_FETCH_REDIRECT_STATUS,\n      data: {\n        redirect: {\n          redirect: res.headers.get(\"X-Remix-Redirect\"),\n          status: Number(res.headers.get(\"X-Remix-Status\") || \"302\"),\n          revalidate: res.headers.get(\"X-Remix-Revalidate\") === \"true\",\n          reload: res.headers.get(\"X-Remix-Reload-Document\") === \"true\",\n          replace: res.headers.get(\"X-Remix-Replace\") === \"true\"\n        }\n      }\n    };\n  }\n  if (NO_BODY_STATUS_CODES.has(res.status)) {\n    let routes = {};\n    if (targetRoutes && request.method !== \"GET\") {\n      routes[targetRoutes[0]] = { data: void 0 };\n    }\n    return {\n      status: res.status,\n      data: { routes }\n    };\n  }\n  invariant2(res.body, \"No response body to decode\");\n  try {\n    let decoded = await decodeViaTurboStream(res.body, window);\n    let data2;\n    if (request.method === \"GET\") {\n      let typed = decoded.value;\n      if (SingleFetchRedirectSymbol in typed) {\n        data2 = { redirect: typed[SingleFetchRedirectSymbol] };\n      } else {\n        data2 = { routes: typed };\n      }\n    } else {\n      let typed = decoded.value;\n      let routeId = targetRoutes?.[0];\n      invariant2(routeId, \"No routeId found for single fetch call decoding\");\n      if (\"redirect\" in typed) {\n        data2 = { redirect: typed };\n      } else {\n        data2 = { routes: { [routeId]: typed } };\n      }\n    }\n    return { status: res.status, data: data2 };\n  } catch (e) {\n    throw new Error(\"Unable to decode turbo-stream response\");\n  }\n}\nfunction decodeViaTurboStream(body, global) {\n  return decode(body, {\n    plugins: [\n      (type, ...rest) => {\n        if (type === \"SanitizedError\") {\n          let [name, message, stack] = rest;\n          let Constructor = Error;\n          if (name && name in global && typeof global[name] === \"function\") {\n            Constructor = global[name];\n          }\n          let error = new Constructor(message);\n          error.stack = stack;\n          return { value: error };\n        }\n        if (type === \"ErrorResponse\") {\n          let [data2, status, statusText] = rest;\n          return {\n            value: new ErrorResponseImpl(status, statusText, data2)\n          };\n        }\n        if (type === \"SingleFetchRedirect\") {\n          return { value: { [SingleFetchRedirectSymbol]: rest[0] } };\n        }\n        if (type === \"SingleFetchClassInstance\") {\n          return { value: rest[0] };\n        }\n        if (type === \"SingleFetchFallback\") {\n          return { value: void 0 };\n        }\n      }\n    ]\n  });\n}\nfunction unwrapSingleFetchResult(result, routeId) {\n  if (\"redirect\" in result) {\n    let {\n      redirect: location,\n      revalidate,\n      reload,\n      replace: replace2,\n      status\n    } = result.redirect;\n    throw redirect(location, {\n      status,\n      headers: {\n        // Three R's of redirecting (lol Veep)\n        ...revalidate ? { \"X-Remix-Revalidate\": \"yes\" } : null,\n        ...reload ? { \"X-Remix-Reload-Document\": \"yes\" } : null,\n        ...replace2 ? { \"X-Remix-Replace\": \"yes\" } : null\n      }\n    });\n  }\n  let routeResult = result.routes[routeId];\n  if (routeResult == null) {\n    throw new SingleFetchNoResultError(\n      `No result found for routeId \"${routeId}\"`\n    );\n  } else if (\"error\" in routeResult) {\n    throw routeResult.error;\n  } else if (\"data\" in routeResult) {\n    return routeResult.data;\n  } else {\n    throw new Error(`Invalid response found for routeId \"${routeId}\"`);\n  }\n}\nfunction createDeferred2() {\n  let resolve;\n  let reject;\n  let promise = new Promise((res, rej) => {\n    resolve = async (val) => {\n      res(val);\n      try {\n        await promise;\n      } catch (e) {\n      }\n    };\n    reject = async (error) => {\n      rej(error);\n      try {\n        await promise;\n      } catch (e) {\n      }\n    };\n  });\n  return {\n    promise,\n    //@ts-ignore\n    resolve,\n    //@ts-ignore\n    reject\n  };\n}\n\n// lib/dom/ssr/errorBoundaries.tsx\nimport * as React9 from \"react\";\n\n// lib/dom/ssr/components.tsx\nimport * as React8 from \"react\";\n\n// lib/dom/ssr/routeModules.ts\nasync function loadRouteModule(route, routeModulesCache) {\n  if (route.id in routeModulesCache) {\n    return routeModulesCache[route.id];\n  }\n  try {\n    let routeModule = await import(\n      /* @vite-ignore */\n      /* webpackIgnore: true */\n      route.module\n    );\n    routeModulesCache[route.id] = routeModule;\n    return routeModule;\n  } catch (error) {\n    console.error(\n      `Error loading route module \\`${route.module}\\`, reloading page...`\n    );\n    console.error(error);\n    if (window.__reactRouterContext && window.__reactRouterContext.isSpaMode && // @ts-expect-error\n    import.meta.hot) {\n      throw error;\n    }\n    window.location.reload();\n    return new Promise(() => {\n    });\n  }\n}\n\n// lib/dom/ssr/links.ts\nfunction getKeyedLinksForMatches(matches, routeModules, manifest) {\n  let descriptors = matches.map((match) => {\n    let module = routeModules[match.route.id];\n    let route = manifest.routes[match.route.id];\n    return [\n      route && route.css ? route.css.map((href) => ({ rel: \"stylesheet\", href })) : [],\n      module?.links?.() || []\n    ];\n  }).flat(2);\n  let preloads = getModuleLinkHrefs(matches, manifest);\n  return dedupeLinkDescriptors(descriptors, preloads);\n}\nfunction getRouteCssDescriptors(route) {\n  if (!route.css) return [];\n  return route.css.map((href) => ({ rel: \"stylesheet\", href }));\n}\nasync function prefetchRouteCss(route) {\n  if (!route.css) return;\n  let descriptors = getRouteCssDescriptors(route);\n  await Promise.all(descriptors.map(prefetchStyleLink));\n}\nasync function prefetchStyleLinks(route, routeModule) {\n  if (!route.css && !routeModule.links || !isPreloadSupported()) return;\n  let descriptors = [];\n  if (route.css) {\n    descriptors.push(...getRouteCssDescriptors(route));\n  }\n  if (routeModule.links) {\n    descriptors.push(...routeModule.links());\n  }\n  if (descriptors.length === 0) return;\n  let styleLinks = [];\n  for (let descriptor of descriptors) {\n    if (!isPageLinkDescriptor(descriptor) && descriptor.rel === \"stylesheet\") {\n      styleLinks.push({\n        ...descriptor,\n        rel: \"preload\",\n        as: \"style\"\n      });\n    }\n  }\n  await Promise.all(styleLinks.map(prefetchStyleLink));\n}\nasync function prefetchStyleLink(descriptor) {\n  return new Promise((resolve) => {\n    if (descriptor.media && !window.matchMedia(descriptor.media).matches || document.querySelector(\n      `link[rel=\"stylesheet\"][href=\"${descriptor.href}\"]`\n    )) {\n      return resolve();\n    }\n    let link = document.createElement(\"link\");\n    Object.assign(link, descriptor);\n    function removeLink() {\n      if (document.head.contains(link)) {\n        document.head.removeChild(link);\n      }\n    }\n    link.onload = () => {\n      removeLink();\n      resolve();\n    };\n    link.onerror = () => {\n      removeLink();\n      resolve();\n    };\n    document.head.appendChild(link);\n  });\n}\nfunction isPageLinkDescriptor(object) {\n  return object != null && typeof object.page === \"string\";\n}\nfunction isHtmlLinkDescriptor(object) {\n  if (object == null) {\n    return false;\n  }\n  if (object.href == null) {\n    return object.rel === \"preload\" && typeof object.imageSrcSet === \"string\" && typeof object.imageSizes === \"string\";\n  }\n  return typeof object.rel === \"string\" && typeof object.href === \"string\";\n}\nasync function getKeyedPrefetchLinks(matches, manifest, routeModules) {\n  let links = await Promise.all(\n    matches.map(async (match) => {\n      let route = manifest.routes[match.route.id];\n      if (route) {\n        let mod = await loadRouteModule(route, routeModules);\n        return mod.links ? mod.links() : [];\n      }\n      return [];\n    })\n  );\n  return dedupeLinkDescriptors(\n    links.flat(1).filter(isHtmlLinkDescriptor).filter((link) => link.rel === \"stylesheet\" || link.rel === \"preload\").map(\n      (link) => link.rel === \"stylesheet\" ? { ...link, rel: \"prefetch\", as: \"style\" } : { ...link, rel: \"prefetch\" }\n    )\n  );\n}\nfunction getNewMatchesForLinks(page, nextMatches, currentMatches, manifest, location, mode) {\n  let isNew = (match, index) => {\n    if (!currentMatches[index]) return true;\n    return match.route.id !== currentMatches[index].route.id;\n  };\n  let matchPathChanged = (match, index) => {\n    return (\n      // param change, /users/123 -> /users/456\n      currentMatches[index].pathname !== match.pathname || // splat param changed, which is not present in match.path\n      // e.g. /files/images/avatar.jpg -> files/finances.xls\n      currentMatches[index].route.path?.endsWith(\"*\") && currentMatches[index].params[\"*\"] !== match.params[\"*\"]\n    );\n  };\n  if (mode === \"assets\") {\n    return nextMatches.filter(\n      (match, index) => isNew(match, index) || matchPathChanged(match, index)\n    );\n  }\n  if (mode === \"data\") {\n    return nextMatches.filter((match, index) => {\n      let manifestRoute = manifest.routes[match.route.id];\n      if (!manifestRoute || !manifestRoute.hasLoader) {\n        return false;\n      }\n      if (isNew(match, index) || matchPathChanged(match, index)) {\n        return true;\n      }\n      if (match.route.shouldRevalidate) {\n        let routeChoice = match.route.shouldRevalidate({\n          currentUrl: new URL(\n            location.pathname + location.search + location.hash,\n            window.origin\n          ),\n          currentParams: currentMatches[0]?.params || {},\n          nextUrl: new URL(page, window.origin),\n          nextParams: match.params,\n          defaultShouldRevalidate: true\n        });\n        if (typeof routeChoice === \"boolean\") {\n          return routeChoice;\n        }\n      }\n      return true;\n    });\n  }\n  return [];\n}\nfunction getModuleLinkHrefs(matches, manifest, { includeHydrateFallback } = {}) {\n  return dedupeHrefs(\n    matches.map((match) => {\n      let route = manifest.routes[match.route.id];\n      if (!route) return [];\n      let hrefs = [route.module];\n      if (route.clientActionModule) {\n        hrefs = hrefs.concat(route.clientActionModule);\n      }\n      if (route.clientLoaderModule) {\n        hrefs = hrefs.concat(route.clientLoaderModule);\n      }\n      if (includeHydrateFallback && route.hydrateFallbackModule) {\n        hrefs = hrefs.concat(route.hydrateFallbackModule);\n      }\n      if (route.imports) {\n        hrefs = hrefs.concat(route.imports);\n      }\n      return hrefs;\n    }).flat(1)\n  );\n}\nfunction dedupeHrefs(hrefs) {\n  return [...new Set(hrefs)];\n}\nfunction sortKeys(obj) {\n  let sorted = {};\n  let keys = Object.keys(obj).sort();\n  for (let key of keys) {\n    sorted[key] = obj[key];\n  }\n  return sorted;\n}\nfunction dedupeLinkDescriptors(descriptors, preloads) {\n  let set = /* @__PURE__ */ new Set();\n  let preloadsSet = new Set(preloads);\n  return descriptors.reduce((deduped, descriptor) => {\n    let alreadyModulePreload = preloads && !isPageLinkDescriptor(descriptor) && descriptor.as === \"script\" && descriptor.href && preloadsSet.has(descriptor.href);\n    if (alreadyModulePreload) {\n      return deduped;\n    }\n    let key = JSON.stringify(sortKeys(descriptor));\n    if (!set.has(key)) {\n      set.add(key);\n      deduped.push({ key, link: descriptor });\n    }\n    return deduped;\n  }, []);\n}\nvar _isPreloadSupported;\nfunction isPreloadSupported() {\n  if (_isPreloadSupported !== void 0) {\n    return _isPreloadSupported;\n  }\n  let el = document.createElement(\"link\");\n  _isPreloadSupported = el.relList.supports(\"preload\");\n  el = null;\n  return _isPreloadSupported;\n}\n\n// lib/dom/ssr/fog-of-war.ts\nimport * as React7 from \"react\";\n\n// lib/dom/ssr/routes.tsx\nimport * as React6 from \"react\";\n\n// lib/dom/ssr/fallback.tsx\nimport * as React5 from \"react\";\nfunction RemixRootDefaultHydrateFallback() {\n  return /* @__PURE__ */ React5.createElement(BoundaryShell, { title: \"Loading...\", renderScripts: true }, ENABLE_DEV_WARNINGS ? /* @__PURE__ */ React5.createElement(\n    \"script\",\n    {\n      dangerouslySetInnerHTML: {\n        __html: `\n              console.log(\n                \"\\u{1F4BF} Hey developer \\u{1F44B}. You can provide a way better UX than this \" +\n                \"when your app is loading JS modules and/or running \\`clientLoader\\` \" +\n                \"functions. Check out https://reactrouter.com/start/framework/route-module#hydratefallback \" +\n                \"for more information.\"\n              );\n            `\n      }\n    }\n  ) : null);\n}\n\n// lib/dom/ssr/routes.tsx\nfunction groupRoutesByParentId(manifest) {\n  let routes = {};\n  Object.values(manifest).forEach((route) => {\n    if (route) {\n      let parentId = route.parentId || \"\";\n      if (!routes[parentId]) {\n        routes[parentId] = [];\n      }\n      routes[parentId].push(route);\n    }\n  });\n  return routes;\n}\nfunction getRouteComponents(route, routeModule, isSpaMode) {\n  let Component4 = getRouteModuleComponent(routeModule);\n  let HydrateFallback = routeModule.HydrateFallback && (!isSpaMode || route.id === \"root\") ? routeModule.HydrateFallback : route.id === \"root\" ? RemixRootDefaultHydrateFallback : void 0;\n  let ErrorBoundary = routeModule.ErrorBoundary ? routeModule.ErrorBoundary : route.id === \"root\" ? () => /* @__PURE__ */ React6.createElement(RemixRootDefaultErrorBoundary, { error: useRouteError() }) : void 0;\n  if (route.id === \"root\" && routeModule.Layout) {\n    return {\n      ...Component4 ? {\n        element: /* @__PURE__ */ React6.createElement(routeModule.Layout, null, /* @__PURE__ */ React6.createElement(Component4, null))\n      } : { Component: Component4 },\n      ...ErrorBoundary ? {\n        errorElement: /* @__PURE__ */ React6.createElement(routeModule.Layout, null, /* @__PURE__ */ React6.createElement(ErrorBoundary, null))\n      } : { ErrorBoundary },\n      ...HydrateFallback ? {\n        hydrateFallbackElement: /* @__PURE__ */ React6.createElement(routeModule.Layout, null, /* @__PURE__ */ React6.createElement(HydrateFallback, null))\n      } : { HydrateFallback }\n    };\n  }\n  return { Component: Component4, ErrorBoundary, HydrateFallback };\n}\nfunction createServerRoutes(manifest, routeModules, future, isSpaMode, parentId = \"\", routesByParentId = groupRoutesByParentId(manifest), spaModeLazyPromise = Promise.resolve({ Component: () => null })) {\n  return (routesByParentId[parentId] || []).map((route) => {\n    let routeModule = routeModules[route.id];\n    invariant2(\n      routeModule,\n      \"No `routeModule` available to create server routes\"\n    );\n    let dataRoute = {\n      ...getRouteComponents(route, routeModule, isSpaMode),\n      caseSensitive: route.caseSensitive,\n      id: route.id,\n      index: route.index,\n      path: route.path,\n      handle: routeModule.handle,\n      // For SPA Mode, all routes are lazy except root.  However we tell the\n      // router root is also lazy here too since we don't need a full\n      // implementation - we just need a `lazy` prop to tell the RR rendering\n      // where to stop which is always at the root route in SPA mode\n      lazy: isSpaMode ? () => spaModeLazyPromise : void 0,\n      // For partial hydration rendering, we need to indicate when the route\n      // has a loader/clientLoader, but it won't ever be called during the static\n      // render, so just give it a no-op function so we can render down to the\n      // proper fallback\n      loader: route.hasLoader || route.hasClientLoader ? () => null : void 0\n      // We don't need middleware/action/shouldRevalidate on these routes since\n      // they're for a static render\n    };\n    let children = createServerRoutes(\n      manifest,\n      routeModules,\n      future,\n      isSpaMode,\n      route.id,\n      routesByParentId,\n      spaModeLazyPromise\n    );\n    if (children.length > 0) dataRoute.children = children;\n    return dataRoute;\n  });\n}\nfunction createClientRoutesWithHMRRevalidationOptOut(needsRevalidation, manifest, routeModulesCache, initialState, ssr, isSpaMode) {\n  return createClientRoutes(\n    manifest,\n    routeModulesCache,\n    initialState,\n    ssr,\n    isSpaMode,\n    \"\",\n    groupRoutesByParentId(manifest),\n    needsRevalidation\n  );\n}\nfunction preventInvalidServerHandlerCall(type, route) {\n  if (type === \"loader\" && !route.hasLoader || type === \"action\" && !route.hasAction) {\n    let fn = type === \"action\" ? \"serverAction()\" : \"serverLoader()\";\n    let msg = `You are trying to call ${fn} on a route that does not have a server ${type} (routeId: \"${route.id}\")`;\n    console.error(msg);\n    throw new ErrorResponseImpl(400, \"Bad Request\", new Error(msg), true);\n  }\n}\nfunction noActionDefinedError(type, routeId) {\n  let article = type === \"clientAction\" ? \"a\" : \"an\";\n  let msg = `Route \"${routeId}\" does not have ${article} ${type}, but you are trying to submit to it. To fix this, please add ${article} \\`${type}\\` function to the route`;\n  console.error(msg);\n  throw new ErrorResponseImpl(405, \"Method Not Allowed\", new Error(msg), true);\n}\nfunction createClientRoutes(manifest, routeModulesCache, initialState, ssr, isSpaMode, parentId = \"\", routesByParentId = groupRoutesByParentId(manifest), needsRevalidation) {\n  return (routesByParentId[parentId] || []).map((route) => {\n    let routeModule = routeModulesCache[route.id];\n    function fetchServerHandler(singleFetch) {\n      invariant2(\n        typeof singleFetch === \"function\",\n        \"No single fetch function available for route handler\"\n      );\n      return singleFetch();\n    }\n    function fetchServerLoader(singleFetch) {\n      if (!route.hasLoader) return Promise.resolve(null);\n      return fetchServerHandler(singleFetch);\n    }\n    function fetchServerAction(singleFetch) {\n      if (!route.hasAction) {\n        throw noActionDefinedError(\"action\", route.id);\n      }\n      return fetchServerHandler(singleFetch);\n    }\n    function prefetchModule(modulePath) {\n      import(\n        /* @vite-ignore */\n        /* webpackIgnore: true */\n        modulePath\n      );\n    }\n    function prefetchRouteModuleChunks(route2) {\n      if (route2.clientActionModule) {\n        prefetchModule(route2.clientActionModule);\n      }\n      if (route2.clientLoaderModule) {\n        prefetchModule(route2.clientLoaderModule);\n      }\n    }\n    async function prefetchStylesAndCallHandler(handler) {\n      let cachedModule = routeModulesCache[route.id];\n      let linkPrefetchPromise = cachedModule ? prefetchStyleLinks(route, cachedModule) : Promise.resolve();\n      try {\n        return handler();\n      } finally {\n        await linkPrefetchPromise;\n      }\n    }\n    let dataRoute = {\n      id: route.id,\n      index: route.index,\n      path: route.path\n    };\n    if (routeModule) {\n      Object.assign(dataRoute, {\n        ...dataRoute,\n        ...getRouteComponents(route, routeModule, isSpaMode),\n        unstable_middleware: routeModule.unstable_clientMiddleware,\n        handle: routeModule.handle,\n        shouldRevalidate: getShouldRevalidateFunction(\n          dataRoute.path,\n          routeModule,\n          route,\n          ssr,\n          needsRevalidation\n        )\n      });\n      let hasInitialData = initialState && initialState.loaderData && route.id in initialState.loaderData;\n      let initialData = hasInitialData ? initialState?.loaderData?.[route.id] : void 0;\n      let hasInitialError = initialState && initialState.errors && route.id in initialState.errors;\n      let initialError = hasInitialError ? initialState?.errors?.[route.id] : void 0;\n      let isHydrationRequest = needsRevalidation == null && (routeModule.clientLoader?.hydrate === true || !route.hasLoader);\n      dataRoute.loader = async ({ request, params, context }, singleFetch) => {\n        try {\n          let result = await prefetchStylesAndCallHandler(async () => {\n            invariant2(\n              routeModule,\n              \"No `routeModule` available for critical-route loader\"\n            );\n            if (!routeModule.clientLoader) {\n              return fetchServerLoader(singleFetch);\n            }\n            return routeModule.clientLoader({\n              request,\n              params,\n              context,\n              async serverLoader() {\n                preventInvalidServerHandlerCall(\"loader\", route);\n                if (isHydrationRequest) {\n                  if (hasInitialData) {\n                    return initialData;\n                  }\n                  if (hasInitialError) {\n                    throw initialError;\n                  }\n                }\n                return fetchServerLoader(singleFetch);\n              }\n            });\n          });\n          return result;\n        } finally {\n          isHydrationRequest = false;\n        }\n      };\n      dataRoute.loader.hydrate = shouldHydrateRouteLoader(\n        route.id,\n        routeModule.clientLoader,\n        route.hasLoader,\n        isSpaMode\n      );\n      dataRoute.action = ({ request, params, context }, singleFetch) => {\n        return prefetchStylesAndCallHandler(async () => {\n          invariant2(\n            routeModule,\n            \"No `routeModule` available for critical-route action\"\n          );\n          if (!routeModule.clientAction) {\n            if (isSpaMode) {\n              throw noActionDefinedError(\"clientAction\", route.id);\n            }\n            return fetchServerAction(singleFetch);\n          }\n          return routeModule.clientAction({\n            request,\n            params,\n            context,\n            async serverAction() {\n              preventInvalidServerHandlerCall(\"action\", route);\n              return fetchServerAction(singleFetch);\n            }\n          });\n        });\n      };\n    } else {\n      if (!route.hasClientLoader) {\n        dataRoute.loader = (_, singleFetch) => prefetchStylesAndCallHandler(() => {\n          return fetchServerLoader(singleFetch);\n        });\n      }\n      if (!route.hasClientAction) {\n        dataRoute.action = (_, singleFetch) => prefetchStylesAndCallHandler(() => {\n          if (isSpaMode) {\n            throw noActionDefinedError(\"clientAction\", route.id);\n          }\n          return fetchServerAction(singleFetch);\n        });\n      }\n      let lazyRoutePromise;\n      async function getLazyRoute() {\n        if (lazyRoutePromise) {\n          return await lazyRoutePromise;\n        }\n        lazyRoutePromise = (async () => {\n          if (route.clientLoaderModule || route.clientActionModule) {\n            await new Promise((resolve) => setTimeout(resolve, 0));\n          }\n          let routeModulePromise = loadRouteModuleWithBlockingLinks(\n            route,\n            routeModulesCache\n          );\n          prefetchRouteModuleChunks(route);\n          return await routeModulePromise;\n        })();\n        return await lazyRoutePromise;\n      }\n      dataRoute.lazy = {\n        loader: route.hasClientLoader ? async () => {\n          let { clientLoader } = route.clientLoaderModule ? await import(\n            /* @vite-ignore */\n            /* webpackIgnore: true */\n            route.clientLoaderModule\n          ) : await getLazyRoute();\n          invariant2(clientLoader, \"No `clientLoader` export found\");\n          return (args, singleFetch) => clientLoader({\n            ...args,\n            async serverLoader() {\n              preventInvalidServerHandlerCall(\"loader\", route);\n              return fetchServerLoader(singleFetch);\n            }\n          });\n        } : void 0,\n        action: route.hasClientAction ? async () => {\n          let clientActionPromise = route.clientActionModule ? import(\n            /* @vite-ignore */\n            /* webpackIgnore: true */\n            route.clientActionModule\n          ) : getLazyRoute();\n          prefetchRouteModuleChunks(route);\n          let { clientAction } = await clientActionPromise;\n          invariant2(clientAction, \"No `clientAction` export found\");\n          return (args, singleFetch) => clientAction({\n            ...args,\n            async serverAction() {\n              preventInvalidServerHandlerCall(\"action\", route);\n              return fetchServerAction(singleFetch);\n            }\n          });\n        } : void 0,\n        unstable_middleware: route.hasClientMiddleware ? async () => {\n          let { unstable_clientMiddleware } = route.clientMiddlewareModule ? await import(\n            /* @vite-ignore */\n            /* webpackIgnore: true */\n            route.clientMiddlewareModule\n          ) : await getLazyRoute();\n          invariant2(\n            unstable_clientMiddleware,\n            \"No `unstable_clientMiddleware` export found\"\n          );\n          return unstable_clientMiddleware;\n        } : void 0,\n        shouldRevalidate: async () => {\n          let lazyRoute = await getLazyRoute();\n          return getShouldRevalidateFunction(\n            dataRoute.path,\n            lazyRoute,\n            route,\n            ssr,\n            needsRevalidation\n          );\n        },\n        handle: async () => (await getLazyRoute()).handle,\n        // No need to wrap these in layout since the root route is never\n        // loaded via route.lazy()\n        Component: async () => (await getLazyRoute()).Component,\n        ErrorBoundary: route.hasErrorBoundary ? async () => (await getLazyRoute()).ErrorBoundary : void 0\n      };\n    }\n    let children = createClientRoutes(\n      manifest,\n      routeModulesCache,\n      initialState,\n      ssr,\n      isSpaMode,\n      route.id,\n      routesByParentId,\n      needsRevalidation\n    );\n    if (children.length > 0) dataRoute.children = children;\n    return dataRoute;\n  });\n}\nfunction getShouldRevalidateFunction(path, route, manifestRoute, ssr, needsRevalidation) {\n  if (needsRevalidation) {\n    return wrapShouldRevalidateForHdr(\n      manifestRoute.id,\n      route.shouldRevalidate,\n      needsRevalidation\n    );\n  }\n  if (!ssr && manifestRoute.hasLoader && !manifestRoute.hasClientLoader) {\n    let myParams = path ? compilePath(path)[1].map((p) => p.paramName) : [];\n    const didParamsChange = (opts) => myParams.some((p) => opts.currentParams[p] !== opts.nextParams[p]);\n    if (route.shouldRevalidate) {\n      let fn = route.shouldRevalidate;\n      return (opts) => fn({\n        ...opts,\n        defaultShouldRevalidate: didParamsChange(opts)\n      });\n    } else {\n      return (opts) => didParamsChange(opts);\n    }\n  }\n  if (ssr && route.shouldRevalidate) {\n    let fn = route.shouldRevalidate;\n    return (opts) => fn({ ...opts, defaultShouldRevalidate: true });\n  }\n  return route.shouldRevalidate;\n}\nfunction wrapShouldRevalidateForHdr(routeId, routeShouldRevalidate, needsRevalidation) {\n  let handledRevalidation = false;\n  return (arg) => {\n    if (!handledRevalidation) {\n      handledRevalidation = true;\n      return needsRevalidation.has(routeId);\n    }\n    return routeShouldRevalidate ? routeShouldRevalidate(arg) : arg.defaultShouldRevalidate;\n  };\n}\nasync function loadRouteModuleWithBlockingLinks(route, routeModules) {\n  let routeModulePromise = loadRouteModule(route, routeModules);\n  let prefetchRouteCssPromise = prefetchRouteCss(route);\n  let routeModule = await routeModulePromise;\n  await Promise.all([\n    prefetchRouteCssPromise,\n    prefetchStyleLinks(route, routeModule)\n  ]);\n  return {\n    Component: getRouteModuleComponent(routeModule),\n    ErrorBoundary: routeModule.ErrorBoundary,\n    unstable_clientMiddleware: routeModule.unstable_clientMiddleware,\n    clientAction: routeModule.clientAction,\n    clientLoader: routeModule.clientLoader,\n    handle: routeModule.handle,\n    links: routeModule.links,\n    meta: routeModule.meta,\n    shouldRevalidate: routeModule.shouldRevalidate\n  };\n}\nfunction getRouteModuleComponent(routeModule) {\n  if (routeModule.default == null) return void 0;\n  let isEmptyObject = typeof routeModule.default === \"object\" && Object.keys(routeModule.default).length === 0;\n  if (!isEmptyObject) {\n    return routeModule.default;\n  }\n}\nfunction shouldHydrateRouteLoader(routeId, clientLoader, hasLoader, isSpaMode) {\n  return isSpaMode && routeId !== \"root\" || clientLoader != null && (clientLoader.hydrate === true || hasLoader !== true);\n}\n\n// lib/dom/ssr/fog-of-war.ts\nvar nextPaths = /* @__PURE__ */ new Set();\nvar discoveredPathsMaxSize = 1e3;\nvar discoveredPaths = /* @__PURE__ */ new Set();\nvar URL_LIMIT = 7680;\nfunction isFogOfWarEnabled(routeDiscovery, ssr) {\n  return routeDiscovery.mode === \"lazy\" && ssr === true;\n}\nfunction getPartialManifest({ sri, ...manifest }, router) {\n  let routeIds = new Set(router.state.matches.map((m) => m.route.id));\n  let segments = router.state.location.pathname.split(\"/\").filter(Boolean);\n  let paths = [\"/\"];\n  segments.pop();\n  while (segments.length > 0) {\n    paths.push(`/${segments.join(\"/\")}`);\n    segments.pop();\n  }\n  paths.forEach((path) => {\n    let matches = matchRoutes(router.routes, path, router.basename);\n    if (matches) {\n      matches.forEach((m) => routeIds.add(m.route.id));\n    }\n  });\n  let initialRoutes = [...routeIds].reduce(\n    (acc, id) => Object.assign(acc, { [id]: manifest.routes[id] }),\n    {}\n  );\n  return {\n    ...manifest,\n    routes: initialRoutes,\n    sri: sri ? true : void 0\n  };\n}\nfunction getPatchRoutesOnNavigationFunction(manifest, routeModules, ssr, routeDiscovery, isSpaMode, basename) {\n  if (!isFogOfWarEnabled(routeDiscovery, ssr)) {\n    return void 0;\n  }\n  return async ({ path, patch, signal, fetcherKey }) => {\n    if (discoveredPaths.has(path)) {\n      return;\n    }\n    await fetchAndApplyManifestPatches(\n      [path],\n      fetcherKey ? window.location.href : path,\n      manifest,\n      routeModules,\n      ssr,\n      isSpaMode,\n      basename,\n      routeDiscovery.manifestPath,\n      patch,\n      signal\n    );\n  };\n}\nfunction useFogOFWarDiscovery(router, manifest, routeModules, ssr, routeDiscovery, isSpaMode) {\n  React7.useEffect(() => {\n    if (!isFogOfWarEnabled(routeDiscovery, ssr) || // @ts-expect-error - TS doesn't know about this yet\n    window.navigator?.connection?.saveData === true) {\n      return;\n    }\n    function registerElement(el) {\n      let path = el.tagName === \"FORM\" ? el.getAttribute(\"action\") : el.getAttribute(\"href\");\n      if (!path) {\n        return;\n      }\n      let pathname = el.tagName === \"A\" ? el.pathname : new URL(path, window.location.origin).pathname;\n      if (!discoveredPaths.has(pathname)) {\n        nextPaths.add(pathname);\n      }\n    }\n    async function fetchPatches() {\n      document.querySelectorAll(\"a[data-discover], form[data-discover]\").forEach(registerElement);\n      let lazyPaths = Array.from(nextPaths.keys()).filter((path) => {\n        if (discoveredPaths.has(path)) {\n          nextPaths.delete(path);\n          return false;\n        }\n        return true;\n      });\n      if (lazyPaths.length === 0) {\n        return;\n      }\n      try {\n        await fetchAndApplyManifestPatches(\n          lazyPaths,\n          null,\n          manifest,\n          routeModules,\n          ssr,\n          isSpaMode,\n          router.basename,\n          routeDiscovery.manifestPath,\n          router.patchRoutes\n        );\n      } catch (e) {\n        console.error(\"Failed to fetch manifest patches\", e);\n      }\n    }\n    let debouncedFetchPatches = debounce(fetchPatches, 100);\n    fetchPatches();\n    let observer = new MutationObserver(() => debouncedFetchPatches());\n    observer.observe(document.documentElement, {\n      subtree: true,\n      childList: true,\n      attributes: true,\n      attributeFilter: [\"data-discover\", \"href\", \"action\"]\n    });\n    return () => observer.disconnect();\n  }, [ssr, isSpaMode, manifest, routeModules, router, routeDiscovery]);\n}\nfunction getManifestPath(_manifestPath, basename) {\n  let manifestPath = _manifestPath || \"/__manifest\";\n  if (basename == null) {\n    return manifestPath;\n  }\n  return `${basename}${manifestPath}`.replace(/\\/+/g, \"/\");\n}\nvar MANIFEST_VERSION_STORAGE_KEY = \"react-router-manifest-version\";\nasync function fetchAndApplyManifestPatches(paths, errorReloadPath, manifest, routeModules, ssr, isSpaMode, basename, manifestPath, patchRoutes, signal) {\n  const searchParams = new URLSearchParams();\n  paths.sort().forEach((path) => searchParams.append(\"p\", path));\n  searchParams.set(\"version\", manifest.version);\n  let url = new URL(\n    getManifestPath(manifestPath, basename),\n    window.location.origin\n  );\n  url.search = searchParams.toString();\n  if (url.toString().length > URL_LIMIT) {\n    nextPaths.clear();\n    return;\n  }\n  let serverPatches;\n  try {\n    let res = await fetch(url, { signal });\n    if (!res.ok) {\n      throw new Error(`${res.status} ${res.statusText}`);\n    } else if (res.status === 204 && res.headers.has(\"X-Remix-Reload-Document\")) {\n      if (!errorReloadPath) {\n        console.warn(\n          \"Detected a manifest version mismatch during eager route discovery. The next navigation/fetch to an undiscovered route will result in a new document navigation to sync up with the latest manifest.\"\n        );\n        return;\n      }\n      if (sessionStorage.getItem(MANIFEST_VERSION_STORAGE_KEY) === manifest.version) {\n        console.error(\n          \"Unable to discover routes due to manifest version mismatch.\"\n        );\n        return;\n      }\n      sessionStorage.setItem(MANIFEST_VERSION_STORAGE_KEY, manifest.version);\n      window.location.href = errorReloadPath;\n      console.warn(\"Detected manifest version mismatch, reloading...\");\n      await new Promise(() => {\n      });\n    } else if (res.status >= 400) {\n      throw new Error(await res.text());\n    }\n    sessionStorage.removeItem(MANIFEST_VERSION_STORAGE_KEY);\n    serverPatches = await res.json();\n  } catch (e) {\n    if (signal?.aborted) return;\n    throw e;\n  }\n  let knownRoutes = new Set(Object.keys(manifest.routes));\n  let patches = Object.values(serverPatches).reduce((acc, route) => {\n    if (route && !knownRoutes.has(route.id)) {\n      acc[route.id] = route;\n    }\n    return acc;\n  }, {});\n  Object.assign(manifest.routes, patches);\n  paths.forEach((p) => addToFifoQueue(p, discoveredPaths));\n  let parentIds = /* @__PURE__ */ new Set();\n  Object.values(patches).forEach((patch) => {\n    if (patch && (!patch.parentId || !patches[patch.parentId])) {\n      parentIds.add(patch.parentId);\n    }\n  });\n  parentIds.forEach(\n    (parentId) => patchRoutes(\n      parentId || null,\n      createClientRoutes(patches, routeModules, null, ssr, isSpaMode, parentId)\n    )\n  );\n}\nfunction addToFifoQueue(path, queue) {\n  if (queue.size >= discoveredPathsMaxSize) {\n    let first = queue.values().next().value;\n    queue.delete(first);\n  }\n  queue.add(path);\n}\nfunction debounce(callback, wait) {\n  let timeoutId;\n  return (...args) => {\n    window.clearTimeout(timeoutId);\n    timeoutId = window.setTimeout(() => callback(...args), wait);\n  };\n}\n\n// lib/dom/ssr/components.tsx\nfunction useDataRouterContext2() {\n  let context = React8.useContext(DataRouterContext);\n  invariant2(\n    context,\n    \"You must render this element inside a <DataRouterContext.Provider> element\"\n  );\n  return context;\n}\nfunction useDataRouterStateContext() {\n  let context = React8.useContext(DataRouterStateContext);\n  invariant2(\n    context,\n    \"You must render this element inside a <DataRouterStateContext.Provider> element\"\n  );\n  return context;\n}\nvar FrameworkContext = React8.createContext(void 0);\nFrameworkContext.displayName = \"FrameworkContext\";\nfunction useFrameworkContext() {\n  let context = React8.useContext(FrameworkContext);\n  invariant2(\n    context,\n    \"You must render this element inside a <HydratedRouter> element\"\n  );\n  return context;\n}\nfunction usePrefetchBehavior(prefetch, theirElementProps) {\n  let frameworkContext = React8.useContext(FrameworkContext);\n  let [maybePrefetch, setMaybePrefetch] = React8.useState(false);\n  let [shouldPrefetch, setShouldPrefetch] = React8.useState(false);\n  let { onFocus, onBlur, onMouseEnter, onMouseLeave, onTouchStart } = theirElementProps;\n  let ref = React8.useRef(null);\n  React8.useEffect(() => {\n    if (prefetch === \"render\") {\n      setShouldPrefetch(true);\n    }\n    if (prefetch === \"viewport\") {\n      let callback = (entries) => {\n        entries.forEach((entry) => {\n          setShouldPrefetch(entry.isIntersecting);\n        });\n      };\n      let observer = new IntersectionObserver(callback, { threshold: 0.5 });\n      if (ref.current) observer.observe(ref.current);\n      return () => {\n        observer.disconnect();\n      };\n    }\n  }, [prefetch]);\n  React8.useEffect(() => {\n    if (maybePrefetch) {\n      let id = setTimeout(() => {\n        setShouldPrefetch(true);\n      }, 100);\n      return () => {\n        clearTimeout(id);\n      };\n    }\n  }, [maybePrefetch]);\n  let setIntent = () => {\n    setMaybePrefetch(true);\n  };\n  let cancelIntent = () => {\n    setMaybePrefetch(false);\n    setShouldPrefetch(false);\n  };\n  if (!frameworkContext) {\n    return [false, ref, {}];\n  }\n  if (prefetch !== \"intent\") {\n    return [shouldPrefetch, ref, {}];\n  }\n  return [\n    shouldPrefetch,\n    ref,\n    {\n      onFocus: composeEventHandlers(onFocus, setIntent),\n      onBlur: composeEventHandlers(onBlur, cancelIntent),\n      onMouseEnter: composeEventHandlers(onMouseEnter, setIntent),\n      onMouseLeave: composeEventHandlers(onMouseLeave, cancelIntent),\n      onTouchStart: composeEventHandlers(onTouchStart, setIntent)\n    }\n  ];\n}\nfunction composeEventHandlers(theirHandler, ourHandler) {\n  return (event) => {\n    theirHandler && theirHandler(event);\n    if (!event.defaultPrevented) {\n      ourHandler(event);\n    }\n  };\n}\nfunction getActiveMatches(matches, errors, isSpaMode) {\n  if (isSpaMode && !isHydrated) {\n    return [matches[0]];\n  }\n  if (errors) {\n    let errorIdx = matches.findIndex((m) => errors[m.route.id] !== void 0);\n    return matches.slice(0, errorIdx + 1);\n  }\n  return matches;\n}\nvar CRITICAL_CSS_DATA_ATTRIBUTE = \"data-react-router-critical-css\";\nfunction Links({ nonce }) {\n  let { isSpaMode, manifest, routeModules, criticalCss } = useFrameworkContext();\n  let { errors, matches: routerMatches } = useDataRouterStateContext();\n  let matches = getActiveMatches(routerMatches, errors, isSpaMode);\n  let keyedLinks = React8.useMemo(\n    () => getKeyedLinksForMatches(matches, routeModules, manifest),\n    [matches, routeModules, manifest]\n  );\n  return /* @__PURE__ */ React8.createElement(React8.Fragment, null, typeof criticalCss === \"string\" ? /* @__PURE__ */ React8.createElement(\n    \"style\",\n    {\n      ...{ [CRITICAL_CSS_DATA_ATTRIBUTE]: \"\" },\n      dangerouslySetInnerHTML: { __html: criticalCss }\n    }\n  ) : null, typeof criticalCss === \"object\" ? /* @__PURE__ */ React8.createElement(\n    \"link\",\n    {\n      ...{ [CRITICAL_CSS_DATA_ATTRIBUTE]: \"\" },\n      rel: \"stylesheet\",\n      href: criticalCss.href,\n      nonce\n    }\n  ) : null, keyedLinks.map(\n    ({ key, link }) => isPageLinkDescriptor(link) ? /* @__PURE__ */ React8.createElement(PrefetchPageLinks, { key, nonce, ...link }) : /* @__PURE__ */ React8.createElement(\"link\", { key, nonce, ...link })\n  ));\n}\nfunction PrefetchPageLinks({ page, ...linkProps }) {\n  let { router } = useDataRouterContext2();\n  let matches = React8.useMemo(\n    () => matchRoutes(router.routes, page, router.basename),\n    [router.routes, page, router.basename]\n  );\n  if (!matches) {\n    return null;\n  }\n  return /* @__PURE__ */ React8.createElement(PrefetchPageLinksImpl, { page, matches, ...linkProps });\n}\nfunction useKeyedPrefetchLinks(matches) {\n  let { manifest, routeModules } = useFrameworkContext();\n  let [keyedPrefetchLinks, setKeyedPrefetchLinks] = React8.useState([]);\n  React8.useEffect(() => {\n    let interrupted = false;\n    void getKeyedPrefetchLinks(matches, manifest, routeModules).then(\n      (links) => {\n        if (!interrupted) {\n          setKeyedPrefetchLinks(links);\n        }\n      }\n    );\n    return () => {\n      interrupted = true;\n    };\n  }, [matches, manifest, routeModules]);\n  return keyedPrefetchLinks;\n}\nfunction PrefetchPageLinksImpl({\n  page,\n  matches: nextMatches,\n  ...linkProps\n}) {\n  let location = useLocation();\n  let { manifest, routeModules } = useFrameworkContext();\n  let { basename } = useDataRouterContext2();\n  let { loaderData, matches } = useDataRouterStateContext();\n  let newMatchesForData = React8.useMemo(\n    () => getNewMatchesForLinks(\n      page,\n      nextMatches,\n      matches,\n      manifest,\n      location,\n      \"data\"\n    ),\n    [page, nextMatches, matches, manifest, location]\n  );\n  let newMatchesForAssets = React8.useMemo(\n    () => getNewMatchesForLinks(\n      page,\n      nextMatches,\n      matches,\n      manifest,\n      location,\n      \"assets\"\n    ),\n    [page, nextMatches, matches, manifest, location]\n  );\n  let dataHrefs = React8.useMemo(() => {\n    if (page === location.pathname + location.search + location.hash) {\n      return [];\n    }\n    let routesParams = /* @__PURE__ */ new Set();\n    let foundOptOutRoute = false;\n    nextMatches.forEach((m) => {\n      let manifestRoute = manifest.routes[m.route.id];\n      if (!manifestRoute || !manifestRoute.hasLoader) {\n        return;\n      }\n      if (!newMatchesForData.some((m2) => m2.route.id === m.route.id) && m.route.id in loaderData && routeModules[m.route.id]?.shouldRevalidate) {\n        foundOptOutRoute = true;\n      } else if (manifestRoute.hasClientLoader) {\n        foundOptOutRoute = true;\n      } else {\n        routesParams.add(m.route.id);\n      }\n    });\n    if (routesParams.size === 0) {\n      return [];\n    }\n    let url = singleFetchUrl(page, basename, \"data\");\n    if (foundOptOutRoute && routesParams.size > 0) {\n      url.searchParams.set(\n        \"_routes\",\n        nextMatches.filter((m) => routesParams.has(m.route.id)).map((m) => m.route.id).join(\",\")\n      );\n    }\n    return [url.pathname + url.search];\n  }, [\n    basename,\n    loaderData,\n    location,\n    manifest,\n    newMatchesForData,\n    nextMatches,\n    page,\n    routeModules\n  ]);\n  let moduleHrefs = React8.useMemo(\n    () => getModuleLinkHrefs(newMatchesForAssets, manifest),\n    [newMatchesForAssets, manifest]\n  );\n  let keyedPrefetchLinks = useKeyedPrefetchLinks(newMatchesForAssets);\n  return /* @__PURE__ */ React8.createElement(React8.Fragment, null, dataHrefs.map((href) => /* @__PURE__ */ React8.createElement(\"link\", { key: href, rel: \"prefetch\", as: \"fetch\", href, ...linkProps })), moduleHrefs.map((href) => /* @__PURE__ */ React8.createElement(\"link\", { key: href, rel: \"modulepreload\", href, ...linkProps })), keyedPrefetchLinks.map(({ key, link }) => (\n    // these don't spread `linkProps` because they are full link descriptors\n    // already with their own props\n    /* @__PURE__ */ React8.createElement(\"link\", { key, nonce: linkProps.nonce, ...link })\n  )));\n}\nfunction Meta() {\n  let { isSpaMode, routeModules } = useFrameworkContext();\n  let {\n    errors,\n    matches: routerMatches,\n    loaderData\n  } = useDataRouterStateContext();\n  let location = useLocation();\n  let _matches = getActiveMatches(routerMatches, errors, isSpaMode);\n  let error = null;\n  if (errors) {\n    error = errors[_matches[_matches.length - 1].route.id];\n  }\n  let meta = [];\n  let leafMeta = null;\n  let matches = [];\n  for (let i = 0; i < _matches.length; i++) {\n    let _match = _matches[i];\n    let routeId = _match.route.id;\n    let data2 = loaderData[routeId];\n    let params = _match.params;\n    let routeModule = routeModules[routeId];\n    let routeMeta = [];\n    let match = {\n      id: routeId,\n      data: data2,\n      loaderData: data2,\n      meta: [],\n      params: _match.params,\n      pathname: _match.pathname,\n      handle: _match.route.handle,\n      error\n    };\n    matches[i] = match;\n    if (routeModule?.meta) {\n      routeMeta = typeof routeModule.meta === \"function\" ? routeModule.meta({\n        data: data2,\n        loaderData: data2,\n        params,\n        location,\n        matches,\n        error\n      }) : Array.isArray(routeModule.meta) ? [...routeModule.meta] : routeModule.meta;\n    } else if (leafMeta) {\n      routeMeta = [...leafMeta];\n    }\n    routeMeta = routeMeta || [];\n    if (!Array.isArray(routeMeta)) {\n      throw new Error(\n        \"The route at \" + _match.route.path + \" returns an invalid value. All route meta functions must return an array of meta objects.\\n\\nTo reference the meta function API, see https://remix.run/route/meta\"\n      );\n    }\n    match.meta = routeMeta;\n    matches[i] = match;\n    meta = [...routeMeta];\n    leafMeta = meta;\n  }\n  return /* @__PURE__ */ React8.createElement(React8.Fragment, null, meta.flat().map((metaProps) => {\n    if (!metaProps) {\n      return null;\n    }\n    if (\"tagName\" in metaProps) {\n      let { tagName, ...rest } = metaProps;\n      if (!isValidMetaTag(tagName)) {\n        console.warn(\n          `A meta object uses an invalid tagName: ${tagName}. Expected either 'link' or 'meta'`\n        );\n        return null;\n      }\n      let Comp = tagName;\n      return /* @__PURE__ */ React8.createElement(Comp, { key: JSON.stringify(rest), ...rest });\n    }\n    if (\"title\" in metaProps) {\n      return /* @__PURE__ */ React8.createElement(\"title\", { key: \"title\" }, String(metaProps.title));\n    }\n    if (\"charset\" in metaProps) {\n      metaProps.charSet ?? (metaProps.charSet = metaProps.charset);\n      delete metaProps.charset;\n    }\n    if (\"charSet\" in metaProps && metaProps.charSet != null) {\n      return typeof metaProps.charSet === \"string\" ? /* @__PURE__ */ React8.createElement(\"meta\", { key: \"charSet\", charSet: metaProps.charSet }) : null;\n    }\n    if (\"script:ld+json\" in metaProps) {\n      try {\n        let json = JSON.stringify(metaProps[\"script:ld+json\"]);\n        return /* @__PURE__ */ React8.createElement(\n          \"script\",\n          {\n            key: `script:ld+json:${json}`,\n            type: \"application/ld+json\",\n            dangerouslySetInnerHTML: { __html: json }\n          }\n        );\n      } catch (err) {\n        return null;\n      }\n    }\n    return /* @__PURE__ */ React8.createElement(\"meta\", { key: JSON.stringify(metaProps), ...metaProps });\n  }));\n}\nfunction isValidMetaTag(tagName) {\n  return typeof tagName === \"string\" && /^(meta|link)$/.test(tagName);\n}\nvar isHydrated = false;\nfunction setIsHydrated() {\n  isHydrated = true;\n}\nfunction Scripts(scriptProps) {\n  let {\n    manifest,\n    serverHandoffString,\n    isSpaMode,\n    renderMeta,\n    routeDiscovery,\n    ssr\n  } = useFrameworkContext();\n  let { router, static: isStatic, staticContext } = useDataRouterContext2();\n  let { matches: routerMatches } = useDataRouterStateContext();\n  let isRSCRouterContext = useIsRSCRouterContext();\n  let enableFogOfWar = isFogOfWarEnabled(routeDiscovery, ssr);\n  if (renderMeta) {\n    renderMeta.didRenderScripts = true;\n  }\n  let matches = getActiveMatches(routerMatches, null, isSpaMode);\n  React8.useEffect(() => {\n    setIsHydrated();\n  }, []);\n  let initialScripts = React8.useMemo(() => {\n    if (isRSCRouterContext) {\n      return null;\n    }\n    let streamScript = \"window.__reactRouterContext.stream = new ReadableStream({start(controller){window.__reactRouterContext.streamController = controller;}}).pipeThrough(new TextEncoderStream());\";\n    let contextScript = staticContext ? `window.__reactRouterContext = ${serverHandoffString};${streamScript}` : \" \";\n    let routeModulesScript = !isStatic ? \" \" : `${manifest.hmr?.runtime ? `import ${JSON.stringify(manifest.hmr.runtime)};` : \"\"}${!enableFogOfWar ? `import ${JSON.stringify(manifest.url)}` : \"\"};\n${matches.map((match, routeIndex) => {\n      let routeVarName = `route${routeIndex}`;\n      let manifestEntry = manifest.routes[match.route.id];\n      invariant2(manifestEntry, `Route ${match.route.id} not found in manifest`);\n      let {\n        clientActionModule,\n        clientLoaderModule,\n        clientMiddlewareModule,\n        hydrateFallbackModule,\n        module\n      } = manifestEntry;\n      let chunks = [\n        ...clientActionModule ? [\n          {\n            module: clientActionModule,\n            varName: `${routeVarName}_clientAction`\n          }\n        ] : [],\n        ...clientLoaderModule ? [\n          {\n            module: clientLoaderModule,\n            varName: `${routeVarName}_clientLoader`\n          }\n        ] : [],\n        ...clientMiddlewareModule ? [\n          {\n            module: clientMiddlewareModule,\n            varName: `${routeVarName}_clientMiddleware`\n          }\n        ] : [],\n        ...hydrateFallbackModule ? [\n          {\n            module: hydrateFallbackModule,\n            varName: `${routeVarName}_HydrateFallback`\n          }\n        ] : [],\n        { module, varName: `${routeVarName}_main` }\n      ];\n      if (chunks.length === 1) {\n        return `import * as ${routeVarName} from ${JSON.stringify(module)};`;\n      }\n      let chunkImportsSnippet = chunks.map((chunk) => `import * as ${chunk.varName} from \"${chunk.module}\";`).join(\"\\n\");\n      let mergedChunksSnippet = `const ${routeVarName} = {${chunks.map((chunk) => `...${chunk.varName}`).join(\",\")}};`;\n      return [chunkImportsSnippet, mergedChunksSnippet].join(\"\\n\");\n    }).join(\"\\n\")}\n  ${enableFogOfWar ? (\n      // Inline a minimal manifest with the SSR matches\n      `window.__reactRouterManifest = ${JSON.stringify(\n        getPartialManifest(manifest, router),\n        null,\n        2\n      )};`\n    ) : \"\"}\n  window.__reactRouterRouteModules = {${matches.map((match, index) => `${JSON.stringify(match.route.id)}:route${index}`).join(\",\")}};\n\nimport(${JSON.stringify(manifest.entry.module)});`;\n    return /* @__PURE__ */ React8.createElement(React8.Fragment, null, /* @__PURE__ */ React8.createElement(\n      \"script\",\n      {\n        ...scriptProps,\n        suppressHydrationWarning: true,\n        dangerouslySetInnerHTML: createHtml(contextScript),\n        type: void 0\n      }\n    ), /* @__PURE__ */ React8.createElement(\n      \"script\",\n      {\n        ...scriptProps,\n        suppressHydrationWarning: true,\n        dangerouslySetInnerHTML: createHtml(routeModulesScript),\n        type: \"module\",\n        async: true\n      }\n    ));\n  }, []);\n  let preloads = isHydrated || isRSCRouterContext ? [] : dedupe(\n    manifest.entry.imports.concat(\n      getModuleLinkHrefs(matches, manifest, {\n        includeHydrateFallback: true\n      })\n    )\n  );\n  let sri = typeof manifest.sri === \"object\" ? manifest.sri : {};\n  warnOnce(\n    !isRSCRouterContext,\n    \"The <Scripts /> element is a no-op when using RSC and can be safely removed.\"\n  );\n  return isHydrated || isRSCRouterContext ? null : /* @__PURE__ */ React8.createElement(React8.Fragment, null, typeof manifest.sri === \"object\" ? /* @__PURE__ */ React8.createElement(\n    \"script\",\n    {\n      \"rr-importmap\": \"\",\n      type: \"importmap\",\n      suppressHydrationWarning: true,\n      dangerouslySetInnerHTML: {\n        __html: JSON.stringify({\n          integrity: sri\n        })\n      }\n    }\n  ) : null, !enableFogOfWar ? /* @__PURE__ */ React8.createElement(\n    \"link\",\n    {\n      rel: \"modulepreload\",\n      href: manifest.url,\n      crossOrigin: scriptProps.crossOrigin,\n      integrity: sri[manifest.url],\n      suppressHydrationWarning: true\n    }\n  ) : null, /* @__PURE__ */ React8.createElement(\n    \"link\",\n    {\n      rel: \"modulepreload\",\n      href: manifest.entry.module,\n      crossOrigin: scriptProps.crossOrigin,\n      integrity: sri[manifest.entry.module],\n      suppressHydrationWarning: true\n    }\n  ), preloads.map((path) => /* @__PURE__ */ React8.createElement(\n    \"link\",\n    {\n      key: path,\n      rel: \"modulepreload\",\n      href: path,\n      crossOrigin: scriptProps.crossOrigin,\n      integrity: sri[path],\n      suppressHydrationWarning: true\n    }\n  )), initialScripts);\n}\nfunction dedupe(array) {\n  return [...new Set(array)];\n}\nfunction mergeRefs(...refs) {\n  return (value) => {\n    refs.forEach((ref) => {\n      if (typeof ref === \"function\") {\n        ref(value);\n      } else if (ref != null) {\n        ref.current = value;\n      }\n    });\n  };\n}\n\n// lib/dom/ssr/errorBoundaries.tsx\nvar RemixErrorBoundary = class extends React9.Component {\n  constructor(props) {\n    super(props);\n    this.state = { error: props.error || null, location: props.location };\n  }\n  static getDerivedStateFromError(error) {\n    return { error };\n  }\n  static getDerivedStateFromProps(props, state) {\n    if (state.location !== props.location) {\n      return { error: props.error || null, location: props.location };\n    }\n    return { error: props.error || state.error, location: state.location };\n  }\n  render() {\n    if (this.state.error) {\n      return /* @__PURE__ */ React9.createElement(\n        RemixRootDefaultErrorBoundary,\n        {\n          error: this.state.error,\n          isOutsideRemixApp: true\n        }\n      );\n    } else {\n      return this.props.children;\n    }\n  }\n};\nfunction RemixRootDefaultErrorBoundary({\n  error,\n  isOutsideRemixApp\n}) {\n  console.error(error);\n  let heyDeveloper = /* @__PURE__ */ React9.createElement(\n    \"script\",\n    {\n      dangerouslySetInnerHTML: {\n        __html: `\n        console.log(\n          \"\\u{1F4BF} Hey developer \\u{1F44B}. You can provide a way better UX than this when your app throws errors. Check out https://reactrouter.com/how-to/error-boundary for more information.\"\n        );\n      `\n      }\n    }\n  );\n  if (isRouteErrorResponse(error)) {\n    return /* @__PURE__ */ React9.createElement(BoundaryShell, { title: \"Unhandled Thrown Response!\" }, /* @__PURE__ */ React9.createElement(\"h1\", { style: { fontSize: \"24px\" } }, error.status, \" \", error.statusText), ENABLE_DEV_WARNINGS ? heyDeveloper : null);\n  }\n  let errorInstance;\n  if (error instanceof Error) {\n    errorInstance = error;\n  } else {\n    let errorString = error == null ? \"Unknown Error\" : typeof error === \"object\" && \"toString\" in error ? error.toString() : JSON.stringify(error);\n    errorInstance = new Error(errorString);\n  }\n  return /* @__PURE__ */ React9.createElement(\n    BoundaryShell,\n    {\n      title: \"Application Error!\",\n      isOutsideRemixApp\n    },\n    /* @__PURE__ */ React9.createElement(\"h1\", { style: { fontSize: \"24px\" } }, \"Application Error\"),\n    /* @__PURE__ */ React9.createElement(\n      \"pre\",\n      {\n        style: {\n          padding: \"2rem\",\n          background: \"hsla(10, 50%, 50%, 0.1)\",\n          color: \"red\",\n          overflow: \"auto\"\n        }\n      },\n      errorInstance.stack\n    ),\n    heyDeveloper\n  );\n}\nfunction BoundaryShell({\n  title,\n  renderScripts,\n  isOutsideRemixApp,\n  children\n}) {\n  let { routeModules } = useFrameworkContext();\n  if (routeModules.root?.Layout && !isOutsideRemixApp) {\n    return children;\n  }\n  return /* @__PURE__ */ React9.createElement(\"html\", { lang: \"en\" }, /* @__PURE__ */ React9.createElement(\"head\", null, /* @__PURE__ */ React9.createElement(\"meta\", { charSet: \"utf-8\" }), /* @__PURE__ */ React9.createElement(\n    \"meta\",\n    {\n      name: \"viewport\",\n      content: \"width=device-width,initial-scale=1,viewport-fit=cover\"\n    }\n  ), /* @__PURE__ */ React9.createElement(\"title\", null, title)), /* @__PURE__ */ React9.createElement(\"body\", null, /* @__PURE__ */ React9.createElement(\"main\", { style: { fontFamily: \"system-ui, sans-serif\", padding: \"2rem\" } }, children, renderScripts ? /* @__PURE__ */ React9.createElement(Scripts, null) : null)));\n}\n\n// lib/dom/lib.tsx\nimport * as React10 from \"react\";\nvar isBrowser = typeof window !== \"undefined\" && typeof window.document !== \"undefined\" && typeof window.document.createElement !== \"undefined\";\ntry {\n  if (isBrowser) {\n    window.__reactRouterVersion = // @ts-expect-error\n    \"7.8.1\";\n  }\n} catch (e) {\n}\nfunction createBrowserRouter(routes, opts) {\n  return createRouter({\n    basename: opts?.basename,\n    unstable_getContext: opts?.unstable_getContext,\n    future: opts?.future,\n    history: createBrowserHistory({ window: opts?.window }),\n    hydrationData: opts?.hydrationData || parseHydrationData(),\n    routes,\n    mapRouteProperties,\n    hydrationRouteProperties,\n    dataStrategy: opts?.dataStrategy,\n    patchRoutesOnNavigation: opts?.patchRoutesOnNavigation,\n    window: opts?.window\n  }).initialize();\n}\nfunction createHashRouter(routes, opts) {\n  return createRouter({\n    basename: opts?.basename,\n    unstable_getContext: opts?.unstable_getContext,\n    future: opts?.future,\n    history: createHashHistory({ window: opts?.window }),\n    hydrationData: opts?.hydrationData || parseHydrationData(),\n    routes,\n    mapRouteProperties,\n    hydrationRouteProperties,\n    dataStrategy: opts?.dataStrategy,\n    patchRoutesOnNavigation: opts?.patchRoutesOnNavigation,\n    window: opts?.window\n  }).initialize();\n}\nfunction parseHydrationData() {\n  let state = window?.__staticRouterHydrationData;\n  if (state && state.errors) {\n    state = {\n      ...state,\n      errors: deserializeErrors(state.errors)\n    };\n  }\n  return state;\n}\nfunction deserializeErrors(errors) {\n  if (!errors) return null;\n  let entries = Object.entries(errors);\n  let serialized = {};\n  for (let [key, val] of entries) {\n    if (val && val.__type === \"RouteErrorResponse\") {\n      serialized[key] = new ErrorResponseImpl(\n        val.status,\n        val.statusText,\n        val.data,\n        val.internal === true\n      );\n    } else if (val && val.__type === \"Error\") {\n      if (val.__subType) {\n        let ErrorConstructor = window[val.__subType];\n        if (typeof ErrorConstructor === \"function\") {\n          try {\n            let error = new ErrorConstructor(val.message);\n            error.stack = \"\";\n            serialized[key] = error;\n          } catch (e) {\n          }\n        }\n      }\n      if (serialized[key] == null) {\n        let error = new Error(val.message);\n        error.stack = \"\";\n        serialized[key] = error;\n      }\n    } else {\n      serialized[key] = val;\n    }\n  }\n  return serialized;\n}\nfunction BrowserRouter({\n  basename,\n  children,\n  window: window2\n}) {\n  let historyRef = React10.useRef();\n  if (historyRef.current == null) {\n    historyRef.current = createBrowserHistory({ window: window2, v5Compat: true });\n  }\n  let history = historyRef.current;\n  let [state, setStateImpl] = React10.useState({\n    action: history.action,\n    location: history.location\n  });\n  let setState = React10.useCallback(\n    (newState) => {\n      React10.startTransition(() => setStateImpl(newState));\n    },\n    [setStateImpl]\n  );\n  React10.useLayoutEffect(() => history.listen(setState), [history, setState]);\n  return /* @__PURE__ */ React10.createElement(\n    Router,\n    {\n      basename,\n      children,\n      location: state.location,\n      navigationType: state.action,\n      navigator: history\n    }\n  );\n}\nfunction HashRouter({ basename, children, window: window2 }) {\n  let historyRef = React10.useRef();\n  if (historyRef.current == null) {\n    historyRef.current = createHashHistory({ window: window2, v5Compat: true });\n  }\n  let history = historyRef.current;\n  let [state, setStateImpl] = React10.useState({\n    action: history.action,\n    location: history.location\n  });\n  let setState = React10.useCallback(\n    (newState) => {\n      React10.startTransition(() => setStateImpl(newState));\n    },\n    [setStateImpl]\n  );\n  React10.useLayoutEffect(() => history.listen(setState), [history, setState]);\n  return /* @__PURE__ */ React10.createElement(\n    Router,\n    {\n      basename,\n      children,\n      location: state.location,\n      navigationType: state.action,\n      navigator: history\n    }\n  );\n}\nfunction HistoryRouter({\n  basename,\n  children,\n  history\n}) {\n  let [state, setStateImpl] = React10.useState({\n    action: history.action,\n    location: history.location\n  });\n  let setState = React10.useCallback(\n    (newState) => {\n      React10.startTransition(() => setStateImpl(newState));\n    },\n    [setStateImpl]\n  );\n  React10.useLayoutEffect(() => history.listen(setState), [history, setState]);\n  return /* @__PURE__ */ React10.createElement(\n    Router,\n    {\n      basename,\n      children,\n      location: state.location,\n      navigationType: state.action,\n      navigator: history\n    }\n  );\n}\nHistoryRouter.displayName = \"unstable_HistoryRouter\";\nvar ABSOLUTE_URL_REGEX2 = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\nvar Link = React10.forwardRef(\n  function LinkWithRef({\n    onClick,\n    discover = \"render\",\n    prefetch = \"none\",\n    relative,\n    reloadDocument,\n    replace: replace2,\n    state,\n    target,\n    to,\n    preventScrollReset,\n    viewTransition,\n    ...rest\n  }, forwardedRef) {\n    let { basename } = React10.useContext(NavigationContext);\n    let isAbsolute = typeof to === \"string\" && ABSOLUTE_URL_REGEX2.test(to);\n    let absoluteHref;\n    let isExternal = false;\n    if (typeof to === \"string\" && isAbsolute) {\n      absoluteHref = to;\n      if (isBrowser) {\n        try {\n          let currentUrl = new URL(window.location.href);\n          let targetUrl = to.startsWith(\"//\") ? new URL(currentUrl.protocol + to) : new URL(to);\n          let path = stripBasename(targetUrl.pathname, basename);\n          if (targetUrl.origin === currentUrl.origin && path != null) {\n            to = path + targetUrl.search + targetUrl.hash;\n          } else {\n            isExternal = true;\n          }\n        } catch (e) {\n          warning(\n            false,\n            `<Link to=\"${to}\"> contains an invalid URL which will probably break when clicked - please update to a valid URL path.`\n          );\n        }\n      }\n    }\n    let href = useHref(to, { relative });\n    let [shouldPrefetch, prefetchRef, prefetchHandlers] = usePrefetchBehavior(\n      prefetch,\n      rest\n    );\n    let internalOnClick = useLinkClickHandler(to, {\n      replace: replace2,\n      state,\n      target,\n      preventScrollReset,\n      relative,\n      viewTransition\n    });\n    function handleClick(event) {\n      if (onClick) onClick(event);\n      if (!event.defaultPrevented) {\n        internalOnClick(event);\n      }\n    }\n    let link = (\n      // eslint-disable-next-line jsx-a11y/anchor-has-content\n      /* @__PURE__ */ React10.createElement(\n        \"a\",\n        {\n          ...rest,\n          ...prefetchHandlers,\n          href: absoluteHref || href,\n          onClick: isExternal || reloadDocument ? onClick : handleClick,\n          ref: mergeRefs(forwardedRef, prefetchRef),\n          target,\n          \"data-discover\": !isAbsolute && discover === \"render\" ? \"true\" : void 0\n        }\n      )\n    );\n    return shouldPrefetch && !isAbsolute ? /* @__PURE__ */ React10.createElement(React10.Fragment, null, link, /* @__PURE__ */ React10.createElement(PrefetchPageLinks, { page: href })) : link;\n  }\n);\nLink.displayName = \"Link\";\nvar NavLink = React10.forwardRef(\n  function NavLinkWithRef({\n    \"aria-current\": ariaCurrentProp = \"page\",\n    caseSensitive = false,\n    className: classNameProp = \"\",\n    end = false,\n    style: styleProp,\n    to,\n    viewTransition,\n    children,\n    ...rest\n  }, ref) {\n    let path = useResolvedPath(to, { relative: rest.relative });\n    let location = useLocation();\n    let routerState = React10.useContext(DataRouterStateContext);\n    let { navigator, basename } = React10.useContext(NavigationContext);\n    let isTransitioning = routerState != null && // Conditional usage is OK here because the usage of a data router is static\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    useViewTransitionState(path) && viewTransition === true;\n    let toPathname = navigator.encodeLocation ? navigator.encodeLocation(path).pathname : path.pathname;\n    let locationPathname = location.pathname;\n    let nextLocationPathname = routerState && routerState.navigation && routerState.navigation.location ? routerState.navigation.location.pathname : null;\n    if (!caseSensitive) {\n      locationPathname = locationPathname.toLowerCase();\n      nextLocationPathname = nextLocationPathname ? nextLocationPathname.toLowerCase() : null;\n      toPathname = toPathname.toLowerCase();\n    }\n    if (nextLocationPathname && basename) {\n      nextLocationPathname = stripBasename(nextLocationPathname, basename) || nextLocationPathname;\n    }\n    const endSlashPosition = toPathname !== \"/\" && toPathname.endsWith(\"/\") ? toPathname.length - 1 : toPathname.length;\n    let isActive = locationPathname === toPathname || !end && locationPathname.startsWith(toPathname) && locationPathname.charAt(endSlashPosition) === \"/\";\n    let isPending = nextLocationPathname != null && (nextLocationPathname === toPathname || !end && nextLocationPathname.startsWith(toPathname) && nextLocationPathname.charAt(toPathname.length) === \"/\");\n    let renderProps = {\n      isActive,\n      isPending,\n      isTransitioning\n    };\n    let ariaCurrent = isActive ? ariaCurrentProp : void 0;\n    let className;\n    if (typeof classNameProp === \"function\") {\n      className = classNameProp(renderProps);\n    } else {\n      className = [\n        classNameProp,\n        isActive ? \"active\" : null,\n        isPending ? \"pending\" : null,\n        isTransitioning ? \"transitioning\" : null\n      ].filter(Boolean).join(\" \");\n    }\n    let style = typeof styleProp === \"function\" ? styleProp(renderProps) : styleProp;\n    return /* @__PURE__ */ React10.createElement(\n      Link,\n      {\n        ...rest,\n        \"aria-current\": ariaCurrent,\n        className,\n        ref,\n        style,\n        to,\n        viewTransition\n      },\n      typeof children === \"function\" ? children(renderProps) : children\n    );\n  }\n);\nNavLink.displayName = \"NavLink\";\nvar Form = React10.forwardRef(\n  ({\n    discover = \"render\",\n    fetcherKey,\n    navigate,\n    reloadDocument,\n    replace: replace2,\n    state,\n    method = defaultMethod,\n    action,\n    onSubmit,\n    relative,\n    preventScrollReset,\n    viewTransition,\n    ...props\n  }, forwardedRef) => {\n    let submit = useSubmit();\n    let formAction = useFormAction(action, { relative });\n    let formMethod = method.toLowerCase() === \"get\" ? \"get\" : \"post\";\n    let isAbsolute = typeof action === \"string\" && ABSOLUTE_URL_REGEX2.test(action);\n    let submitHandler = (event) => {\n      onSubmit && onSubmit(event);\n      if (event.defaultPrevented) return;\n      event.preventDefault();\n      let submitter = event.nativeEvent.submitter;\n      let submitMethod = submitter?.getAttribute(\"formmethod\") || method;\n      submit(submitter || event.currentTarget, {\n        fetcherKey,\n        method: submitMethod,\n        navigate,\n        replace: replace2,\n        state,\n        relative,\n        preventScrollReset,\n        viewTransition\n      });\n    };\n    return /* @__PURE__ */ React10.createElement(\n      \"form\",\n      {\n        ref: forwardedRef,\n        method: formMethod,\n        action: formAction,\n        onSubmit: reloadDocument ? onSubmit : submitHandler,\n        ...props,\n        \"data-discover\": !isAbsolute && discover === \"render\" ? \"true\" : void 0\n      }\n    );\n  }\n);\nForm.displayName = \"Form\";\nfunction ScrollRestoration({\n  getKey,\n  storageKey,\n  ...props\n}) {\n  let remixContext = React10.useContext(FrameworkContext);\n  let { basename } = React10.useContext(NavigationContext);\n  let location = useLocation();\n  let matches = useMatches();\n  useScrollRestoration({ getKey, storageKey });\n  let ssrKey = React10.useMemo(\n    () => {\n      if (!remixContext || !getKey) return null;\n      let userKey = getScrollRestorationKey(\n        location,\n        matches,\n        basename,\n        getKey\n      );\n      return userKey !== location.key ? userKey : null;\n    },\n    // Nah, we only need this the first time for the SSR render\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    []\n  );\n  if (!remixContext || remixContext.isSpaMode) {\n    return null;\n  }\n  let restoreScroll = ((storageKey2, restoreKey) => {\n    if (!window.history.state || !window.history.state.key) {\n      let key = Math.random().toString(32).slice(2);\n      window.history.replaceState({ key }, \"\");\n    }\n    try {\n      let positions = JSON.parse(sessionStorage.getItem(storageKey2) || \"{}\");\n      let storedY = positions[restoreKey || window.history.state.key];\n      if (typeof storedY === \"number\") {\n        window.scrollTo(0, storedY);\n      }\n    } catch (error) {\n      console.error(error);\n      sessionStorage.removeItem(storageKey2);\n    }\n  }).toString();\n  return /* @__PURE__ */ React10.createElement(\n    \"script\",\n    {\n      ...props,\n      suppressHydrationWarning: true,\n      dangerouslySetInnerHTML: {\n        __html: `(${restoreScroll})(${JSON.stringify(\n          storageKey || SCROLL_RESTORATION_STORAGE_KEY\n        )}, ${JSON.stringify(ssrKey)})`\n      }\n    }\n  );\n}\nScrollRestoration.displayName = \"ScrollRestoration\";\nfunction getDataRouterConsoleError2(hookName) {\n  return `${hookName} must be used within a data router.  See https://reactrouter.com/en/main/routers/picking-a-router.`;\n}\nfunction useDataRouterContext3(hookName) {\n  let ctx = React10.useContext(DataRouterContext);\n  invariant(ctx, getDataRouterConsoleError2(hookName));\n  return ctx;\n}\nfunction useDataRouterState2(hookName) {\n  let state = React10.useContext(DataRouterStateContext);\n  invariant(state, getDataRouterConsoleError2(hookName));\n  return state;\n}\nfunction useLinkClickHandler(to, {\n  target,\n  replace: replaceProp,\n  state,\n  preventScrollReset,\n  relative,\n  viewTransition\n} = {}) {\n  let navigate = useNavigate();\n  let location = useLocation();\n  let path = useResolvedPath(to, { relative });\n  return React10.useCallback(\n    (event) => {\n      if (shouldProcessLinkClick(event, target)) {\n        event.preventDefault();\n        let replace2 = replaceProp !== void 0 ? replaceProp : createPath(location) === createPath(path);\n        navigate(to, {\n          replace: replace2,\n          state,\n          preventScrollReset,\n          relative,\n          viewTransition\n        });\n      }\n    },\n    [\n      location,\n      navigate,\n      path,\n      replaceProp,\n      state,\n      target,\n      to,\n      preventScrollReset,\n      relative,\n      viewTransition\n    ]\n  );\n}\nfunction useSearchParams(defaultInit) {\n  warning(\n    typeof URLSearchParams !== \"undefined\",\n    `You cannot use the \\`useSearchParams\\` hook in a browser that does not support the URLSearchParams API. If you need to support Internet Explorer 11, we recommend you load a polyfill such as https://github.com/ungap/url-search-params.`\n  );\n  let defaultSearchParamsRef = React10.useRef(createSearchParams(defaultInit));\n  let hasSetSearchParamsRef = React10.useRef(false);\n  let location = useLocation();\n  let searchParams = React10.useMemo(\n    () => (\n      // Only merge in the defaults if we haven't yet called setSearchParams.\n      // Once we call that we want those to take precedence, otherwise you can't\n      // remove a param with setSearchParams({}) if it has an initial value\n      getSearchParamsForLocation(\n        location.search,\n        hasSetSearchParamsRef.current ? null : defaultSearchParamsRef.current\n      )\n    ),\n    [location.search]\n  );\n  let navigate = useNavigate();\n  let setSearchParams = React10.useCallback(\n    (nextInit, navigateOptions) => {\n      const newSearchParams = createSearchParams(\n        typeof nextInit === \"function\" ? nextInit(new URLSearchParams(searchParams)) : nextInit\n      );\n      hasSetSearchParamsRef.current = true;\n      navigate(\"?\" + newSearchParams, navigateOptions);\n    },\n    [navigate, searchParams]\n  );\n  return [searchParams, setSearchParams];\n}\nvar fetcherId = 0;\nvar getUniqueFetcherId = () => `__${String(++fetcherId)}__`;\nfunction useSubmit() {\n  let { router } = useDataRouterContext3(\"useSubmit\" /* UseSubmit */);\n  let { basename } = React10.useContext(NavigationContext);\n  let currentRouteId = useRouteId();\n  return React10.useCallback(\n    async (target, options = {}) => {\n      let { action, method, encType, formData, body } = getFormSubmissionInfo(\n        target,\n        basename\n      );\n      if (options.navigate === false) {\n        let key = options.fetcherKey || getUniqueFetcherId();\n        await router.fetch(key, currentRouteId, options.action || action, {\n          preventScrollReset: options.preventScrollReset,\n          formData,\n          body,\n          formMethod: options.method || method,\n          formEncType: options.encType || encType,\n          flushSync: options.flushSync\n        });\n      } else {\n        await router.navigate(options.action || action, {\n          preventScrollReset: options.preventScrollReset,\n          formData,\n          body,\n          formMethod: options.method || method,\n          formEncType: options.encType || encType,\n          replace: options.replace,\n          state: options.state,\n          fromRouteId: currentRouteId,\n          flushSync: options.flushSync,\n          viewTransition: options.viewTransition\n        });\n      }\n    },\n    [router, basename, currentRouteId]\n  );\n}\nfunction useFormAction(action, { relative } = {}) {\n  let { basename } = React10.useContext(NavigationContext);\n  let routeContext = React10.useContext(RouteContext);\n  invariant(routeContext, \"useFormAction must be used inside a RouteContext\");\n  let [match] = routeContext.matches.slice(-1);\n  let path = { ...useResolvedPath(action ? action : \".\", { relative }) };\n  let location = useLocation();\n  if (action == null) {\n    path.search = location.search;\n    let params = new URLSearchParams(path.search);\n    let indexValues = params.getAll(\"index\");\n    let hasNakedIndexParam = indexValues.some((v) => v === \"\");\n    if (hasNakedIndexParam) {\n      params.delete(\"index\");\n      indexValues.filter((v) => v).forEach((v) => params.append(\"index\", v));\n      let qs = params.toString();\n      path.search = qs ? `?${qs}` : \"\";\n    }\n  }\n  if ((!action || action === \".\") && match.route.index) {\n    path.search = path.search ? path.search.replace(/^\\?/, \"?index&\") : \"?index\";\n  }\n  if (basename !== \"/\") {\n    path.pathname = path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n  }\n  return createPath(path);\n}\nfunction useFetcher({\n  key\n} = {}) {\n  let { router } = useDataRouterContext3(\"useFetcher\" /* UseFetcher */);\n  let state = useDataRouterState2(\"useFetcher\" /* UseFetcher */);\n  let fetcherData = React10.useContext(FetchersContext);\n  let route = React10.useContext(RouteContext);\n  let routeId = route.matches[route.matches.length - 1]?.route.id;\n  invariant(fetcherData, `useFetcher must be used inside a FetchersContext`);\n  invariant(route, `useFetcher must be used inside a RouteContext`);\n  invariant(\n    routeId != null,\n    `useFetcher can only be used on routes that contain a unique \"id\"`\n  );\n  let defaultKey = React10.useId();\n  let [fetcherKey, setFetcherKey] = React10.useState(key || defaultKey);\n  if (key && key !== fetcherKey) {\n    setFetcherKey(key);\n  }\n  React10.useEffect(() => {\n    router.getFetcher(fetcherKey);\n    return () => router.deleteFetcher(fetcherKey);\n  }, [router, fetcherKey]);\n  let load = React10.useCallback(\n    async (href, opts) => {\n      invariant(routeId, \"No routeId available for fetcher.load()\");\n      await router.fetch(fetcherKey, routeId, href, opts);\n    },\n    [fetcherKey, routeId, router]\n  );\n  let submitImpl = useSubmit();\n  let submit = React10.useCallback(\n    async (target, opts) => {\n      await submitImpl(target, {\n        ...opts,\n        navigate: false,\n        fetcherKey\n      });\n    },\n    [fetcherKey, submitImpl]\n  );\n  let FetcherForm = React10.useMemo(() => {\n    let FetcherForm2 = React10.forwardRef(\n      (props, ref) => {\n        return /* @__PURE__ */ React10.createElement(Form, { ...props, navigate: false, fetcherKey, ref });\n      }\n    );\n    FetcherForm2.displayName = \"fetcher.Form\";\n    return FetcherForm2;\n  }, [fetcherKey]);\n  let fetcher = state.fetchers.get(fetcherKey) || IDLE_FETCHER;\n  let data2 = fetcherData.get(fetcherKey);\n  let fetcherWithComponents = React10.useMemo(\n    () => ({\n      Form: FetcherForm,\n      submit,\n      load,\n      ...fetcher,\n      data: data2\n    }),\n    [FetcherForm, submit, load, fetcher, data2]\n  );\n  return fetcherWithComponents;\n}\nfunction useFetchers() {\n  let state = useDataRouterState2(\"useFetchers\" /* UseFetchers */);\n  return Array.from(state.fetchers.entries()).map(([key, fetcher]) => ({\n    ...fetcher,\n    key\n  }));\n}\nvar SCROLL_RESTORATION_STORAGE_KEY = \"react-router-scroll-positions\";\nvar savedScrollPositions = {};\nfunction getScrollRestorationKey(location, matches, basename, getKey) {\n  let key = null;\n  if (getKey) {\n    if (basename !== \"/\") {\n      key = getKey(\n        {\n          ...location,\n          pathname: stripBasename(location.pathname, basename) || location.pathname\n        },\n        matches\n      );\n    } else {\n      key = getKey(location, matches);\n    }\n  }\n  if (key == null) {\n    key = location.key;\n  }\n  return key;\n}\nfunction useScrollRestoration({\n  getKey,\n  storageKey\n} = {}) {\n  let { router } = useDataRouterContext3(\"useScrollRestoration\" /* UseScrollRestoration */);\n  let { restoreScrollPosition, preventScrollReset } = useDataRouterState2(\n    \"useScrollRestoration\" /* UseScrollRestoration */\n  );\n  let { basename } = React10.useContext(NavigationContext);\n  let location = useLocation();\n  let matches = useMatches();\n  let navigation = useNavigation();\n  React10.useEffect(() => {\n    window.history.scrollRestoration = \"manual\";\n    return () => {\n      window.history.scrollRestoration = \"auto\";\n    };\n  }, []);\n  usePageHide(\n    React10.useCallback(() => {\n      if (navigation.state === \"idle\") {\n        let key = getScrollRestorationKey(location, matches, basename, getKey);\n        savedScrollPositions[key] = window.scrollY;\n      }\n      try {\n        sessionStorage.setItem(\n          storageKey || SCROLL_RESTORATION_STORAGE_KEY,\n          JSON.stringify(savedScrollPositions)\n        );\n      } catch (error) {\n        warning(\n          false,\n          `Failed to save scroll positions in sessionStorage, <ScrollRestoration /> will not work properly (${error}).`\n        );\n      }\n      window.history.scrollRestoration = \"auto\";\n    }, [navigation.state, getKey, basename, location, matches, storageKey])\n  );\n  if (typeof document !== \"undefined\") {\n    React10.useLayoutEffect(() => {\n      try {\n        let sessionPositions = sessionStorage.getItem(\n          storageKey || SCROLL_RESTORATION_STORAGE_KEY\n        );\n        if (sessionPositions) {\n          savedScrollPositions = JSON.parse(sessionPositions);\n        }\n      } catch (e) {\n      }\n    }, [storageKey]);\n    React10.useLayoutEffect(() => {\n      let disableScrollRestoration = router?.enableScrollRestoration(\n        savedScrollPositions,\n        () => window.scrollY,\n        getKey ? (location2, matches2) => getScrollRestorationKey(location2, matches2, basename, getKey) : void 0\n      );\n      return () => disableScrollRestoration && disableScrollRestoration();\n    }, [router, basename, getKey]);\n    React10.useLayoutEffect(() => {\n      if (restoreScrollPosition === false) {\n        return;\n      }\n      if (typeof restoreScrollPosition === \"number\") {\n        window.scrollTo(0, restoreScrollPosition);\n        return;\n      }\n      try {\n        if (location.hash) {\n          let el = document.getElementById(\n            decodeURIComponent(location.hash.slice(1))\n          );\n          if (el) {\n            el.scrollIntoView();\n            return;\n          }\n        }\n      } catch {\n        warning(\n          false,\n          `\"${location.hash.slice(\n            1\n          )}\" is not a decodable element ID. The view will not scroll to it.`\n        );\n      }\n      if (preventScrollReset === true) {\n        return;\n      }\n      window.scrollTo(0, 0);\n    }, [location, restoreScrollPosition, preventScrollReset]);\n  }\n}\nfunction useBeforeUnload(callback, options) {\n  let { capture } = options || {};\n  React10.useEffect(() => {\n    let opts = capture != null ? { capture } : void 0;\n    window.addEventListener(\"beforeunload\", callback, opts);\n    return () => {\n      window.removeEventListener(\"beforeunload\", callback, opts);\n    };\n  }, [callback, capture]);\n}\nfunction usePageHide(callback, options) {\n  let { capture } = options || {};\n  React10.useEffect(() => {\n    let opts = capture != null ? { capture } : void 0;\n    window.addEventListener(\"pagehide\", callback, opts);\n    return () => {\n      window.removeEventListener(\"pagehide\", callback, opts);\n    };\n  }, [callback, capture]);\n}\nfunction usePrompt({\n  when,\n  message\n}) {\n  let blocker = useBlocker(when);\n  React10.useEffect(() => {\n    if (blocker.state === \"blocked\") {\n      let proceed = window.confirm(message);\n      if (proceed) {\n        setTimeout(blocker.proceed, 0);\n      } else {\n        blocker.reset();\n      }\n    }\n  }, [blocker, message]);\n  React10.useEffect(() => {\n    if (blocker.state === \"blocked\" && !when) {\n      blocker.reset();\n    }\n  }, [blocker, when]);\n}\nfunction useViewTransitionState(to, { relative } = {}) {\n  let vtContext = React10.useContext(ViewTransitionContext);\n  invariant(\n    vtContext != null,\n    \"`useViewTransitionState` must be used within `react-router-dom`'s `RouterProvider`.  Did you accidentally import `RouterProvider` from `react-router`?\"\n  );\n  let { basename } = useDataRouterContext3(\n    \"useViewTransitionState\" /* useViewTransitionState */\n  );\n  let path = useResolvedPath(to, { relative });\n  if (!vtContext.isTransitioning) {\n    return false;\n  }\n  let currentPath = stripBasename(vtContext.currentLocation.pathname, basename) || vtContext.currentLocation.pathname;\n  let nextPath = stripBasename(vtContext.nextLocation.pathname, basename) || vtContext.nextLocation.pathname;\n  return matchPath(path.pathname, nextPath) != null || matchPath(path.pathname, currentPath) != null;\n}\n\n// lib/dom/server.tsx\nimport * as React11 from \"react\";\nfunction StaticRouter({\n  basename,\n  children,\n  location: locationProp = \"/\"\n}) {\n  if (typeof locationProp === \"string\") {\n    locationProp = parsePath(locationProp);\n  }\n  let action = \"POP\" /* Pop */;\n  let location = {\n    pathname: locationProp.pathname || \"/\",\n    search: locationProp.search || \"\",\n    hash: locationProp.hash || \"\",\n    state: locationProp.state != null ? locationProp.state : null,\n    key: locationProp.key || \"default\"\n  };\n  let staticNavigator = getStatelessNavigator();\n  return /* @__PURE__ */ React11.createElement(\n    Router,\n    {\n      basename,\n      children,\n      location,\n      navigationType: action,\n      navigator: staticNavigator,\n      static: true\n    }\n  );\n}\nfunction StaticRouterProvider({\n  context,\n  router,\n  hydrate: hydrate2 = true,\n  nonce\n}) {\n  invariant(\n    router && context,\n    \"You must provide `router` and `context` to <StaticRouterProvider>\"\n  );\n  let dataRouterContext = {\n    router,\n    navigator: getStatelessNavigator(),\n    static: true,\n    staticContext: context,\n    basename: context.basename || \"/\"\n  };\n  let fetchersContext = /* @__PURE__ */ new Map();\n  let hydrateScript = \"\";\n  if (hydrate2 !== false) {\n    let data2 = {\n      loaderData: context.loaderData,\n      actionData: context.actionData,\n      errors: serializeErrors(context.errors)\n    };\n    let json = htmlEscape(JSON.stringify(JSON.stringify(data2)));\n    hydrateScript = `window.__staticRouterHydrationData = JSON.parse(${json});`;\n  }\n  let { state } = dataRouterContext.router;\n  return /* @__PURE__ */ React11.createElement(React11.Fragment, null, /* @__PURE__ */ React11.createElement(DataRouterContext.Provider, { value: dataRouterContext }, /* @__PURE__ */ React11.createElement(DataRouterStateContext.Provider, { value: state }, /* @__PURE__ */ React11.createElement(FetchersContext.Provider, { value: fetchersContext }, /* @__PURE__ */ React11.createElement(ViewTransitionContext.Provider, { value: { isTransitioning: false } }, /* @__PURE__ */ React11.createElement(\n    Router,\n    {\n      basename: dataRouterContext.basename,\n      location: state.location,\n      navigationType: state.historyAction,\n      navigator: dataRouterContext.navigator,\n      static: dataRouterContext.static\n    },\n    /* @__PURE__ */ React11.createElement(\n      DataRoutes2,\n      {\n        routes: router.routes,\n        future: router.future,\n        state\n      }\n    )\n  ))))), hydrateScript ? /* @__PURE__ */ React11.createElement(\n    \"script\",\n    {\n      suppressHydrationWarning: true,\n      nonce,\n      dangerouslySetInnerHTML: { __html: hydrateScript }\n    }\n  ) : null);\n}\nfunction DataRoutes2({\n  routes,\n  future,\n  state\n}) {\n  return useRoutesImpl(routes, void 0, state, future);\n}\nfunction serializeErrors(errors) {\n  if (!errors) return null;\n  let entries = Object.entries(errors);\n  let serialized = {};\n  for (let [key, val] of entries) {\n    if (isRouteErrorResponse(val)) {\n      serialized[key] = { ...val, __type: \"RouteErrorResponse\" };\n    } else if (val instanceof Error) {\n      serialized[key] = {\n        message: val.message,\n        __type: \"Error\",\n        // If this is a subclass (i.e., ReferenceError), send up the type so we\n        // can re-create the same type during hydration.\n        ...val.name !== \"Error\" ? {\n          __subType: val.name\n        } : {}\n      };\n    } else {\n      serialized[key] = val;\n    }\n  }\n  return serialized;\n}\nfunction getStatelessNavigator() {\n  return {\n    createHref,\n    encodeLocation,\n    push(to) {\n      throw new Error(\n        `You cannot use navigator.push() on the server because it is a stateless environment. This error was probably triggered when you did a \\`navigate(${JSON.stringify(to)})\\` somewhere in your app.`\n      );\n    },\n    replace(to) {\n      throw new Error(\n        `You cannot use navigator.replace() on the server because it is a stateless environment. This error was probably triggered when you did a \\`navigate(${JSON.stringify(to)}, { replace: true })\\` somewhere in your app.`\n      );\n    },\n    go(delta) {\n      throw new Error(\n        `You cannot use navigator.go() on the server because it is a stateless environment. This error was probably triggered when you did a \\`navigate(${delta})\\` somewhere in your app.`\n      );\n    },\n    back() {\n      throw new Error(\n        `You cannot use navigator.back() on the server because it is a stateless environment.`\n      );\n    },\n    forward() {\n      throw new Error(\n        `You cannot use navigator.forward() on the server because it is a stateless environment.`\n      );\n    }\n  };\n}\nfunction createStaticHandler2(routes, opts) {\n  return createStaticHandler(routes, {\n    ...opts,\n    mapRouteProperties\n  });\n}\nfunction createStaticRouter(routes, context, opts = {}) {\n  let manifest = {};\n  let dataRoutes = convertRoutesToDataRoutes(\n    routes,\n    mapRouteProperties,\n    void 0,\n    manifest\n  );\n  let matches = context.matches.map((match) => {\n    let route = manifest[match.route.id] || match.route;\n    return {\n      ...match,\n      route\n    };\n  });\n  let msg = (method) => `You cannot use router.${method}() on the server because it is a stateless environment`;\n  return {\n    get basename() {\n      return context.basename;\n    },\n    get future() {\n      return {\n        unstable_middleware: false,\n        ...opts?.future\n      };\n    },\n    get state() {\n      return {\n        historyAction: \"POP\" /* Pop */,\n        location: context.location,\n        matches,\n        loaderData: context.loaderData,\n        actionData: context.actionData,\n        errors: context.errors,\n        initialized: true,\n        navigation: IDLE_NAVIGATION,\n        restoreScrollPosition: null,\n        preventScrollReset: false,\n        revalidation: \"idle\",\n        fetchers: /* @__PURE__ */ new Map(),\n        blockers: /* @__PURE__ */ new Map()\n      };\n    },\n    get routes() {\n      return dataRoutes;\n    },\n    get window() {\n      return void 0;\n    },\n    initialize() {\n      throw msg(\"initialize\");\n    },\n    subscribe() {\n      throw msg(\"subscribe\");\n    },\n    enableScrollRestoration() {\n      throw msg(\"enableScrollRestoration\");\n    },\n    navigate() {\n      throw msg(\"navigate\");\n    },\n    fetch() {\n      throw msg(\"fetch\");\n    },\n    revalidate() {\n      throw msg(\"revalidate\");\n    },\n    createHref,\n    encodeLocation,\n    getFetcher() {\n      return IDLE_FETCHER;\n    },\n    deleteFetcher() {\n      throw msg(\"deleteFetcher\");\n    },\n    dispose() {\n      throw msg(\"dispose\");\n    },\n    getBlocker() {\n      return IDLE_BLOCKER;\n    },\n    deleteBlocker() {\n      throw msg(\"deleteBlocker\");\n    },\n    patchRoutes() {\n      throw msg(\"patchRoutes\");\n    },\n    _internalFetchControllers: /* @__PURE__ */ new Map(),\n    _internalSetRoutes() {\n      throw msg(\"_internalSetRoutes\");\n    },\n    _internalSetStateDoNotUseOrYouWillBreakYourApp() {\n      throw msg(\"_internalSetStateDoNotUseOrYouWillBreakYourApp\");\n    }\n  };\n}\nfunction createHref(to) {\n  return typeof to === \"string\" ? to : createPath(to);\n}\nfunction encodeLocation(to) {\n  let href = typeof to === \"string\" ? to : createPath(to);\n  href = href.replace(/ $/, \"%20\");\n  let encoded = ABSOLUTE_URL_REGEX3.test(href) ? new URL(href) : new URL(href, \"http://localhost\");\n  return {\n    pathname: encoded.pathname,\n    search: encoded.search,\n    hash: encoded.hash\n  };\n}\nvar ABSOLUTE_URL_REGEX3 = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\nvar ESCAPE_LOOKUP2 = {\n  \"&\": \"\\\\u0026\",\n  \">\": \"\\\\u003e\",\n  \"<\": \"\\\\u003c\",\n  \"\\u2028\": \"\\\\u2028\",\n  \"\\u2029\": \"\\\\u2029\"\n};\nvar ESCAPE_REGEX2 = /[&><\\u2028\\u2029]/g;\nfunction htmlEscape(str) {\n  return str.replace(ESCAPE_REGEX2, (match) => ESCAPE_LOOKUP2[match]);\n}\n\nexport {\n  Action,\n  createBrowserHistory,\n  invariant,\n  createPath,\n  parsePath,\n  unstable_createContext,\n  unstable_RouterContextProvider,\n  convertRoutesToDataRoutes,\n  matchRoutes,\n  generatePath,\n  matchPath,\n  stripBasename,\n  resolvePath,\n  data,\n  redirect,\n  redirectDocument,\n  replace,\n  ErrorResponseImpl,\n  isRouteErrorResponse,\n  IDLE_NAVIGATION,\n  IDLE_FETCHER,\n  IDLE_BLOCKER,\n  createRouter,\n  createStaticHandler,\n  getStaticContextFromError,\n  isDataWithResponseInit,\n  isResponse,\n  isRedirectStatusCode,\n  isRedirectResponse,\n  isMutationMethod,\n  DataRouterContext,\n  DataRouterStateContext,\n  RSCRouterContext,\n  ViewTransitionContext,\n  FetchersContext,\n  NavigationContext,\n  LocationContext,\n  RouteContext,\n  ENABLE_DEV_WARNINGS,\n  useHref,\n  useInRouterContext,\n  useLocation,\n  useNavigationType,\n  useMatch,\n  useNavigate,\n  useOutletContext,\n  useOutlet,\n  useParams,\n  useResolvedPath,\n  useRoutes,\n  useNavigation,\n  useRevalidator,\n  useMatches,\n  useLoaderData,\n  useRouteLoaderData,\n  useActionData,\n  useRouteError,\n  useAsyncValue,\n  useAsyncError,\n  useBlocker,\n  warnOnce,\n  mapRouteProperties,\n  hydrationRouteProperties,\n  createMemoryRouter,\n  RouterProvider,\n  MemoryRouter,\n  Navigate,\n  Outlet,\n  Route,\n  Router,\n  Routes,\n  Await,\n  createRoutesFromChildren,\n  createRoutesFromElements,\n  renderMatches,\n  WithComponentProps,\n  withComponentProps,\n  WithHydrateFallbackProps,\n  withHydrateFallbackProps,\n  WithErrorBoundaryProps,\n  withErrorBoundaryProps,\n  createSearchParams,\n  encode,\n  createRequestInit,\n  SingleFetchRedirectSymbol,\n  SINGLE_FETCH_REDIRECT_STATUS,\n  NO_BODY_STATUS_CODES,\n  StreamTransfer,\n  getTurboStreamSingleFetchDataStrategy,\n  getSingleFetchDataStrategyImpl,\n  stripIndexParam,\n  singleFetchUrl,\n  decodeViaTurboStream,\n  RemixErrorBoundary,\n  createServerRoutes,\n  createClientRoutesWithHMRRevalidationOptOut,\n  noActionDefinedError,\n  createClientRoutes,\n  shouldHydrateRouteLoader,\n  getPatchRoutesOnNavigationFunction,\n  useFogOFWarDiscovery,\n  getManifestPath,\n  FrameworkContext,\n  CRITICAL_CSS_DATA_ATTRIBUTE,\n  Links,\n  PrefetchPageLinks,\n  Meta,\n  setIsHydrated,\n  Scripts,\n  createBrowserRouter,\n  createHashRouter,\n  BrowserRouter,\n  HashRouter,\n  HistoryRouter,\n  Link,\n  NavLink,\n  Form,\n  ScrollRestoration,\n  useLinkClickHandler,\n  useSearchParams,\n  useSubmit,\n  useFormAction,\n  useFetcher,\n  useFetchers,\n  useScrollRestoration,\n  useBeforeUnload,\n  usePrompt,\n  useViewTransitionState,\n  StaticRouter,\n  StaticRouterProvider,\n  createStaticHandler2,\n  createStaticRouter\n};\n","import React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';\n\ninterface Background {\n  id: string;\n  name: string;\n  type: 'gradient' | 'pattern' | 'image';\n  value: string;\n  preview: string;\n  category: string;\n}\n\ninterface FontTheme {\n  id: string;\n  name: string;\n  description: string;\n  fontFamily: string;\n  preview: string;\n  category: 'classic' | 'modern' | 'decorative' | 'handwriting';\n}\n\ninterface Track {\n  id: string;\n  title: string;\n  artist: string;\n  url: string;\n  duration?: number;\n}\n\nexport interface User {\n  id: string;\n  username: string;\n  email: string;\n  firstName: string;\n  lastName: string;\n  avatar?: string;\n  bio?: string;\n  graduationYear?: number;\n  school?: string;\n  major?: string;\n  isVerified?: boolean;\n  createdAt: Date;\n  profileBackground?: Background;\n  profileMusic?: Track;\n  musicAutoPlay?: boolean;\n  fontTheme?: FontTheme;\n  role: 'user' | 'admin' | 'owner' | 'celebrity';\n  rank?: number;\n  topFriends?: string[];\n}\n\ninterface AuthContextType {\n  user: User | null;\n  loading: boolean;\n  login: (email: string, password: string) => Promise<void>;\n  register: (userData: RegisterData) => Promise<void>;\n  logout: () => void;\n  updateProfile: (userData: Partial<User>) => Promise<void>;\n}\n\ninterface RegisterData {\n  username: string;\n  email: string;\n  password: string;\n  firstName: string;\n  lastName: string;\n  graduationYear?: number;\n  school?: string;\n  major?: string;\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\ninterface AuthProviderProps {\n  children: ReactNode;\n}\n\nexport const AuthProvider: React.FC<AuthProviderProps> = ({ children }) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    // Check for existing session\n    const savedUser = localStorage.getItem('starAppUser');\n    if (savedUser) {\n      try {\n        const userData = JSON.parse(savedUser);\n        setUser(userData);\n      } catch (error) {\n        console.error('Error parsing saved user data:', error);\n        localStorage.removeItem('starAppUser');\n      }\n    }\n    setLoading(false);\n  }, []);\n\n  const login = async (email: string, password: string) => {\n    try {\n      setLoading(true);\n      // Simulate API call\n      await new Promise(resolve => setTimeout(resolve, 1000));\n      \n      // Mock user data - in real app, this would come from your backend\n      const mockUser: User = {\n        id: '1',\n        username: email.split('@')[0],\n        email,\n        firstName: 'John',\n        lastName: 'Doe',\n        avatar: `https://api.dicebear.com/7.x/avataaars/svg?seed=${email}`,\n        bio: 'Welcome to Star App! 🌟',\n        graduationYear: 2023,\n        school: 'University of Technology',\n        major: 'Computer Science',\n        isVerified: true,\n        createdAt: new Date(),\n        profileBackground: {\n          id: 'gradient1',\n          name: 'Purple Dream',\n          type: 'gradient',\n          value: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',\n          preview: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',\n          category: 'gradients',\n        },\n        profileMusic: {\n          id: 'track1',\n          title: 'Chill Vibes',\n          artist: 'Electronic Dreams',\n          url: 'https://www.soundjay.com/misc/sounds/bell-ringing-05.wav', // Demo audio\n        },\n        musicAutoPlay: true,\n        fontTheme: {\n          id: 'modern1',\n          name: 'Helvetica',\n          description: 'Clean, modern sans-serif font',\n          fontFamily: 'Helvetica, Arial, sans-serif',\n          preview: 'The quick brown fox jumps over the lazy dog',\n          category: 'modern',\n        },\n        role: 'user',\n        rank: 5,\n        topFriends: ['2', '3', '4', '5', '6'],\n      };\n      \n      setUser(mockUser);\n      localStorage.setItem('starAppUser', JSON.stringify(mockUser));\n    } catch (error) {\n      console.error('Login error:', error);\n      throw new Error('Login failed');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const register = async (userData: RegisterData) => {\n    try {\n      setLoading(true);\n      // Simulate API call\n      await new Promise(resolve => setTimeout(resolve, 1000));\n      \n      const newUser: User = {\n        id: Date.now().toString(),\n        username: userData.username,\n        email: userData.email,\n        firstName: userData.firstName,\n        lastName: userData.lastName,\n        avatar: `https://api.dicebear.com/7.x/avataaars/svg?seed=${userData.username}`,\n        bio: 'New Star App user!',\n        graduationYear: userData.graduationYear,\n        school: userData.school,\n        major: userData.major,\n        role: 'user',\n        isVerified: false,\n        createdAt: new Date(),\n      };\n      \n      setUser(newUser);\n      localStorage.setItem('starAppUser', JSON.stringify(newUser));\n    } catch (error) {\n      console.error('Registration error:', error);\n      throw new Error('Registration failed');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const logout = () => {\n    setUser(null);\n    localStorage.removeItem('starAppUser');\n  };\n\n  const updateProfile = async (userData: Partial<User>) => {\n    if (!user) return;\n    \n    try {\n      setLoading(true);\n      // Simulate API call\n      await new Promise(resolve => setTimeout(resolve, 500));\n      \n      const updatedUser = { ...user, ...userData };\n      setUser(updatedUser);\n      localStorage.setItem('starAppUser', JSON.stringify(updatedUser));\n    } catch (error) {\n      console.error('Profile update error:', error);\n      throw new Error('Profile update failed');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const value: AuthContextType = {\n    user,\n    loading,\n    login,\n    register,\n    logout,\n    updateProfile,\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n","import React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';\nimport { useAuth } from './AuthContext';\n\nexport interface Notification {\n  id: string;\n  type: 'mention' | 'reaction' | 'comment' | 'like' | 'follow';\n  title: string;\n  message: string;\n  userId: string;\n  username: string;\n  userAvatar: string;\n  postId?: string;\n  commentId?: string;\n  mediaId?: string;\n  timestamp: Date;\n  isRead: boolean;\n  actionUrl?: string;\n}\n\ninterface NotificationContextType {\n  notifications: Notification[];\n  unreadCount: number;\n  addNotification: (notification: Omit<Notification, 'id' | 'timestamp' | 'isRead'>) => void;\n  markAsRead: (notificationId: string) => void;\n  markAllAsRead: () => void;\n  deleteNotification: (notificationId: string) => void;\n  clearAllNotifications: () => void;\n  checkForMentions: (content: string, postId: string) => void;\n  addReactionNotification: (userId: string, username: string, userAvatar: string, postId: string, reactionType: string) => void;\n  addCommentNotification: (userId: string, username: string, userAvatar: string, postId: string, commentId: string) => void;\n}\n\nconst NotificationContext = createContext<NotificationContextType | undefined>(undefined);\n\nexport const useNotifications = () => {\n  const context = useContext(NotificationContext);\n  if (context === undefined) {\n    throw new Error('useNotifications must be used within a NotificationProvider');\n  }\n  return context;\n};\n\ninterface NotificationProviderProps {\n  children: ReactNode;\n}\n\nexport const NotificationProvider: React.FC<NotificationProviderProps> = ({ children }) => {\n  const { user } = useAuth();\n  const [notifications, setNotifications] = useState<Notification[]>([]);\n\n  // Calculate unread count\n  const unreadCount = notifications.filter(n => !n.isRead).length;\n\n  // Add a new notification\n  const addNotification = (notificationData: Omit<Notification, 'id' | 'timestamp' | 'isRead'>) => {\n    const newNotification: Notification = {\n      ...notificationData,\n      id: Date.now().toString(),\n      timestamp: new Date(),\n      isRead: false,\n    };\n\n    setNotifications(prev => [newNotification, ...prev]);\n  };\n\n  // Mark notification as read\n  const markAsRead = (notificationId: string) => {\n    setNotifications(prev =>\n      prev.map(notification =>\n        notification.id === notificationId\n          ? { ...notification, isRead: true }\n          : notification\n      )\n    );\n  };\n\n  // Mark all notifications as read\n  const markAllAsRead = () => {\n    setNotifications(prev =>\n      prev.map(notification => ({ ...notification, isRead: true }))\n    );\n  };\n\n  // Delete a notification\n  const deleteNotification = (notificationId: string) => {\n    setNotifications(prev => prev.filter(n => n.id !== notificationId));\n  };\n\n  // Clear all notifications\n  const clearAllNotifications = () => {\n    setNotifications([]);\n  };\n\n  // Check for mentions in content\n  const checkForMentions = (content: string, postId: string) => {\n    if (!user) return;\n\n    // Simple mention detection - looks for @username pattern\n    const mentionRegex = /@(\\w+)/g;\n    const mentions = content.match(mentionRegex);\n\n    if (mentions) {\n      mentions.forEach(mention => {\n        const username = mention.substring(1); // Remove @ symbol\n        \n        // Don't notify if user mentions themselves\n        if (username === user.username) return;\n\n                 addNotification({\n           type: 'mention',\n           title: 'You were mentioned!',\n           message: `${username} mentioned you in a post`,\n           userId: user.id || '1',\n           username,\n           userAvatar: `https://api.dicebear.com/7.x/avataaars/svg?seed=${username}`,\n           postId,\n           actionUrl: `/profile?post=${postId}`,\n         });\n      });\n    }\n  };\n\n  // Add reaction notification\n  const addReactionNotification = (userId: string, username: string, userAvatar: string, postId: string, reactionType: string) => {\n    if (!user || userId === user.id) return; // Don't notify for own reactions\n\n         addNotification({\n       type: 'reaction',\n       title: 'New reaction!',\n       message: `${username} reacted with ${reactionType} to your post`,\n       userId,\n       username,\n       userAvatar,\n       postId,\n       actionUrl: `/profile?post=${postId}`,\n     });\n  };\n\n  // Add comment notification\n  const addCommentNotification = (userId: string, username: string, userAvatar: string, postId: string, commentId: string) => {\n    if (!user || userId === user.id) return; // Don't notify for own comments\n\n         addNotification({\n       type: 'comment',\n       title: 'New comment!',\n       message: `${username} commented on your post`,\n       userId,\n       username,\n       userAvatar,\n       postId,\n       commentId,\n       actionUrl: `/profile?post=${postId}&comment=${commentId}`,\n     });\n  };\n\n  // Load mock notifications on mount\n  useEffect(() => {\n    if (user) {\n      const mockNotifications: Notification[] = [\n        {\n          id: '1',\n          type: 'mention',\n          title: 'You were mentioned!',\n          message: 'sarah_j mentioned you in a post',\n          userId: '2',\n          username: 'sarah_j',\n          userAvatar: 'https://api.dicebear.com/7.x/avataaars/svg?seed=sarah',\n          postId: 'mock-1',\n          timestamp: new Date(Date.now() - 1000 * 60 * 5),\n          isRead: false,\n          actionUrl: '/profile?post=mock-1',\n        },\n        {\n          id: '2',\n          type: 'reaction',\n          title: 'New reaction!',\n          message: 'mike_chen reacted with ❤️ to your post',\n          userId: '3',\n          username: 'mike_chen',\n          userAvatar: 'https://api.dicebear.com/7.x/avataaars/svg?seed=mike',\n          postId: 'mock-2',\n          timestamp: new Date(Date.now() - 1000 * 60 * 15),\n          isRead: false,\n          actionUrl: '/profile?post=mock-2',\n        },\n        {\n          id: '3',\n          type: 'comment',\n          title: 'New comment!',\n          message: 'emma_w commented on your photo',\n          userId: '4',\n          username: 'emma_w',\n          userAvatar: 'https://api.dicebear.com/7.x/avataaars/svg?seed=emma',\n          postId: 'mock-1',\n          commentId: 'comment-1',\n          timestamp: new Date(Date.now() - 1000 * 60 * 30),\n          isRead: true,\n          actionUrl: '/profile?post=mock-1&comment=comment-1',\n        },\n      ];\n\n      setNotifications(mockNotifications);\n    }\n  }, [user]);\n\n  const value: NotificationContextType = {\n    notifications,\n    unreadCount,\n    addNotification,\n    markAsRead,\n    markAllAsRead,\n    deleteNotification,\n    clearAllNotifications,\n    checkForMentions,\n    addReactionNotification,\n    addCommentNotification,\n  };\n\n  return (\n    <NotificationContext.Provider value={value}>\n      {children}\n    </NotificationContext.Provider>\n  );\n};\n","import React, { useState } from 'react';\nimport { Link, useNavigate, useLocation } from 'react-router-dom';\nimport { useAuth } from '../contexts/AuthContext';\nimport { useNotifications } from '../contexts/NotificationContext';\n\nconst Navbar: React.FC = () => {\n  const { user, logout } = useAuth();\n  const { notifications, unreadCount, markAsRead } = useNotifications();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n  const [showNotifications, setShowNotifications] = useState(false);\n\n  const handleLogout = () => {\n    logout();\n    navigate('/');\n  };\n\n  const isActive = (path: string) => location.pathname === path;\n\n  return (\n    <nav className=\"bg-black/20 backdrop-blur-md border-b border-white/20 sticky top-0 z-50\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"flex justify-between items-center h-16\">\n          {/* Logo */}\n          <Link to=\"/\" className=\"flex items-center space-x-2\">\n            <div className=\"w-10 h-10 bg-gradient-to-r from-purple-500 to-blue-500 rounded-full flex items-center justify-center star-glow\">\n              <span className=\"text-white text-xl font-bold\">⭐</span>\n            </div>\n            <div className=\"hidden sm:block\">\n              <h1 className=\"text-2xl font-bold gradient-text\">Star App</h1>\n              <p className=\"text-xs text-white/60 -mt-1\">The Ultimate APP In The World</p>\n            </div>\n          </Link>\n\n          {/* Navigation Links */}\n          <div className=\"hidden md:flex items-center space-x-8\">\n            <Link\n              to=\"/\"\n              className={`text-white hover:text-purple-300 transition-colors ${\n                isActive('/') ? 'text-purple-300 font-semibold' : ''\n              }`}\n            >\n              Home\n            </Link>\n            {user && (\n              <>\n                <Link\n                  to=\"/feed\"\n                  className={`text-white hover:text-purple-300 transition-colors ${\n                    isActive('/feed') ? 'text-purple-300 font-semibold' : ''\n                  }`}\n                >\n                  Feed\n                </Link>\n                <Link\n                  to=\"/marketplace\"\n                  className={`text-white hover:text-purple-300 transition-colors ${\n                    isActive('/marketplace') ? 'text-purple-300 font-semibold' : ''\n                  }`}\n                >\n                  🛍️ Shop\n                </Link>\n                <Link\n                  to=\"/chatrooms\"\n                  className={`text-white hover:text-purple-300 transition-colors ${\n                    isActive('/chatrooms') ? 'text-purple-300 font-semibold' : ''\n                  }`}\n                >\n                  Chat Rooms\n                </Link>\n                <Link\n                  to=\"/alumni-room\"\n                  className={`text-white hover:text-purple-300 transition-colors ${\n                    isActive('/alumni-room') ? 'text-purple-300 font-semibold' : ''\n                  }`}\n                >\n                  Alumni Room\n                </Link>\n                <Link\n                  to=\"/leaderboard\"\n                  className={`text-white hover:text-purple-300 transition-colors ${\n                    isActive('/leaderboard') ? 'text-purple-300 font-semibold' : ''\n                  }`}\n                >\n                  🏆 Leaderboard\n                </Link>\n                <Link\n                  to=\"/video-call\"\n                  className={`text-white hover:text-purple-300 transition-colors ${\n                    isActive('/video-call') ? 'text-purple-300 font-semibold' : ''\n                  }`}\n                >\n                  📹 Video Call\n                </Link>\n                <Link\n                  to=\"/profile\"\n                  className={`text-white hover:text-purple-300 transition-colors ${\n                    isActive('/profile') ? 'text-purple-300 font-semibold' : ''\n                  }`}\n                >\n                  👤 Profile\n                </Link>\n              </>\n            )}\n          </div>\n\n          {/* User Menu */}\n          <div className=\"flex items-center space-x-4\">\n            {user ? (\n              <div className=\"flex items-center space-x-6\">\n                <Link\n                  to=\"/profile\"\n                  className=\"flex items-center space-x-2 text-white hover:text-purple-300 transition-colors\"\n                >\n                  <img\n                    src={user.avatar || `https://api.dicebear.com/7.x/avataaars/svg?seed=${user.username}`}\n                    alt={user.username}\n                    className=\"w-8 h-8 rounded-full border-2 border-white/20\"\n                  />\n                  <span className=\"hidden sm:block\">{user.firstName}</span>\n                </Link>\n                \n                {/* Notification Star */}\n                <div className=\"relative ml-4\">\n                  <button\n                    onClick={() => setShowNotifications(!showNotifications)}\n                    className=\"relative p-2 text-white hover:text-purple-300 transition-colors\"\n                    title=\"Notifications\"\n                  >\n                    <span className=\"text-xl\">⭐</span>\n                    {unreadCount > 0 && (\n                      <span className=\"absolute -top-1 -right-1 bg-red-500 text-white text-xs rounded-full h-5 w-5 flex items-center justify-center font-bold\">\n                        {unreadCount > 99 ? '99+' : unreadCount}\n                      </span>\n                    )}\n                  </button>\n                  \n                  {/* Notifications Dropdown */}\n                  {showNotifications && (\n                    <div className=\"absolute right-0 mt-2 w-80 bg-white/10 backdrop-blur-md border border-white/20 rounded-lg shadow-xl z-50 max-h-96 overflow-y-auto\">\n                      <div className=\"p-4 border-b border-white/20\">\n                        <div className=\"flex items-center justify-between\">\n                          <h3 className=\"text-lg font-semibold text-white\">Notifications</h3>\n                          <button\n                            onClick={() => setShowNotifications(false)}\n                            className=\"text-white/60 hover:text-white\"\n                          >\n                            ×\n                          </button>\n                        </div>\n                      </div>\n                      \n                      <div className=\"p-2\">\n                        {notifications.length === 0 ? (\n                          <p className=\"text-white/60 text-center py-4\">No notifications yet</p>\n                        ) : (\n                          <div className=\"space-y-2\">\n                            {notifications.map((notification) => (\n                              <div\n                                key={notification.id}\n                                className={`p-3 rounded-lg cursor-pointer transition-colors ${\n                                  notification.isRead \n                                    ? 'bg-white/5 hover:bg-white/10' \n                                    : 'bg-purple-500/20 hover:bg-purple-500/30'\n                                }`}\n                                onClick={() => {\n                                  markAsRead(notification.id);\n                                  if (notification.actionUrl) {\n                                    navigate(notification.actionUrl);\n                                    setShowNotifications(false);\n                                  }\n                                }}\n                              >\n                                <div className=\"flex items-start space-x-3\">\n                                  <img\n                                    src={notification.userAvatar}\n                                    alt={notification.username}\n                                    className=\"w-8 h-8 rounded-full flex-shrink-0\"\n                                  />\n                                  <div className=\"flex-1 min-w-0\">\n                                    <p className=\"text-white font-medium text-sm\">\n                                      {notification.title}\n                                    </p>\n                                    <p className=\"text-white/80 text-xs mt-1\">\n                                      {notification.message}\n                                    </p>\n                                    <p className=\"text-white/40 text-xs mt-1\">\n                                      {notification.timestamp.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}\n                                    </p>\n                                  </div>\n                                </div>\n                              </div>\n                            ))}\n                          </div>\n                        )}\n                      </div>\n                    </div>\n                  )}\n                </div>\n                \n                <button\n                  onClick={handleLogout}\n                  className=\"btn-secondary text-sm\"\n                >\n                  Logout\n                </button>\n              </div>\n            ) : (\n              <div className=\"flex items-center space-x-3\">\n                <Link to=\"/login\" className=\"btn-secondary text-sm\">\n                  Login\n                </Link>\n                <Link to=\"/register\" className=\"btn-primary text-sm\">\n                  Sign Up\n                </Link>\n              </div>\n            )}\n\n            {/* Mobile menu button */}\n            <button\n              onClick={() => setIsMenuOpen(!isMenuOpen)}\n              className=\"md:hidden text-white hover:text-purple-300 transition-colors\"\n            >\n              <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                {isMenuOpen ? (\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n                ) : (\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 6h16M4 12h16M4 18h16\" />\n                )}\n              </svg>\n            </button>\n          </div>\n        </div>\n\n        {/* Mobile Menu */}\n        {isMenuOpen && (\n          <div className=\"md:hidden bg-black/30 backdrop-blur-md border-t border-white/20\">\n            <div className=\"px-2 pt-2 pb-3 space-y-1\">\n              <Link\n                to=\"/\"\n                className={`block px-3 py-2 rounded-md text-base font-medium transition-colors ${\n                  isActive('/') ? 'text-purple-300 bg-white/10' : 'text-white hover:text-purple-300 hover:bg-white/10'\n                }`}\n                onClick={() => setIsMenuOpen(false)}\n              >\n                Home\n              </Link>\n              {user && (\n                <>\n                  <Link\n                    to=\"/feed\"\n                    className={`block px-3 py-2 rounded-md text-base font-medium transition-colors ${\n                      isActive('/feed') ? 'text-purple-300 bg-white/10' : 'text-white hover:text-purple-300 hover:bg-white/10'\n                    }`}\n                    onClick={() => setIsMenuOpen(false)}\n                  >\n                    Feed\n                  </Link>\n                  <Link\n                    to=\"/marketplace\"\n                    className={`block px-3 py-2 rounded-md text-base font-medium transition-colors ${\n                      isActive('/marketplace') ? 'text-purple-300 bg-white/10' : 'text-white hover:text-purple-300 hover:bg-white/10'\n                    }`}\n                    onClick={() => setIsMenuOpen(false)}\n                  >\n                    🛍️ Shop\n                  </Link>\n                  <Link\n                    to=\"/chatrooms\"\n                    className={`block px-3 py-2 rounded-md text-base font-medium transition-colors ${\n                      isActive('/chatrooms') ? 'text-purple-300 bg-white/10' : 'text-white hover:text-purple-300 hover:bg-white/10'\n                    }`}\n                    onClick={() => setIsMenuOpen(false)}\n                  >\n                    Chat Rooms\n                  </Link>\n                  <Link\n                    to=\"/alumni-room\"\n                    className={`block px-3 py-2 rounded-md text-base font-medium transition-colors ${\n                      isActive('/alumni-room') ? 'text-purple-300 bg-white/10' : 'text-white hover:text-purple-300 hover:bg-white/10'\n                    }`}\n                    onClick={() => setIsMenuOpen(false)}\n                  >\n                    Alumni Room\n                  </Link>\n                  <Link\n                    to=\"/leaderboard\"\n                    className={`block px-3 py-2 rounded-md text-base font-medium transition-colors ${\n                      isActive('/leaderboard') ? 'text-purple-300 bg-white/10' : 'text-white hover:text-purple-300 hover:bg-white/10'\n                    }`}\n                    onClick={() => setIsMenuOpen(false)}\n                  >\n                    🏆 Leaderboard\n                  </Link>\n                  <Link\n                    to=\"/video-call\"\n                    className={`block px-3 py-2 rounded-md text-base font-medium transition-colors ${\n                      isActive('/video-call') ? 'text-purple-300 bg-white/10' : 'text-white hover:text-purple-300 hover:bg-white/10'\n                    }`}\n                    onClick={() => setIsMenuOpen(false)}\n                  >\n                    📹 Video Call\n                  </Link>\n                </>\n              )}\n            </div>\n          </div>\n        )}\n      </div>\n    </nav>\n  );\n};\n\nexport default Navbar;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useAuth } from '../contexts/AuthContext';\n\nconst Home: React.FC = () => {\n  const { user } = useAuth();\n\n  const features = [\n    {\n      icon: '💬',\n      title: 'Chat Rooms',\n      description: 'Join public and private chat rooms, connect with friends and make new ones.',\n    },\n    {\n      icon: '🎓',\n      title: 'Alumni Room',\n      description: 'Exclusive space for verified alumni to reconnect and network.',\n    },\n    {\n      icon: '📱',\n      title: 'Social Feed',\n      description: 'Share moments, photos, and updates with your network.',\n    },\n    {\n      icon: '📹',\n      title: 'Video Calls',\n      description: 'High-quality video calls with friends and family.',\n    },\n    {\n      icon: '🛍️',\n      title: 'Marketplace',\n      description: 'Shop and sell products in our integrated marketplace.',\n    },\n    {\n      icon: '🎬',\n      title: 'GIF Support',\n      description: 'Add fun GIFs to your posts with our integrated GIPHY-powered picker.',\n    },\n    {\n      icon: '😄',\n      title: 'Emoji Reactions',\n      description: 'React to posts with 8 different emojis - more than just likes!',\n    },\n    {\n      icon: '🏆',\n      title: 'Leaderboard',\n      description: 'Compete with friends and see who\\'s the most active on Star App.',\n    },\n    {\n      icon: '🎨',\n      title: 'Custom Backgrounds',\n      description: 'Personalize your profile with custom backgrounds and themes.',\n    },\n    {\n      icon: '🎵',\n      title: 'Profile Music',\n      description: 'Add your favorite songs to your profile with auto-play functionality.',\n    },\n    {\n      icon: '👥',\n      title: 'Profiles',\n      description: 'Create and customize your profile to showcase your personality.',\n    },\n    {\n      icon: '🔒',\n      title: 'Privacy',\n      description: 'Advanced privacy controls to protect your information.',\n    },\n    {\n      icon: '⭐',\n      title: 'All-in-One',\n      description: 'Everything you need in one ultimate social media platform.',\n    },\n  ];\n\n  return (\n    <div className=\"min-h-screen\">\n      {/* Hero Section */}\n      <section className=\"relative py-20 px-4 sm:px-6 lg:px-8\">\n        <div className=\"max-w-7xl mx-auto text-center\">\n          <div className=\"mb-8\">\n            <div className=\"w-24 h-24 bg-gradient-to-r from-purple-500 to-blue-500 rounded-full flex items-center justify-center mx-auto mb-6 star-glow floating\">\n              <span className=\"text-4xl\">⭐</span>\n            </div>\n            <h1 className=\"text-5xl md:text-7xl font-bold text-white mb-6\">\n              Welcome to{' '}\n              <span className=\"gradient-text\">Star App</span>\n            </h1>\n            <p className=\"text-xl md:text-2xl text-white/80 mb-8 max-w-3xl mx-auto\">\n              The Ultimate APP In The World\n            <p className=\"text-lg text-white/60 mb-12 max-w-2xl mx-auto\">\n              THE ULTIMATE SOCIAL MEDIA PLATFORM\n            </p>\n            </p>\n          </div>\n\n          <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n            {user ? (\n              <>\n                <Link to=\"/feed\" className=\"btn-primary text-lg px-8 py-4\">\n                  Go to Feed\n                </Link>\n                <Link to=\"/marketplace\" className=\"btn-primary text-lg px-8 py-4\">\n                  🛍️ Shop Now\n                </Link>\n                <Link to=\"/leaderboard\" className=\"btn-secondary text-lg px-8 py-4\">\n                  🏆 View Leaderboard\n                </Link>\n                <Link to=\"/video-call\" className=\"btn-secondary text-lg px-8 py-4\">\n                  📹 Start Video Call\n                </Link>\n              </>\n            ) : (\n              <>\n                <Link to=\"/register\" className=\"btn-primary text-lg px-8 py-4\">\n                  Get Started Free\n                </Link>\n                <Link to=\"/login\" className=\"btn-secondary text-lg px-8 py-4\">\n                  Sign In\n                </Link>\n              </>\n            )}\n          </div>\n        </div>\n\n        {/* Floating Elements */}\n        <div className=\"absolute top-20 left-10 w-20 h-20 bg-purple-500/20 rounded-full blur-xl animate-pulse\"></div>\n        <div className=\"absolute top-40 right-20 w-32 h-32 bg-blue-500/20 rounded-full blur-xl animate-pulse delay-1000\"></div>\n        <div className=\"absolute bottom-20 left-1/4 w-16 h-16 bg-pink-500/20 rounded-full blur-xl animate-pulse delay-2000\"></div>\n      </section>\n\n      {/* Features Section */}\n      <section className=\"py-20 px-4 sm:px-6 lg:px-8\">\n        <div className=\"max-w-7xl mx-auto\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"text-4xl font-bold text-white mb-4\">\n              Everything You Need\n            </h2>\n            <p className=\"text-xl text-white/60 max-w-2xl mx-auto\">\n              Star App combines the best features from all your favorite social media platforms\n            </p>\n          </div>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-8\">\n            {features.map((feature, index) => (\n              <div\n                key={index}\n                className=\"card hover:scale-105 transition-transform duration-300 group\"\n              >\n                <div className=\"text-4xl mb-4 group-hover:scale-110 transition-transform duration-300\">\n                  {feature.icon}\n                </div>\n                <h3 className=\"text-xl font-semibold text-white mb-3\">\n                  {feature.title}\n                </h3>\n                <p className=\"text-white/70\">\n                  {feature.description}\n                </p>\n              </div>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* New Features Highlight */}\n      <section className=\"py-20 px-4 sm:px-6 lg:px-8\">\n        <div className=\"max-w-7xl mx-auto\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"text-4xl font-bold text-white mb-4\">\n              🆕 Latest Features\n            </h2>\n            <p className=\"text-xl text-white/60 max-w-2xl mx-auto\">\n              Discover our newest additions that make Star App even more powerful\n            </p>\n          </div>\n\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-12\">\n            {/* GIF Support & Emoji Reactions */}\n            <div className=\"card\">\n              <div className=\"flex items-center space-x-4 mb-6\">\n                <div className=\"text-5xl\">🎬</div>\n                <div>\n                  <h3 className=\"text-2xl font-bold text-white\">GIFs & Reactions</h3>\n                  <p className=\"text-white/60\">Express yourself like never before!</p>\n                </div>\n              </div>\n              <div className=\"space-y-4 mb-6\">\n                <div className=\"flex items-center space-x-3\">\n                  <span className=\"text-green-400\">✓</span>\n                  <span className=\"text-white\">GIPHY-powered GIF picker</span>\n                </div>\n                <div className=\"flex items-center space-x-3\">\n                  <span className=\"text-green-400\">✓</span>\n                  <span className=\"text-white\">8 different emoji reactions</span>\n                </div>\n                <div className=\"flex items-center space-x-3\">\n                  <span className=\"text-green-400\">✓</span>\n                  <span className=\"text-white\">Category-based GIF browsing</span>\n                </div>\n                <div className=\"flex items-center space-x-3\">\n                  <span className=\"text-green-400\">✓</span>\n                  <span className=\"text-white\">Real-time reaction updates</span>\n                </div>\n              </div>\n              {user && (\n                <Link to=\"/feed\" className=\"btn-primary w-full\">\n                  Try GIFs & Reactions\n                </Link>\n              )}\n            </div>\n\n            {/* Leaderboard System */}\n            <div className=\"card\">\n              <div className=\"flex items-center space-x-4 mb-6\">\n                <div className=\"text-5xl\">🏆</div>\n                <div>\n                  <h3 className=\"text-2xl font-bold text-white\">Leaderboard System</h3>\n                  <p className=\"text-white/60\">Compete and win rewards!</p>\n                </div>\n              </div>\n              <div className=\"space-y-4 mb-6\">\n                <div className=\"flex items-center space-x-3\">\n                  <span className=\"text-green-400\">✓</span>\n                  <span className=\"text-white\">Weekly rankings & rewards</span>\n                </div>\n                <div className=\"flex items-center space-x-3\">\n                  <span className=\"text-green-400\">✓</span>\n                  <span className=\"text-white\">Top 10 leaderboard</span>\n                </div>\n                <div className=\"flex items-center space-x-3\">\n                  <span className=\"text-green-400\">✓</span>\n                  <span className=\"text-white\">Badges for winners</span>\n                </div>\n                <div className=\"flex items-center space-x-3\">\n                  <span className=\"text-green-400\">✓</span>\n                  <span className=\"text-white\">Score based on activity</span>\n                </div>\n              </div>\n              {user && (\n                <Link to=\"/leaderboard\" className=\"btn-primary w-full\">\n                  View Leaderboard\n                </Link>\n              )}\n            </div>\n          </div>\n\n          {/* Profile Customization Features */}\n          <div className=\"mt-12 grid grid-cols-1 lg:grid-cols-2 gap-12\">\n            {/* Custom Backgrounds */}\n            <div className=\"card\">\n              <div className=\"flex items-center space-x-4 mb-6\">\n                <div className=\"text-5xl\">🎨</div>\n                <div>\n                  <h3 className=\"text-2xl font-bold text-white\">Custom Backgrounds</h3>\n                  <p className=\"text-white/60\">Advanced profile customization!</p>\n                </div>\n              </div>\n              <div className=\"space-y-4 mb-6\">\n                <div className=\"flex items-center space-x-3\">\n                  <span className=\"text-green-400\">✓</span>\n                  <span className=\"text-white\">25+ preset backgrounds</span>\n                </div>\n                <div className=\"flex items-center space-x-3\">\n                  <span className=\"text-green-400\">✓</span>\n                  <span className=\"text-white\">6 categories to choose from</span>\n                </div>\n                <div className=\"flex items-center space-x-3\">\n                  <span className=\"text-green-400\">✓</span>\n                  <span className=\"text-white\">Gradients, patterns & images</span>\n                </div>\n                <div className=\"flex items-center space-x-3\">\n                  <span className=\"text-green-400\">✓</span>\n                  <span className=\"text-white\">Live preview before applying</span>\n                </div>\n              </div>\n              {user && (\n                <Link to={`/profile/${user.id}`} className=\"btn-primary w-full\">\n                  Customize Profile\n                </Link>\n              )}\n            </div>\n\n            {/* Profile Music */}\n            <div className=\"card\">\n              <div className=\"flex items-center space-x-4 mb-6\">\n                <div className=\"text-5xl\">🎵</div>\n                <div>\n                  <h3 className=\"text-2xl font-bold text-white\">Profile Music</h3>\n                  <p className=\"text-white/60\">Create your perfect profile!</p>\n                </div>\n              </div>\n              <div className=\"space-y-4 mb-6\">\n                <div className=\"flex items-center space-x-3\">\n                  <span className=\"text-green-400\">✓</span>\n                  <span className=\"text-white\">Auto-play when visitors arrive</span>\n                </div>\n                <div className=\"flex items-center space-x-3\">\n                  <span className=\"text-green-400\">✓</span>\n                  <span className=\"text-white\">Full music player controls</span>\n                </div>\n                <div className=\"flex items-center space-x-3\">\n                  <span className=\"text-green-400\">✓</span>\n                  <span className=\"text-white\">Volume control & seeking</span>\n                </div>\n                <div className=\"flex items-center space-x-3\">\n                  <span className=\"text-green-400\">✓</span>\n                  <span className=\"text-white\">Add any audio URL</span>\n                </div>\n              </div>\n              {user && (\n                <Link to={`/profile/${user.id}`} className=\"btn-primary w-full\">\n                  Add Your Music\n                </Link>\n              )}\n            </div>\n          </div>\n\n          {/* Additional Features Row */}\n          <div className=\"mt-12 grid grid-cols-1 lg:grid-cols-2 gap-12\">\n            {/* Video Calls */}\n            <div className=\"card\">\n              <div className=\"flex items-center space-x-4 mb-6\">\n                <div className=\"text-5xl\">📹</div>\n                <div>\n                  <h3 className=\"text-2xl font-bold text-white\">Video Calls</h3>\n                  <p className=\"text-white/60\">High-quality video calling experience!</p>\n                </div>\n              </div>\n              <div className=\"space-y-4 mb-6\">\n                <div className=\"flex items-center space-x-3\">\n                  <span className=\"text-green-400\">✓</span>\n                  <span className=\"text-white\">HD video quality</span>\n                </div>\n                <div className=\"flex items-center space-x-3\">\n                  <span className=\"text-green-400\">✓</span>\n                  <span className=\"text-white\">Screen sharing</span>\n                </div>\n                <div className=\"flex items-center space-x-3\">\n                  <span className=\"text-green-400\">✓</span>\n                  <span className=\"text-white\">Built-in chat</span>\n                </div>\n                <div className=\"flex items-center space-x-3\">\n                  <span className=\"text-green-400\">✓</span>\n                  <span className=\"text-white\">Multiple participants</span>\n                </div>\n              </div>\n              {user && (\n                <Link to=\"/video-call\" className=\"btn-primary w-full\">\n                  Start Video Call\n                </Link>\n              )}\n            </div>\n\n            {/* Marketplace */}\n            <div className=\"card\">\n              <div className=\"flex items-center space-x-4 mb-6\">\n                <div className=\"text-5xl\">🛍️</div>\n                <div>\n                  <h3 className=\"text-2xl font-bold text-white\">Marketplace</h3>\n                  <p className=\"text-white/60\">Integrated social shopping experience!</p>\n                </div>\n              </div>\n              <div className=\"space-y-4 mb-6\">\n                <div className=\"flex items-center space-x-3\">\n                  <span className=\"text-green-400\">✓</span>\n                  <span className=\"text-white\">Browse products by category</span>\n                </div>\n                <div className=\"flex items-center space-x-3\">\n                  <span className=\"text-green-400\">✓</span>\n                  <span className=\"text-white\">Smart search & filters</span>\n                </div>\n                <div className=\"flex items-center space-x-3\">\n                  <span className=\"text-green-400\">✓</span>\n                  <span className=\"text-white\">Shopping cart & checkout</span>\n                </div>\n                <div className=\"flex items-center space-x-3\">\n                  <span className=\"text-green-400\">✓</span>\n                  <span className=\"text-white\">Seller ratings & reviews</span>\n                </div>\n              </div>\n              {user && (\n                <Link to=\"/marketplace\" className=\"btn-primary w-full\">\n                  Explore Shop\n                </Link>\n              )}\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* CTA Section */}\n      <section className=\"py-20 px-4 sm:px-6 lg:px-8\">\n        <div className=\"max-w-4xl mx-auto text-center\">\n          <div className=\"card\">\n            <h2 className=\"text-3xl font-bold text-white mb-6\">\n              Ready to Experience the Ultimate Social Media Platform?\n            </h2>\n            <p className=\"text-lg text-white/70 mb-8\">\n              Connect with friends, shop for amazing products, make video calls, share GIFs, react with emojis, \n              compete on leaderboards, customize your profile with backgrounds and music, and be part of the ultimate social media experience.\n            </p>\n            {!user && (\n              <Link to=\"/register\" className=\"btn-primary text-lg px-8 py-4\">\n                Create Your Account\n              </Link>\n            )}\n          </div>\n        </div>\n      </section>\n\n      {/* Footer */}\n      <footer className=\"py-12 px-4 sm:px-6 lg:px-8 border-t border-white/20\">\n        <div className=\"max-w-7xl mx-auto text-center\">\n          <div className=\"flex items-center justify-center space-x-2 mb-4\">\n            <div className=\"w-8 h-8 bg-gradient-to-r from-purple-500 to-blue-500 rounded-full flex items-center justify-center\">\n              <span className=\"text-white text-sm font-bold\">⭐</span>\n            </div>\n            <span className=\"text-xl font-bold gradient-text\">Star App</span>\n          </div>\n          <p className=\"text-white/60 mb-4\">\n            The Ultimate APP In The World\n          </p>\n          <p className=\"text-white/40 text-sm\">\n            © 2024 Star App. All rights reserved.\n          </p>\n        </div>\n      </footer>\n    </div>\n  );\n};\n\nexport default Home;\n","import React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';\nimport { useAuth } from './AuthContext';\n\nexport interface ProfileMedia {\n  id: string;\n  type: 'photo' | 'video';\n  url: string;\n  thumbnail?: string;\n  caption?: string;\n  timestamp: Date;\n  isPublic: boolean;\n  likes: number;\n  comments: number;\n  tags: string[];\n}\n\nexport interface ProfileSettings {\n  textColor: string;\n  textGlowColor: string;\n  textGlowIntensity: number;\n  backgroundColor: string;\n  backgroundImage?: string;\n  profilePicture?: string;\n  neonAccentColor: string;\n  neonGlowIntensity: number;\n  customFont?: string;\n  textShadow: boolean;\n  neonBorder: boolean;\n  borderColor: string;\n}\n\nexport interface ProfileStats {\n  totalPhotos: number;\n  totalVideos: number;\n  totalPosts: number;\n  followers: number;\n  following: number;\n  profileViews: number;\n  lastActive: Date;\n}\n\ninterface ProfileContextType {\n  profileMedia: ProfileMedia[];\n  profileSettings: ProfileSettings;\n  profileStats: ProfileStats;\n  isEditing: boolean;\n  uploadMedia: (file: File, type: 'photo' | 'video', caption?: string) => Promise<void>;\n  deleteMedia: (mediaId: string) => Promise<void>;\n  updateProfileSettings: (settings: Partial<ProfileSettings>) => Promise<void>;\n  setProfilePicture: (mediaId: string) => Promise<void>;\n  setBackgroundImage: (mediaId: string) => Promise<void>;\n  toggleEditMode: () => void;\n  shareToFeed: (mediaId: string, caption?: string) => Promise<void>;\n  getPresetColorSchemes: () => Array<{ name: string; colors: Partial<ProfileSettings> }>;\n  getPresetNeonEffects: () => Array<{ name: string; settings: Partial<ProfileSettings> }>;\n  getGlobalTextStyle: () => React.CSSProperties;\n}\n\nconst ProfileContext = createContext<ProfileContextType | undefined>(undefined);\n\nexport const useProfile = () => {\n  const context = useContext(ProfileContext);\n  if (context === undefined) {\n    throw new Error('useProfile must be used within a ProfileProvider');\n  }\n  return context;\n};\n\ninterface ProfileProviderProps {\n  children: ReactNode;\n}\n\nexport const ProfileProvider: React.FC<ProfileProviderProps> = ({ children }) => {\n  const { user } = useAuth();\n  const [profileMedia, setProfileMedia] = useState<ProfileMedia[]>([]);\n  const [profileSettings, setProfileSettings] = useState<ProfileSettings>({\n    textColor: '#ffffff',\n    textGlowColor: '#00ffff',\n    textGlowIntensity: 0.5,\n    backgroundColor: '#1a1a2e',\n    neonAccentColor: '#ff00ff',\n    neonGlowIntensity: 0.7,\n    textShadow: true,\n    neonBorder: false,\n    borderColor: '#00ffff',\n  });\n  const [profileStats, setProfileStats] = useState<ProfileStats>({\n    totalPhotos: 0,\n    totalVideos: 0,\n    totalPosts: 0,\n    followers: 0,\n    following: 0,\n    profileViews: 0,\n    lastActive: new Date(),\n  });\n  const [isEditing, setIsEditing] = useState(false);\n\n  useEffect(() => {\n    if (user) {\n      loadProfileData();\n    }\n  }, [user]);\n\n  const loadProfileData = async () => {\n    // Mock data - in real app this would come from API\n    const mockMedia: ProfileMedia[] = [\n      {\n        id: '1',\n        type: 'photo',\n        url: 'https://images.unsplash.com/photo-1506905925346-21bda4d32df4?w=800',\n        thumbnail: 'https://images.unsplash.com/photo-1506905925346-21bda4d32df4?w=200',\n        caption: 'Beautiful sunset at the beach! 🌅',\n        timestamp: new Date(Date.now() - 1000 * 60 * 60 * 2),\n        isPublic: true,\n        likes: 24,\n        comments: 8,\n        tags: ['sunset', 'beach', 'nature'],\n      },\n      {\n        id: '2',\n        type: 'video',\n        url: 'https://sample-videos.com/zip/10/mp4/SampleVideo_1280x720_1mb.mp4',\n        thumbnail: 'https://images.unsplash.com/photo-1506905925346-21bda4d32df4?w=200',\n        caption: 'Amazing drone footage! 🚁',\n        timestamp: new Date(Date.now() - 1000 * 60 * 60 * 24),\n        isPublic: true,\n        likes: 15,\n        comments: 3,\n        tags: ['drone', 'aerial', 'video'],\n      },\n    ];\n\n    setProfileMedia(mockMedia);\n    setProfileStats(prev => ({\n      ...prev,\n      totalPhotos: mockMedia.filter(m => m.type === 'photo').length,\n      totalVideos: mockMedia.filter(m => m.type === 'video').length,\n    }));\n  };\n\n  const uploadMedia = async (file: File, type: 'photo' | 'video', caption?: string): Promise<void> => {\n    return new Promise((resolve) => {\n      // Simulate file upload\n      setTimeout(() => {\n        const newMedia: ProfileMedia = {\n          id: Date.now().toString(),\n          type,\n          url: URL.createObjectURL(file),\n          thumbnail: type === 'photo' ? URL.createObjectURL(file) : undefined,\n          caption: caption || '',\n          timestamp: new Date(),\n          isPublic: true,\n          likes: 0,\n          comments: 0,\n          tags: [],\n        };\n\n        setProfileMedia(prev => [newMedia, ...prev]);\n        setProfileStats(prev => ({\n          ...prev,\n          totalPhotos: type === 'photo' ? prev.totalPhotos + 1 : prev.totalPhotos,\n          totalVideos: type === 'video' ? prev.totalVideos + 1 : prev.totalVideos,\n        }));\n\n        resolve();\n      }, 1000);\n    });\n  };\n\n  const deleteMedia = async (mediaId: string): Promise<void> => {\n    return new Promise((resolve) => {\n      setProfileMedia(prev => {\n        const media = prev.find(m => m.id === mediaId);\n        if (media) {\n          setProfileStats(prevStats => ({\n            ...prevStats,\n            totalPhotos: media.type === 'photo' ? prevStats.totalPhotos - 1 : prevStats.totalPhotos,\n            totalVideos: media.type === 'video' ? prevStats.totalVideos - 1 : prevStats.totalVideos,\n          }));\n        }\n        return prev.filter(m => m.id !== mediaId);\n      });\n      resolve();\n    });\n  };\n\n  const updateProfileSettings = async (settings: Partial<ProfileSettings>): Promise<void> => {\n    return new Promise((resolve) => {\n      setProfileSettings(prev => ({ ...prev, ...settings }));\n      resolve();\n    });\n  };\n\n  const setProfilePicture = async (mediaId: string): Promise<void> => {\n    return new Promise((resolve) => {\n      const media = profileMedia.find(m => m.id === mediaId);\n      if (media && media.type === 'photo') {\n        setProfileSettings(prev => ({ ...prev, profilePicture: media.url }));\n      }\n      resolve();\n    });\n  };\n\n\n\n  const setBackgroundImage = async (mediaId: string): Promise<void> => {\n    return new Promise((resolve) => {\n      const media = profileMedia.find(m => m.id === mediaId);\n      if (media && media.type === 'photo') {\n        setProfileSettings(prev => ({ ...prev, backgroundImage: media.url }));\n      }\n      resolve();\n    });\n  };\n\n  const toggleEditMode = () => {\n    setIsEditing(!isEditing);\n  };\n\n  const shareToFeed = async (mediaId: string, caption?: string): Promise<void> => {\n    return new Promise((resolve) => {\n      // This would integrate with the Feed component\n      console.log('Sharing to feed:', mediaId, caption);\n      resolve();\n    });\n  };\n\n  const getPresetColorSchemes = () => [\n    {\n      name: 'Neon Cyberpunk',\n      colors: {\n        textColor: '#00ffff',\n        textGlowColor: '#ff00ff',\n        neonAccentColor: '#ff00ff',\n        backgroundColor: '#0a0a0a',\n        borderColor: '#00ffff',\n      }\n    },\n    {\n      name: 'Sunset Vibes',\n      colors: {\n        textColor: '#ff6b35',\n        textGlowColor: '#f7931e',\n        neonAccentColor: '#ff6b35',\n        backgroundColor: '#2c1810',\n        borderColor: '#f7931e',\n      }\n    },\n    {\n      name: 'Ocean Blue',\n      colors: {\n        textColor: '#4ecdc4',\n        textGlowColor: '#45b7aa',\n        neonAccentColor: '#4ecdc4',\n        backgroundColor: '#1a1a2e',\n        borderColor: '#45b7aa',\n      }\n    },\n    {\n      name: 'Forest Green',\n      colors: {\n        textColor: '#52c41a',\n        textGlowColor: '#389e0d',\n        neonAccentColor: '#52c41a',\n        backgroundColor: '#0f1419',\n        borderColor: '#389e0d',\n      }\n    },\n  ];\n\n  const getPresetNeonEffects = () => [\n    {\n      name: 'Subtle Glow',\n      settings: {\n        textGlowIntensity: 0.3,\n        neonGlowIntensity: 0.4,\n        textShadow: true,\n        neonBorder: false,\n      }\n    },\n    {\n      name: 'Intense Neon',\n      settings: {\n        textGlowIntensity: 0.8,\n        neonGlowIntensity: 1.0,\n        textShadow: true,\n        neonBorder: true,\n      }\n    },\n    {\n      name: 'Cyberpunk Edge',\n      settings: {\n        textGlowIntensity: 0.6,\n        neonGlowIntensity: 0.8,\n        textShadow: true,\n        neonBorder: true,\n        borderColor: '#00ffff',\n      }\n    },\n    {\n      name: 'Soft Elegance',\n      settings: {\n        textGlowIntensity: 0.2,\n        neonGlowIntensity: 0.3,\n        textShadow: false,\n        neonBorder: false,\n      }\n    },\n  ];\n\n  const getGlobalTextStyle = () => ({\n    color: profileSettings.textColor,\n    fontFamily: profileSettings.customFont || 'inherit',\n    textShadow: profileSettings.textShadow \n      ? `0 0 ${10 * profileSettings.textGlowIntensity}px ${profileSettings.textGlowColor}` \n      : 'none',\n    filter: `drop-shadow(0 0 ${8 * profileSettings.textGlowIntensity}px ${profileSettings.textGlowColor})`,\n  });\n\n  const value: ProfileContextType = {\n    profileMedia,\n    profileSettings,\n    profileStats,\n    isEditing,\n    uploadMedia,\n    deleteMedia,\n    updateProfileSettings,\n    setProfilePicture,\n    setBackgroundImage,\n    toggleEditMode,\n    shareToFeed,\n    getPresetColorSchemes,\n    getPresetNeonEffects,\n    getGlobalTextStyle,\n  };\n\n  return (\n    <ProfileContext.Provider value={value}>\n      {children}\n    </ProfileContext.Provider>\n  );\n};\n","import React from 'react';\n\ninterface EmojiPickerProps {\n  isOpen: boolean;\n  onClose: () => void;\n  onSelectEmoji: (emoji: string) => void;\n  className?: string;\n}\n\nconst EmojiPicker: React.FC<EmojiPickerProps> = ({ \n  isOpen, \n  onClose, \n  onSelectEmoji, \n  className = '' \n}) => {\n  if (!isOpen) return null;\n\n  // Common emojis organized by category\n  const emojiCategories = {\n    'Smileys': ['😀', '😃', '😄', '😁', '😆', '😅', '😂', '🤣', '😊', '😇', '🙂', '🙃', '😉', '😌', '😍', '🥰', '😘', '😗', '😙', '😚'],\n    'Gestures': ['👍', '👎', '👌', '✌️', '🤞', '🤟', '🤘', '🤙', '👈', '👉', '👆', '🖕', '👇', '☝️', '👋', '🤚', '🖐️', '✋', '🖖', '👌'],\n    'Hearts': ['❤️', '🧡', '💛', '💚', '💙', '💜', '🖤', '🤍', '🤎', '💔', '❣️', '💕', '💞', '💓', '💗', '💖', '💘', '💝', '💟', '♥️'],\n    'Objects': ['🔥', '💎', '⭐', '🌟', '✨', '💫', '⚡', '💥', '💢', '💦', '💨', '💭', '💬', '💤', '💋', '💯', '💢', '💥', '💫', '💦'],\n    'Activities': ['🎉', '🎊', '🎈', '🎂', '🎁', '🎄', '🎃', '🎗️', '🎟️', '🎫', '🎖️', '🏆', '🏅', '🥇', '🥈', '🥉', '⚽', '🏀', '🏈', '⚾'],\n    'Food': ['🍕', '🍔', '🍟', '🌭', '🍿', '🧂', '🥨', '🥯', '🥖', '🧀', '🥚', '🍳', '🧈', '🥞', '🧇', '🥓', '🥩', '🍗', '🍖', '🦴'],\n    'Animals': ['🐱', '🐶', '🐭', '🐹', '🐰', '🦊', '🐻', '🐼', '🐨', '🐯', '🦁', '🐮', '🐷', '🐸', '🐵', '🙈', '🙉', '🙊', '🐒', '🐔'],\n    'Nature': ['🌸', '💮', '🏵️', '🌹', '🥀', '🌺', '🌻', '🌼', '🌷', '🌱', '🌲', '🌳', '🌴', '🌵', '🌾', '🌿', '☘️', '🍀', '🍁', '🍂'],\n    'Symbols': ['💯', '💢', '💥', '💫', '💦', '💨', '💬', '💭', '💤', '💋', '💯', '💢', '💥', '💫', '💦', '💨', '💬', '💭', '💤', '💋'],\n    'Flags': ['🏁', '🚩', '🎌', '🏴', '🏳️', '🏳️‍🌈', '🏴‍☠️', '🇦🇫', '🇦🇱', '🇩🇿', '🇦🇩', '🇦🇩', '🇦🇩', '🇦🇩', '🇦🇩', '🇦🇩', '🇦🇩', '🇦🇩', '🇦🇩', '🇦🇩']\n  };\n\n  const handleEmojiClick = (emoji: string) => {\n    onSelectEmoji(emoji);\n    onClose();\n  };\n\n  return (\n    <div className={`bg-white/10 backdrop-blur-sm rounded-lg p-4 border border-white/20 ${className}`}>\n      <div className=\"flex items-center justify-between mb-3\">\n        <h3 className=\"text-white font-semibold text-sm\">Select Emoji</h3>\n        <button\n          onClick={onClose}\n          className=\"text-white/60 hover:text-white text-lg hover:scale-110 transition-transform\"\n        >\n          ×\n        </button>\n      </div>\n      \n      <div className=\"max-h-64 overflow-y-auto\">\n        {Object.entries(emojiCategories).map(([category, emojis]) => (\n          <div key={category} className=\"mb-4\">\n            <h4 className=\"text-white/60 text-xs font-medium mb-2 uppercase tracking-wide\">\n              {category}\n            </h4>\n            <div className=\"grid grid-cols-10 gap-1\">\n              {emojis.map((emoji, index) => (\n                <button\n                  key={`${category}-${index}`}\n                  onClick={() => handleEmojiClick(emoji)}\n                  className=\"text-2xl hover:scale-125 transition-transform p-1 rounded hover:bg-white/20 focus:outline-none focus:ring-2 focus:ring-purple-500\"\n                  title={emoji}\n                >\n                  {emoji}\n                </button>\n              ))}\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default EmojiPicker;\n","import React, { useState, useRef } from 'react';\n\ninterface MediaUploadProps {\n  onUpload: (file: File, type: 'photo' | 'video', caption?: string) => Promise<void>;\n  onCancel: () => void;\n  isOpen: boolean;\n  className?: string;\n}\n\nconst MediaUpload: React.FC<MediaUploadProps> = ({ \n  onUpload, \n  onCancel, \n  isOpen, \n  className = '' \n}) => {\n  const [uploadType, setUploadType] = useState<'photo' | 'video'>('photo');\n  const [uploadCaption, setUploadCaption] = useState('');\n  const [isUploading, setIsUploading] = useState(false);\n  const [dragActive, setDragActive] = useState(false);\n  \n  const fileInputRef = useRef<HTMLInputElement>(null);\n  const videoInputRef = useRef<HTMLInputElement>(null);\n\n  if (!isOpen) return null;\n\n  const handleFileUpload = async (event: React.ChangeEvent<HTMLInputElement>) => {\n    const file = event.target.files?.[0];\n    if (!file) return;\n\n    setIsUploading(true);\n    try {\n      await onUpload(file, uploadType, uploadCaption);\n      setUploadCaption('');\n      setUploadType('photo');\n    } catch (error) {\n      console.error('Upload failed:', error);\n    } finally {\n      setIsUploading(false);\n    }\n  };\n\n  const handleDrag = (e: React.DragEvent) => {\n    e.preventDefault();\n    e.stopPropagation();\n    if (e.type === 'dragenter' || e.type === 'dragover') {\n      setDragActive(true);\n    } else if (e.type === 'dragleave') {\n      setDragActive(false);\n    }\n  };\n\n  const handleDrop = async (e: React.DragEvent) => {\n    e.preventDefault();\n    e.stopPropagation();\n    setDragActive(false);\n\n    const files = e.dataTransfer.files;\n    if (files && files[0]) {\n      const file = files[0];\n      const type = file.type.startsWith('image/') ? 'photo' : 'video';\n      \n      setIsUploading(true);\n      try {\n        await onUpload(file, type, uploadCaption);\n        setUploadCaption('');\n      } catch (error) {\n        console.error('Upload failed:', error);\n      } finally {\n        setIsUploading(false);\n      }\n    }\n  };\n\n  const handleFileSelect = () => {\n    if (uploadType === 'photo') {\n      fileInputRef.current?.click();\n    } else {\n      videoInputRef.current?.click();\n    }\n  };\n\n  return (\n    <div className={`fixed inset-0 bg-black/50 backdrop-blur-sm flex items-center justify-center z-50 ${className}`}>\n      <div className=\"card max-w-md w-full mx-4\">\n        <h3 className=\"text-xl font-semibold text-white mb-6\">📸 Upload Media</h3>\n        \n        <div className=\"space-y-4\">\n          {/* Upload Type Selection */}\n          <div className=\"flex space-x-2\">\n            <button\n              onClick={() => setUploadType('photo')}\n              className={`flex-1 py-2 px-4 rounded-lg transition-colors ${\n                uploadType === 'photo'\n                  ? 'bg-purple-600 text-white'\n                  : 'bg-white/10 text-white/60 hover:bg-white/20'\n              }`}\n            >\n              📸 Photo\n            </button>\n            <button\n              onClick={() => setUploadType('video')}\n              className={`flex-1 py-2 px-4 rounded-lg transition-colors ${\n                uploadType === 'video'\n                  ? 'bg-purple-600 text-white'\n                  : 'bg-white/10 text-white/60 hover:bg-white/20'\n              }`}\n            >\n              🎥 Video\n            </button>\n          </div>\n\n          {/* Drag & Drop Area */}\n          <div\n            className={`border-2 border-dashed rounded-lg p-8 text-center transition-colors ${\n              dragActive \n                ? 'border-purple-400 bg-purple-500/20' \n                : 'border-white/20 hover:border-white/40'\n            }`}\n            onDragEnter={handleDrag}\n            onDragLeave={handleDrag}\n            onDragOver={handleDrag}\n            onDrop={handleDrop}\n          >\n            <div className=\"text-4xl mb-4\">\n              {uploadType === 'photo' ? '📸' : '🎥'}\n            </div>\n            <p className=\"text-white/80 mb-2\">\n              Drag & drop your {uploadType === 'photo' ? 'photo' : 'video'} here\n            </p>\n            <p className=\"text-white/60 text-sm\">or</p>\n            <button\n              onClick={handleFileSelect}\n              className=\"btn-primary mt-3\"\n              disabled={isUploading}\n            >\n              Browse Files\n            </button>\n          </div>\n\n          {/* Hidden File Inputs */}\n          <input\n            ref={fileInputRef}\n            type=\"file\"\n            accept=\"image/*\"\n            onChange={handleFileUpload}\n            className=\"hidden\"\n          />\n          <input\n            ref={videoInputRef}\n            type=\"file\"\n            accept=\"video/*\"\n            onChange={handleFileUpload}\n            className=\"hidden\"\n          />\n\n          {/* Caption Input */}\n          <div>\n            <label className=\"block text-sm font-medium text-white/80 mb-2\">\n              Caption (optional)\n            </label>\n            <textarea\n              value={uploadCaption}\n              onChange={(e) => setUploadCaption(e.target.value)}\n              placeholder=\"Add a caption...\"\n              className=\"w-full bg-white/10 border border-white/20 rounded-lg px-3 py-2 text-white placeholder-white/40 focus:outline-none focus:ring-2 focus:ring-purple-500\"\n              rows={3}\n            />\n          </div>\n\n          {/* Action Buttons */}\n          <div className=\"flex space-x-3\">\n            <button\n              onClick={onCancel}\n              className=\"flex-1 btn-secondary\"\n              disabled={isUploading}\n            >\n              Cancel\n            </button>\n            <button\n              onClick={handleFileSelect}\n              className=\"flex-1 btn-primary\"\n              disabled={isUploading}\n            >\n              {isUploading ? 'Uploading...' : 'Upload'}\n            </button>\n          </div>\n\n          {/* Upload Progress */}\n          {isUploading && (\n            <div className=\"text-center\">\n              <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-purple-500 mx-auto mb-2\"></div>\n              <p className=\"text-white/60 text-sm\">Uploading your {uploadType}...</p>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default MediaUpload;\n","import React, { useState, useEffect } from 'react';\n\ninterface Gif {\n  id: string;\n  title: string;\n  url: string;\n  preview: string;\n}\n\ninterface GifPickerProps {\n  isOpen: boolean;\n  onClose: () => void;\n  onSelectGif: (gif: Gif) => void;\n}\n\nconst GifPicker: React.FC<GifPickerProps> = ({ isOpen, onClose, onSelectGif }) => {\n  const [searchQuery, setSearchQuery] = useState('');\n  const [gifs, setGifs] = useState<Gif[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [selectedCategory, setSelectedCategory] = useState('trending');\n\n  const categories = [\n    { id: 'trending', name: 'Trending', icon: '🔥' },\n    { id: 'funny', name: 'Funny', icon: '😂' },\n    { id: 'love', name: 'Love', icon: '❤️' },\n    { id: 'sports', name: 'Sports', icon: '⚽' },\n    { id: 'animals', name: 'Animals', icon: '🐱' },\n    { id: 'food', name: 'Food', icon: '🍕' },\n    { id: 'music', name: 'Music', icon: '🎵' },\n    { id: 'gaming', name: 'Gaming', icon: '🎮' },\n  ];\n\n  // Mock GIF data - in a real app, this would come from GIPHY API\n  const mockGifs: { [key: string]: Gif[] } = {\n    trending: [\n      { id: '1', title: 'Excited celebration', url: 'https://media.giphy.com/media/3o7abKhOpu0NwenH3O/giphy.gif', preview: 'https://media.giphy.com/media/3o7abKhOpu0NwenH3O/100w.gif' },\n      { id: '2', title: 'Happy dance', url: 'https://media.giphy.com/media/26ufcVAKyBV8Ho8Y0/giphy.gif', preview: 'https://media.giphy.com/media/26ufcVAKyBV8Ho8Y0/100w.gif' },\n      { id: '3', title: 'Thumbs up', url: 'https://media.giphy.com/media/3o7abKhOpu0NwenH3O/giphy.gif', preview: 'https://media.giphy.com/media/3o7abKhOpu0NwenH3O/100w.gif' },\n      { id: '4', title: 'Party time', url: 'https://media.giphy.com/media/3o7abKhOpu0NwenH3O/giphy.gif', preview: 'https://media.giphy.com/media/3o7abKhOpu0NwenH3O/100w.gif' },\n      { id: '5', title: 'Success', url: 'https://media.giphy.com/media/3o7abKhOpu0NwenH3O/giphy.gif', preview: 'https://media.giphy.com/media/3o7abKhOpu0NwenH3O/100w.gif' },\n      { id: '6', title: 'Awesome', url: 'https://media.giphy.com/media/3o7abKhOpu0NwenH3O/giphy.gif', preview: 'https://media.giphy.com/media/3o7abKhOpu0NwenH3O/100w.gif' },\n    ],\n    funny: [\n      { id: '7', title: 'Laughing', url: 'https://media.giphy.com/media/3o7abKhOpu0NwenH3O/giphy.gif', preview: 'https://media.giphy.com/media/3o7abKhOpu0NwenH3O/100w.gif' },\n      { id: '8', title: 'Silly face', url: 'https://media.giphy.com/media/3o7abKhOpu0NwenH3O/giphy.gif', preview: 'https://media.giphy.com/media/3o7abKhOpu0NwenH3O/100w.gif' },\n      { id: '9', title: 'Funny reaction', url: 'https://media.giphy.com/media/3o7abKhOpu0NwenH3O/giphy.gif', preview: 'https://media.giphy.com/media/3o7abKhOpu0NwenH3O/100w.gif' },\n    ],\n    love: [\n      { id: '10', title: 'Heart eyes', url: 'https://media.giphy.com/media/3o7abKhOpu0NwenH3O/giphy.gif', preview: 'https://media.giphy.com/media/3o7abKhOpu0NwenH3O/100w.gif' },\n      { id: '11', title: 'Love you', url: 'https://media.giphy.com/media/3o7abKhOpu0NwenH3O/giphy.gif', preview: 'https://media.giphy.com/media/3o7abKhOpu0NwenH3O/100w.gif' },\n      { id: '12', title: 'Sweet', url: 'https://media.giphy.com/media/3o7abKhOpu0NwenH3O/giphy.gif', preview: 'https://media.giphy.com/media/3o7abKhOpu0NwenH3O/100w.gif' },\n    ],\n    sports: [\n      { id: '13', title: 'Goal!', url: 'https://media.giphy.com/media/3o7abKhOpu0NwenH3O/giphy.gif', preview: 'https://media.giphy.com/media/3o7abKhOpu0NwenH3O/100w.gif' },\n      { id: '14', title: 'Victory', url: 'https://media.giphy.com/media/3o7abKhOpu0NwenH3O/giphy.gif', preview: 'https://media.giphy.com/media/3o7abKhOpu0NwenH3O/100w.gif' },\n      { id: '15', title: 'Champion', url: 'https://media.giphy.com/media/3o7abKhOpu0NwenH3O/giphy.gif', preview: 'https://media.giphy.com/media/3o7abKhOpu0NwenH3O/100w.gif' },\n    ],\n    animals: [\n      { id: '16', title: 'Cute cat', url: 'https://media.giphy.com/media/3o7abKhOpu0NwenH3O/giphy.gif', preview: 'https://media.giphy.com/media/3o7abKhOpu0NwenH3O/100w.gif' },\n      { id: '17', title: 'Happy dog', url: 'https://media.giphy.com/media/3o7abKhOpu0NwenH3O/giphy.gif', preview: 'https://media.giphy.com/media/3o7abKhOpu0NwenH3O/100w.gif' },\n      { id: '18', title: 'Sleepy pet', url: 'https://media.giphy.com/media/3o7abKhOpu0NwenH3O/giphy.gif', preview: 'https://media.giphy.com/media/3o7abKhOpu0NwenH3O/100w.gif' },\n    ],\n    food: [\n      { id: '19', title: 'Delicious', url: 'https://media.giphy.com/media/3o7abKhOpu0NwenH3O/giphy.gif', preview: 'https://media.giphy.com/media/3o7abKhOpu0NwenH3O/100w.gif' },\n      { id: '20', title: 'Yummy', url: 'https://media.giphy.com/media/3o7abKhOpu0NwenH3O/giphy.gif', preview: 'https://media.giphy.com/media/3o7abKhOpu0NwenH3O/100w.gif' },\n      { id: '21', title: 'Food coma', url: 'https://media.giphy.com/media/3o7abKhOpu0NwenH3O/giphy.gif', preview: 'https://media.giphy.com/media/3o7abKhOpu0NwenH3O/100w.gif' },\n    ],\n    music: [\n      { id: '22', title: 'Rock on', url: 'https://media.giphy.com/media/3o7abKhOpu0NwenH3O/giphy.gif', preview: 'https://media.giphy.com/media/3o7abKhOpu0NwenH3O/100w.gif' },\n      { id: '23', title: 'Dancing', url: 'https://media.giphy.com/media/3o7abKhOpu0NwenH3O/giphy.gif', preview: 'https://media.giphy.com/media/3o7abKhOpu0NwenH3O/100w.gif' },\n      { id: '24', title: 'Concert', url: 'https://media.giphy.com/media/3o7abKhOpu0NwenH3O/giphy.gif', preview: 'https://media.giphy.com/media/3o7abKhOpu0NwenH3O/100w.gif' },\n    ],\n    gaming: [\n      { id: '25', title: 'Game over', url: 'https://media.giphy.com/media/3o7abKhOpu0NwenH3O/giphy.gif', preview: 'https://media.giphy.com/media/3o7abKhOpu0NwenH3O/100w.gif' },\n      { id: '26', title: 'Level up', url: 'https://media.giphy.com/media/3o7abKhOpu0NwenH3O/giphy.gif', preview: 'https://media.giphy.com/media/3o7abKhOpu0NwenH3O/100w.gif' },\n      { id: '27', title: 'Winner', url: 'https://media.giphy.com/media/3o7abKhOpu0NwenH3O/giphy.gif', preview: 'https://media.giphy.com/media/3o7abKhOpu0NwenH3O/100w.gif' },\n    ],\n  };\n\n  useEffect(() => {\n    if (isOpen) {\n      loadGifs(selectedCategory);\n    }\n  }, [isOpen, selectedCategory]);\n\n  const loadGifs = async (category: string) => {\n    setIsLoading(true);\n    \n    // Simulate API call delay\n    await new Promise(resolve => setTimeout(resolve, 500));\n    \n    const categoryGifs = mockGifs[category] || mockGifs.trending;\n    setGifs(categoryGifs);\n    setIsLoading(false);\n  };\n\n  const handleSearch = async () => {\n    if (!searchQuery.trim()) {\n      loadGifs(selectedCategory);\n      return;\n    }\n\n    setIsLoading(true);\n    \n    // Simulate search delay\n    await new Promise(resolve => setTimeout(resolve, 800));\n    \n    // Filter GIFs by search query\n    const allGifs = Object.values(mockGifs).flat();\n    const filteredGifs = allGifs.filter(gif =>\n      gif.title.toLowerCase().includes(searchQuery.toLowerCase())\n    );\n    \n    setGifs(filteredGifs);\n    setIsLoading(false);\n  };\n\n  const handleGifSelect = (gif: Gif) => {\n    onSelectGif(gif);\n    onClose();\n  };\n\n  if (!isOpen) return null;\n\n  return (\n    <div className=\"fixed inset-0 bg-black/50 backdrop-blur-sm z-50 flex items-center justify-center p-4\">\n      <div className=\"bg-gray-900 rounded-xl shadow-2xl w-full max-w-4xl max-h-[80vh] flex flex-col\">\n        {/* Header */}\n        <div className=\"p-6 border-b border-white/20\">\n          <div className=\"flex items-center justify-between mb-4\">\n            <h2 className=\"text-2xl font-bold text-white\">🎬 GIF Picker</h2>\n            <button\n              onClick={onClose}\n              className=\"text-white/60 hover:text-white text-2xl\"\n            >\n              ✕\n            </button>\n          </div>\n          \n          {/* Search Bar */}\n          <div className=\"flex space-x-3\">\n            <input\n              type=\"text\"\n              placeholder=\"Search for GIFs...\"\n              value={searchQuery}\n              onChange={(e) => setSearchQuery(e.target.value)}\n              onKeyPress={(e) => e.key === 'Enter' && handleSearch()}\n              className=\"flex-1 bg-white/10 border border-white/20 rounded-lg px-4 py-2 text-white placeholder-white/60 focus:outline-none focus:ring-2 focus:ring-purple-500\"\n            />\n            <button\n              onClick={handleSearch}\n              className=\"bg-purple-600 hover:bg-purple-700 text-white px-6 py-2 rounded-lg transition-colors\"\n            >\n              Search\n            </button>\n          </div>\n        </div>\n\n        {/* Categories */}\n        <div className=\"px-6 py-4 border-b border-white/20\">\n          <div className=\"flex space-x-2 overflow-x-auto pb-2\">\n            {categories.map((category) => (\n              <button\n                key={category.id}\n                onClick={() => setSelectedCategory(category.id)}\n                className={`flex items-center space-x-2 px-4 py-2 rounded-lg whitespace-nowrap transition-colors ${\n                  selectedCategory === category.id\n                    ? 'bg-purple-600 text-white'\n                    : 'bg-white/10 text-white/80 hover:bg-white/20'\n                }`}\n              >\n                <span>{category.icon}</span>\n                <span>{category.name}</span>\n              </button>\n            ))}\n          </div>\n        </div>\n\n        {/* GIF Grid */}\n        <div className=\"flex-1 overflow-y-auto p-6\">\n          {isLoading ? (\n            <div className=\"flex items-center justify-center py-12\">\n              <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-purple-500\"></div>\n            </div>\n          ) : gifs.length === 0 ? (\n            <div className=\"text-center py-12\">\n              <div className=\"text-4xl mb-4\">🔍</div>\n              <h3 className=\"text-xl font-semibold text-white mb-2\">No GIFs found</h3>\n              <p className=\"text-white/60\">Try a different search term or category</p>\n            </div>\n          ) : (\n            <div className=\"grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-4\">\n              {gifs.map((gif) => (\n                <div\n                  key={gif.id}\n                  onClick={() => handleGifSelect(gif)}\n                  className=\"cursor-pointer group\"\n                >\n                  <div className=\"relative bg-black rounded-lg overflow-hidden\">\n                    <img\n                      src={gif.preview}\n                      alt={gif.title}\n                      className=\"w-full h-32 object-cover group-hover:scale-105 transition-transform duration-200\"\n                    />\n                    <div className=\"absolute inset-0 bg-black/50 opacity-0 group-hover:opacity-100 transition-opacity flex items-center justify-center\">\n                      <span className=\"text-white text-sm font-medium\">Click to select</span>\n                    </div>\n                  </div>\n                  <p className=\"text-white/80 text-xs mt-2 line-clamp-2\">{gif.title}</p>\n                </div>\n              ))}\n            </div>\n          )}\n        </div>\n\n        {/* Footer */}\n        <div className=\"p-6 border-t border-white/20\">\n          <p className=\"text-white/60 text-sm text-center\">\n            Powered by GIPHY • Click any GIF to add it to your post\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default GifPicker;\n","import React, { useState, useRef, useEffect } from 'react';\nimport { useAuth } from '../contexts/AuthContext';\nimport { useProfile } from '../contexts/ProfileContext';\nimport { useNotifications } from '../contexts/NotificationContext';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport EmojiPicker from './EmojiPicker';\nimport MediaUpload from './MediaUpload';\nimport GifPicker from './GifPicker';\n\nconst Profile: React.FC = () => {\n  const { user } = useAuth();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const {\n    profileMedia,\n    profileSettings,\n    profileStats,\n    isEditing,\n    uploadMedia,\n    deleteMedia,\n    updateProfileSettings,\n    setProfilePicture,\n    setBackgroundImage,\n    toggleEditMode,\n    shareToFeed,\n    getPresetColorSchemes,\n    getPresetNeonEffects,\n  } = useProfile();\n  const { checkForMentions, addReactionNotification, addCommentNotification } = useNotifications();\n\n  const [showUploadModal, setShowUploadModal] = useState(false);\n  const [showSettingsModal, setShowSettingsModal] = useState(false);\n  const [showMediaModal, setShowMediaModal] = useState(false);\n  const [selectedMedia, setSelectedMedia] = useState<any>(null);\n  const [activeTab, setActiveTab] = useState<'media' | 'posts' | 'messages' | 'friends' | 'settings' | 'stats'>('posts');\n  const [newPost, setNewPost] = useState('');\n  const [showEmojiPicker, setShowEmojiPicker] = useState(false);\n  const [showGifPicker, setShowGifPicker] = useState(false);\n  const [selectedGif, setSelectedGif] = useState<string>('');\n  const [showPhotoEditor, setShowPhotoEditor] = useState(false);\n  const [editingPhoto, setEditingPhoto] = useState<any>(null);\n  const [photoScale, setPhotoScale] = useState(1);\n  const [photoRotation, setPhotoRotation] = useState(0);\n  const [photoPosition, setPhotoPosition] = useState({ x: 0, y: 0 });\n  const [userPosts, setUserPosts] = useState<any[]>([]);\n  const [mockPosts, setMockPosts] = useState<any[]>([]);\n  const [showCommentInput, setShowCommentInput] = useState<string | null>(null);\n  const [newComment, setNewComment] = useState('');\n  const [showReplyInput, setShowReplyInput] = useState<string | null>(null);\n  const [newReply, setNewReply] = useState('');\n  const [showUsernameModal, setShowUsernameModal] = useState(false);\n  const [newUsername, setNewUsername] = useState('');\n  const [isChangingUsername, setIsChangingUsername] = useState(false);\n  const [directMessages, setDirectMessages] = useState<any[]>([]);\n  const [selectedDM, setSelectedDM] = useState<any>(null);\n  const [newDM, setNewDM] = useState('');\n  const [showDMEmojiPicker, setShowDMEmojiPicker] = useState(false);\n  const [showDMGifPicker, setShowDMGifPicker] = useState(false);\n  const [showMediaUpload, setShowMediaUpload] = useState(false);\n  const [groupMessages, setGroupMessages] = useState<any[]>([]);\n  const [showCreateGroup, setShowCreateGroup] = useState(false);\n  const [newGroupName, setNewGroupName] = useState('');\n  const [selectedGroupMembers, setSelectedGroupMembers] = useState<string[]>([]);\n  const [showCreateMessage, setShowCreateMessage] = useState(false);\n  const [newMessageRecipient, setNewMessageRecipient] = useState<string>('');\n  const [newMessageContent, setNewMessageContent] = useState('');\n  const [showNewMessageEmojiPicker, setShowNewMessageEmojiPicker] = useState(false);\n  const [showNewMessageGifPicker, setShowNewMessageGifPicker] = useState(false);\n  const [newMessageMedia, setNewMessageMedia] = useState<{type: 'image' | 'video', url: string, name: string} | null>(null);\n  \n  // Comment reaction states\n  const [commentReactions, setCommentReactions] = useState<{[key: string]: {[emoji: string]: number}}>({});\n  const [userCommentReactions, setUserCommentReactions] = useState<{[key: string]: string[]}>({});\n  \n  // Profile video states\n  const [profileVideo, setProfileVideo] = useState<{type: 'upload' | 'youtube', url: string, name?: string} | null>(null);\n  const [showVideoUploadModal, setShowVideoUploadModal] = useState(false);\n  const [youtubeUrl, setYoutubeUrl] = useState('');\n  const [videoFile, setVideoFile] = useState<File | null>(null);\n\n  const handleShareToFeed = async (mediaId: string) => {\n    try {\n      await shareToFeed(mediaId);\n      alert('Shared to feed successfully!');\n    } catch (error) {\n      console.error('Share failed:', error);\n    }\n  };\n\n  // Handle URL parameters for notifications\n  useEffect(() => {\n    const searchParams = new URLSearchParams(location.search);\n    const postId = searchParams.get('post');\n    const commentId = searchParams.get('comment');\n    \n    if (postId) {\n      // Switch to posts tab\n      setActiveTab('posts');\n      \n      // Scroll to the specific post after a short delay to ensure posts are rendered\n      setTimeout(() => {\n        const postElement = document.getElementById(`post-${postId}`);\n        if (postElement) {\n          postElement.scrollIntoView({ behavior: 'smooth', block: 'center' });\n          postElement.style.border = '2px solid #8b5cf6';\n          postElement.style.borderRadius = '8px';\n          \n          // Remove highlight after 3 seconds\n          setTimeout(() => {\n            postElement.style.border = '';\n            postElement.style.borderRadius = '';\n          }, 3000);\n        }\n      }, 500);\n      \n      // Clear URL parameters\n      navigate(location.pathname, { replace: true });\n    }\n  }, [location.search, navigate]);\n\n  // Initialize mock posts on component mount\n  React.useEffect(() => {\n    const initialMockPosts = [\n      {\n        id: 'mock-1',\n        user: {\n          id: user?.id || '1',\n          username: user?.username || 'user',\n          firstName: user?.firstName || 'User',\n          lastName: user?.lastName || 'Name',\n          avatar: profileSettings.profilePicture || user?.avatar || `https://api.dicebear.com/7.x/avataaars/svg?seed=${user?.username || 'user'}`,\n        },\n        content: 'Just finished an amazing workout! 💪 Feeling energized and ready to conquer the day.',\n        timestamp: new Date(Date.now() - 1000 * 60 * 30),\n        likes: 24,\n        comments: [\n          {\n            id: '1',\n            user: {\n              id: '2',\n              username: 'mike_chen',\n              firstName: 'Mike',\n              lastName: 'Chen',\n              avatar: 'https://api.dicebear.com/7.x/avataaars/svg?seed=mike',\n            },\n            content: 'Great job! 💪 What\\'s your workout routine?',\n            timestamp: new Date(Date.now() - 1000 * 60 * 25),\n            gifUrl: undefined,\n            replies: [],\n          },\n        ],\n        gifUrl: undefined,\n      },\n      {\n        id: 'mock-2',\n        user: {\n          id: user?.id || '1',\n          username: user?.username || 'user',\n          firstName: user?.firstName || 'User',\n          lastName: user?.lastName || 'Name',\n          avatar: profileSettings.profilePicture || user?.avatar || `https://api.dicebear.com/7.x/avataaars/svg?seed=${user?.username || 'user'}`,\n        },\n        content: 'Check out this incredible sunset from my hike today! Nature never fails to amaze me. 🌅',\n        timestamp: new Date(Date.now() - 1000 * 60 * 60 * 2),\n        likes: 42,\n        comments: [\n          {\n            id: '2',\n            user: {\n              id: '1',\n              username: 'sarah_j',\n              firstName: 'Sarah',\n              lastName: 'Johnson',\n              avatar: 'https://api.dicebear.com/7.x/avataaars/svg?seed=sarah',\n            },\n            content: 'Wow, that\\'s absolutely stunning! Where was this taken?',\n            timestamp: new Date(Date.now() - 1000 * 60 * 60 * 1.5),\n            gifUrl: undefined,\n            replies: [\n              {\n                id: '2-reply-1',\n                user: {\n                  id: user?.id || '1',\n                  username: user?.username || 'user',\n                  firstName: user?.firstName || 'User',\n                  lastName: user?.lastName || 'Name',\n                  avatar: profileSettings.profilePicture || user?.avatar || `https://api.dicebear.com/7.x/avataaars/svg?seed=${user?.username || 'user'}`,\n                },\n                content: 'This was taken at Mount Wilson! Thanks for the kind words! 😊',\n                timestamp: new Date(Date.now() - 1000 * 60 * 60 * 1),\n              },\n            ],\n          },\n        ],\n        gifUrl: undefined,\n      },\n    ];\n    \n    setMockPosts(initialMockPosts);\n  }, [user, profileSettings.profilePicture]);\n\n  // Function to get user's posts (both dynamic and mock data)\n  const getUserPosts = () => {\n    // Combine dynamic posts with mock posts\n    return [...userPosts, ...mockPosts];\n  };\n\n  const deletePost = async (postId: string) => {\n    if (confirm('Are you sure you want to delete this post?')) {\n      // In a real app, this would delete the post from the database\n      console.log('Deleting post:', postId);\n      // You could add a posts state here and remove the post from it\n      alert('Post deleted successfully!');\n    }\n  };\n\n  const formatTimestamp = (timestamp: Date) => {\n    const now = new Date();\n    const diff = now.getTime() - timestamp.getTime();\n    const minutes = Math.floor(diff / (1000 * 60));\n    const hours = Math.floor(diff / (1000 * 60 * 60));\n    const days = Math.floor(diff / (1000 * 60 * 60 * 24));\n    const weeks = Math.floor(days / 7);\n    const months = Math.floor(days / 30);\n    const years = Math.floor(days / 365);\n\n    if (minutes < 1) return 'Just now';\n    if (minutes < 60) return `${minutes}m ago`;\n    if (hours < 24) return `${hours}h ago`;\n    if (days === 1) return 'Yesterday';\n    if (days < 7) return `${days} days ago`;\n    if (weeks === 1) return '1 week ago';\n    if (weeks < 4) return `${weeks} weeks ago`;\n    if (months === 1) return '1 month ago';\n    if (months < 12) return `${months} months ago`;\n    if (years === 1) return '1 year ago';\n    return `${years} years ago`;\n  };\n\n  const handleEmojiSelect = (emoji: string) => {\n    setNewPost(prev => prev + emoji);\n    setShowEmojiPicker(false);\n  };\n\n  const handleGifSelect = (gif: any) => {\n    setSelectedGif(gif.url);\n    setShowGifPicker(false);\n  };\n\n  const createPost = () => {\n    if (!newPost.trim() && !selectedGif) return;\n\n    const newPostObj = {\n      id: Date.now().toString(),\n      user: {\n        id: user?.id || '1',\n        username: user?.username || 'user',\n        firstName: user?.firstName || 'User',\n        lastName: user?.lastName || 'Name',\n        avatar: profileSettings.profilePicture || user?.avatar || `https://api.dicebear.com/7.x/avataaars/svg?seed=${user?.username || 'user'}`,\n      },\n      content: newPost,\n      timestamp: new Date(),\n      likes: 0,\n      comments: [],\n      gifUrl: selectedGif,\n    };\n\n    // Add to posts list instantly\n    setUserPosts(prev => [newPostObj, ...prev]);\n    \n    // Check for mentions in the post content\n    checkForMentions(newPost, newPostObj.id);\n    \n    // Clear form\n    setNewPost('');\n    setSelectedGif('');\n    setShowEmojiPicker(false);\n    setShowGifPicker(false);\n  };\n\n  // Mock direct messages data\n  useEffect(() => {\n    const mockDMs = [\n      {\n        id: '1',\n        user: {\n          id: '2',\n          username: 'sarah_j',\n          firstName: 'Sarah',\n          lastName: 'Johnson',\n          avatar: 'https://api.dicebear.com/7.x/avataaars/svg?seed=sarah',\n        },\n        lastMessage: 'Hey! How are you doing?',\n        timestamp: new Date(Date.now() - 1000 * 60 * 30),\n        unread: true,\n        type: 'direct',\n      },\n      {\n        id: '2',\n        user: {\n          id: '3',\n          username: 'mike_chen',\n          firstName: 'Mike',\n          lastName: 'Chen',\n          avatar: 'https://api.dicebear.com/7.x/avataaars/svg?seed=mike',\n        },\n        lastMessage: 'Great to see you at the event!',\n        timestamp: new Date(Date.now() - 1000 * 60 * 60 * 2),\n        unread: false,\n        type: 'direct',\n      },\n      {\n        id: '3',\n        user: {\n          id: '4',\n          username: 'emma_w',\n          firstName: 'Emma',\n          lastName: 'Wilson',\n          avatar: 'https://api.dicebear.com/7.x/avataaars/svg?seed=emma',\n        },\n        lastMessage: 'Thanks for the help with the project!',\n        timestamp: new Date(Date.now() - 1000 * 60 * 60 * 24),\n        unread: false,\n        type: 'direct',\n      },\n    ];\n    setDirectMessages(mockDMs);\n\n    // Mock group messages\n    const mockGroups = [\n      {\n        id: 'g1',\n        name: 'Project Team',\n        avatar: '👥',\n        members: ['sarah_j', 'mike_chen', 'emma_w'],\n        lastMessage: 'Meeting tomorrow at 10 AM! 📅',\n        timestamp: new Date(Date.now() - 1000 * 60 * 15),\n        unread: true,\n        type: 'group',\n      },\n      {\n        id: 'g2',\n        name: 'College Friends',\n        avatar: '🎓',\n        members: ['sarah_j', 'mike_chen', 'emma_w', 'john_d'],\n        lastMessage: 'Reunion planning is going great! 🎉',\n        timestamp: new Date(Date.now() - 1000 * 60 * 60 * 3),\n        unread: false,\n        type: 'group',\n      },\n    ];\n    setGroupMessages(mockGroups);\n  }, []);\n\n  // Mock friends data\n  const getUserFriends = () => {\n    return [\n      {\n        id: '1',\n        username: 'sarah_j',\n        firstName: 'Sarah',\n        lastName: 'Johnson',\n        avatar: 'https://api.dicebear.com/7.x/avataaars/svg?seed=sarah',\n        isOnline: true,\n        lastSeen: new Date(Date.now() - 1000 * 60 * 5),\n      },\n      {\n        id: '2',\n        username: 'mike_chen',\n        firstName: 'Mike',\n        lastName: 'Chen',\n        avatar: 'https://api.dicebear.com/7.x/avataaars/svg?seed=mike',\n        isOnline: false,\n        lastSeen: new Date(Date.now() - 1000 * 60 * 30),\n      },\n      {\n        id: '3',\n        username: 'emma_w',\n        firstName: 'Emma',\n        lastName: 'Wilson',\n        avatar: 'https://api.dicebear.com/7.x/avataaars/svg?seed=emma',\n        isOnline: true,\n        lastSeen: new Date(Date.now() - 1000 * 60 * 2),\n      },\n      {\n        id: '4',\n        username: 'david_r',\n        firstName: 'David',\n        lastName: 'Rodriguez',\n        avatar: 'https://api.dicebear.com/7.x/avataaars/svg?seed=david',\n        isOnline: false,\n        lastSeen: new Date(Date.now() - 1000 * 60 * 60),\n      },\n      {\n        id: '5',\n        username: 'alex_t',\n        firstName: 'Alex',\n        lastName: 'Thompson',\n        avatar: 'https://api.dicebear.com/7.x/avataaars/svg?seed=alex',\n        isOnline: true,\n        lastSeen: new Date(Date.now() - 1000 * 60 * 10),\n      },\n    ];\n  };\n\n  const totalFriends = 24; // Total friends count\n\n  const handlePhotoEdit = (media: any) => {\n    setEditingPhoto(media);\n    setShowPhotoEditor(true);\n    setPhotoScale(1);\n    setPhotoRotation(0);\n    setPhotoPosition({ x: 0, y: 0 });\n  };\n\n  const applyPhotoEdit = () => {\n    if (editingPhoto) {\n      // In a real app, this would apply the transformations to the image\n      console.log('Applying photo edit:', { photoScale, photoRotation, photoPosition });\n      setShowPhotoEditor(false);\n      setEditingPhoto(null);\n    }\n  };\n\n  const handleAddComment = (postId: string) => {\n    if (!newComment.trim()) return;\n\n    const comment = {\n      id: Date.now().toString(),\n      user: {\n        id: user?.id || '1',\n        username: user?.username || 'user',\n        firstName: user?.firstName || 'User',\n        lastName: user?.lastName || 'Name',\n        avatar: user?.avatar || `https://api.dicebear.com/7.x/avataaars/svg?seed=${user?.username || 'user'}`,\n      },\n      content: newComment,\n      timestamp: new Date(),\n      gifUrl: undefined,\n      replies: [],\n    };\n\n    // Update user posts in state\n    setUserPosts(prevPosts => \n      prevPosts.map(post => \n        post.id === postId \n          ? { ...post, comments: [...post.comments, comment] }\n          : post\n      )\n    );\n\n    // Update mock posts in state if this is a mock post\n    setMockPosts(prevPosts => \n      prevPosts.map(post => \n        post.id === postId \n          ? { ...post, comments: [...post.comments, comment] }\n          : post\n      )\n    );\n\n    // Add comment notification\n    const allPosts = getUserPosts();\n    const post = allPosts.find(p => p.id === postId);\n    if (post && post.user.id !== user?.id) {\n      addCommentNotification(\n        user?.id || '1',\n        user?.username || 'user',\n        user?.avatar || `https://api.dicebear.com/7.x/avataaars/svg?seed=${user?.username}`,\n        postId,\n        comment.id\n      );\n    }\n\n    // Clear form\n    setNewComment('');\n    setShowCommentInput(null);\n  };\n\n  const handleAddReply = (postId: string, commentId: string) => {\n    if (!newReply.trim()) return;\n\n    const reply = {\n      id: Date.now().toString(),\n      user: {\n        id: user?.id || '1',\n        username: user?.username || 'user',\n        firstName: user?.firstName || 'User',\n        lastName: user?.lastName || 'Name',\n        avatar: user?.avatar || `https://api.dicebear.com/7.x/avataaars/svg?seed=${user?.username || 'user'}`,\n      },\n      content: newReply,\n      timestamp: new Date(),\n    };\n\n    // Update user posts in state\n    setUserPosts(prevPosts => \n      prevPosts.map(post => \n        post.id === postId \n          ? {\n              ...post,\n              comments: post.comments.map((comment: any) =>\n                comment.id === commentId\n                  ? { ...comment, replies: [...(comment.replies || []), reply] }\n                  : comment\n              )\n            }\n          : post\n      )\n    );\n\n    // Update mock posts in state if this is a mock post\n    setMockPosts(prevPosts => \n      prevPosts.map(post => \n        post.id === postId \n          ? {\n              ...post,\n              comments: post.comments.map((comment: any) =>\n                comment.id === commentId\n                  ? { ...comment, replies: [...(comment.replies || []), reply] }\n                  : comment\n              )\n            }\n          : post\n      )\n    );\n\n    // Add reply notification\n    const allPosts = getUserPosts();\n    const post = allPosts.find(p => p.id === postId);\n    const comment = post?.comments.find((c: any) => c.id === commentId);\n    if (post && comment && comment.user.id !== user?.id) {\n      addCommentNotification(\n        user?.id || '1',\n        user?.username || 'user',\n        user?.avatar || `https://api.dicebear.com/7.x/avataaars/svg?seed=${user?.username}`,\n        postId,\n        reply.id\n      );\n    }\n\n    // Clear form\n    setNewReply('');\n    setShowReplyInput(null);\n  };\n\n  const handleChangeUsername = async () => {\n    if (!newUsername.trim() || newUsername === user?.username) return;\n    \n    setIsChangingUsername(true);\n    \n    try {\n      // In a real app, this would update the username in the database\n      // For now, we'll simulate the update\n      await new Promise(resolve => setTimeout(resolve, 1000));\n      \n      // Update the user context (this would be done through AuthContext in real app)\n      console.log('Username changed to:', newUsername);\n      \n      // Close modal and reset\n      setShowUsernameModal(false);\n      setNewUsername('');\n      \n      // Show success message\n      alert(`Username successfully changed to @${newUsername}!`);\n      \n    } catch (error) {\n      console.error('Username change failed:', error);\n      alert('Failed to change username. Please try again.');\n    } finally {\n      setIsChangingUsername(false);\n    }\n  };\n\n  // Handle comment reactions\n  const handleCommentReaction = (commentId: string, emoji: string) => {\n    setCommentReactions(prev => {\n      const current = prev[commentId] || {};\n      const newReactions = { ...current };\n      newReactions[emoji] = (newReactions[emoji] || 0) + 1;\n      return { ...prev, [commentId]: newReactions };\n    });\n\n    setUserCommentReactions(prev => {\n      const current = prev[commentId] || [];\n      if (current.includes(emoji)) {\n        // Remove reaction if already exists\n        const newReactions = current.filter(e => e !== emoji);\n        setCommentReactions(prevReactions => {\n          const currentReactions = prevReactions[commentId] || {};\n          const newReactionCounts = { ...currentReactions };\n          newReactionCounts[emoji] = Math.max(0, (newReactionCounts[emoji] || 0) - 1);\n          return { ...prevReactions, [commentId]: newReactionCounts };\n        });\n        return { ...prev, [commentId]: newReactions };\n      } else {\n        // Add reaction\n        return { ...prev, [commentId]: [...current, emoji] };\n      }\n    });\n  };\n\n  // Handle profile video upload\n  const handleVideoUpload = (file: File) => {\n    const videoUrl = URL.createObjectURL(file);\n    \n    const newVideo = {\n      type: 'upload' as const,\n      url: videoUrl,\n      name: file.name\n    };\n    \n    setProfileVideo(newVideo);\n    setVideoFile(file);\n    setShowVideoUploadModal(false);\n  };\n\n  // Handle YouTube video URL\n  const handleYoutubeVideo = () => {\n    if (youtubeUrl.trim()) {\n      // Extract video ID from YouTube URL\n      const videoId = extractYoutubeVideoId(youtubeUrl);\n      if (videoId) {\n        setProfileVideo({\n          type: 'youtube',\n          url: `https://www.youtube.com/embed/${videoId}`,\n          name: 'YouTube Video'\n        });\n        setYoutubeUrl('');\n        setShowVideoUploadModal(false);\n      } else {\n        alert('Please enter a valid YouTube URL');\n      }\n    }\n  };\n\n  // Extract YouTube video ID from URL\n  const extractYoutubeVideoId = (url: string) => {\n    const regExp = /^.*(youtu.be\\/|v\\/|u\\/\\w\\/|embed\\/|watch\\?v=|&v=)([^#&?]*).*/;\n    const match = url.match(regExp);\n    return (match && match[2].length === 11) ? match[2] : null;\n  };\n\n  // Debug effect for video state\n  useEffect(() => {\n    console.log('Profile video state changed:', profileVideo);\n  }, [profileVideo]);\n\n  const getTextStyle = () => ({\n    color: profileSettings.textColor,\n    fontFamily: profileSettings.customFont || 'inherit',\n    textShadow: profileSettings.textShadow \n      ? `0 0 ${10 * profileSettings.textGlowIntensity}px ${profileSettings.textGlowColor}` \n      : 'none',\n    filter: `drop-shadow(0 0 ${8 * profileSettings.textGlowIntensity}px ${profileSettings.textGlowColor})`,\n  });\n\n  const getNeonBorderStyle = () => ({\n    border: profileSettings.neonBorder ? `2px solid ${profileSettings.borderColor}` : 'none',\n    boxShadow: profileSettings.neonBorder \n      ? `0 0 ${15 * profileSettings.neonGlowIntensity}px ${profileSettings.borderColor}` \n      : 'none',\n  });\n\n  const getBackgroundStyle = () => ({\n    backgroundColor: profileSettings.backgroundColor,\n    backgroundImage: profileSettings.backgroundImage \n      ? `url(${profileSettings.backgroundImage})` \n      : 'none',\n    backgroundSize: 'cover',\n    backgroundPosition: 'center',\n    backgroundRepeat: 'no-repeat',\n  });\n\n  return (\n    <div \n      className=\"min-h-screen relative\"\n      style={getBackgroundStyle()}\n    >\n      <div className=\"max-w-6xl mx-auto px-4 py-8\">\n        {/* Profile Header */}\n        <div className=\"relative mb-8\">\n          <div className=\"flex items-end space-x-6\">\n            {/* Profile Picture */}\n            <div className=\"relative\">\n              <img\n                src={profileSettings.profilePicture || user?.avatar || `https://api.dicebear.com/7.x/avataaars/svg?seed=${user?.username}`}\n                alt={user?.firstName}\n                className=\"w-32 h-32 rounded-full border-4 border-white/20\"\n                style={getNeonBorderStyle()}\n              />\n              {isEditing && (\n                <button\n                  onClick={() => setShowMediaModal(true)}\n                  className=\"absolute bottom-0 right-0 bg-purple-600 text-white rounded-full w-8 h-8 flex items-center justify-center hover:bg-purple-700 transition-colors\"\n                >\n                  ✏️\n                </button>\n              )}\n            </div>\n\n            {/* Profile Info */}\n            <div className=\"flex-1\">\n              <h1 \n                className=\"text-4xl font-bold mb-2\"\n                style={getTextStyle()}\n              >\n                {user?.firstName} {user?.lastName}\n              </h1>\n              <div className=\"flex items-center space-x-2 mb-2\">\n                <p \n                  className=\"text-xl\"\n                  style={{ color: profileSettings.neonAccentColor }}\n                >\n                  @{user?.username}\n                </p>\n                {isEditing && (\n                  <button\n                    onClick={() => {\n                      setNewUsername(user?.username || '');\n                      setShowUsernameModal(true);\n                    }}\n                    className=\"text-white/60 hover:text-white transition-colors text-sm\"\n                    title=\"Change Username\"\n                  >\n                    ✏️\n                  </button>\n                )}\n              </div>\n              {user?.bio && (\n                <p \n                  className=\"text-lg mb-4\"\n                  style={getTextStyle()}\n                >\n                  {user.bio}\n                </p>\n              )}\n              \n              {/* Action Buttons */}\n              <div className=\"flex items-center space-x-4\">\n                <button\n                  onClick={toggleEditMode}\n                  className={`px-6 py-2 rounded-lg transition-colors ${\n                    isEditing \n                      ? 'bg-red-600 hover:bg-red-700 text-white' \n                      : 'bg-purple-600 hover:bg-purple-700 text-white'\n                  }`}\n                >\n                  {isEditing ? 'Exit Edit Mode' : 'Edit Profile'}\n                </button>\n                \n                {isEditing && (\n                  <>\n                    <button\n                      onClick={() => setShowUploadModal(true)}\n                      className=\"btn-primary\"\n                    >\n                      📸 Upload Media\n                    </button>\n                    <button\n                      onClick={() => setShowSettingsModal(true)}\n                      className=\"btn-secondary\"\n                    >\n                      🎨 Customize\n                    </button>\n                  </>\n                )}\n              </div>\n            </div>\n          </div>\n\n          {/* Top 5 Friends Section */}\n          <div className=\"mt-8 mb-6\">\n            <div className=\"flex items-center justify-between mb-4\">\n              <h3 className=\"text-xl font-semibold text-white\" style={getTextStyle()}>\n                👥 Top 5 Friends ({totalFriends})\n              </h3>\n              <button\n                onClick={() => setActiveTab('friends')}\n                className=\"text-purple-400 hover:text-purple-300 transition-colors text-sm\"\n                style={getTextStyle()}\n              >\n                Manage Friends →\n              </button>\n            </div>\n            \n            <div className=\"grid grid-cols-1 md:grid-cols-5 gap-4\">\n              {getUserFriends().slice(0, 5).map((friend) => (\n                <div \n                  key={friend.id} \n                  className=\"text-center group cursor-pointer\"\n                  style={getNeonBorderStyle()}\n                >\n                  <div className=\"relative mb-2\">\n                    <img\n                      src={friend.avatar}\n                      alt={friend.firstName}\n                      className=\"w-16 h-16 rounded-full mx-auto border-2 border-white/20 group-hover:border-purple-400 transition-colors\"\n                    />\n                    <div className={`absolute -bottom-1 -right-1 w-4 h-4 rounded-full border-2 border-white ${\n                      friend.isOnline ? 'bg-green-500' : 'bg-gray-400'\n                    }`}></div>\n                  </div>\n                  <div className=\"text-white font-medium text-sm\" style={getTextStyle()}>\n                    {friend.firstName}\n                  </div>\n                  <div className=\"text-white/60 text-xs\">\n                    {friend.isOnline ? 'Online' : formatTimestamp(friend.lastSeen)}\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n\n          {/* Profile Video Section - Full Screen */}\n          <div className=\"mt-6 mb-6\">\n            <div className=\"bg-gradient-to-r from-purple-900/20 to-blue-900/20 rounded-lg p-4 border border-purple-500/30 w-full\">\n              <div className=\"flex items-center justify-between mb-3\">\n                <h3 className=\"text-lg font-semibold text-white\" style={getTextStyle()}>\n                  🎥 Profile Video\n                </h3>\n                {isEditing && (\n                  <button\n                    onClick={() => setShowVideoUploadModal(true)}\n                    className=\"text-purple-400 hover:text-purple-300 transition-colors text-sm\"\n                  >\n                    ✏️ Change Video\n                  </button>\n                )}\n              </div>\n              \n              <div className=\"relative w-full\">\n                {profileVideo ? (\n                  profileVideo.type === 'youtube' ? (\n                    <iframe\n                      src={profileVideo.url}\n                      className=\"w-full h-96 rounded-lg\"\n                      style={getNeonBorderStyle()}\n                      title=\"Profile Video\"\n                      frameBorder=\"0\"\n                      allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                      allowFullScreen\n                    />\n                  ) : (\n                    <video\n                      key={profileVideo.url}\n                      className=\"w-full h-96 rounded-lg object-cover\"\n                      autoPlay\n                      muted\n                      loop\n                      playsInline\n                      style={getNeonBorderStyle()}\n                      controls\n                    >\n                      <source src={profileVideo.url} type=\"video/mp4\" />\n                      Your browser does not support the video tag.\n                    </video>\n                  )\n                ) : (\n                  <video\n                    className=\"w-full h-96 rounded-lg object-cover\"\n                    autoPlay\n                    muted\n                    loop\n                    playsInline\n                    style={getNeonBorderStyle()}\n                  >\n                    <source \n                      src=\"https://sample-videos.com/zip/10/mp4/SampleVideo_1280x720_1mb.mp4\" \n                      type=\"video/mp4\" \n                    />\n                    Your browser does not support the video tag.\n                  </video>\n                )}\n                \n                {/* Volume Control Overlay - Only for uploaded videos */}\n                {profileVideo && profileVideo.type === 'upload' && (\n                  <div className=\"absolute top-2 right-2\">\n                    <button\n                      onClick={(e) => {\n                        e.preventDefault();\n                        const video = e.currentTarget.parentElement?.previousElementSibling as HTMLVideoElement;\n                        if (video) {\n                          video.muted = !video.muted;\n                          const button = e.currentTarget;\n                          button.innerHTML = video.muted ? '🔇' : '🔊';\n                          button.title = video.muted ? 'Unmute' : 'Mute';\n                        }\n                      }}\n                      className=\"bg-black/50 text-white p-2 rounded-full hover:bg-black/70 transition-colors text-sm\"\n                      title=\"Mute\"\n                    >\n                      🔇\n                    </button>\n                  </div>\n                )}\n                \n                {/* Video Controls Info */}\n                <div className=\"mt-3 text-center\">\n                  <p className=\"text-white/60 text-sm\">\n                    {profileVideo ? \n                      `${profileVideo.type === 'youtube' ? 'YouTube video' : 'Uploaded video'} - ${profileVideo.name || 'Profile Video'}`\n                      : 'Default video - Click Edit Profile to change'\n                    }\n                  </p>\n                </div>\n              </div>\n            </div>\n          </div>\n\n\n        </div>\n\n        {/* Navigation Tabs */}\n                    <div className=\"flex space-x-1 mb-8 bg-white/10 rounded-lg p-1\">\n              {[\n                { id: 'posts', label: '📝 Posts', count: getUserPosts().length },\n                { id: 'media', label: '📸 Media', count: profileMedia.length },\n                { id: 'messages', label: '💬 Messages', count: directMessages.length },\n                { id: 'friends', label: '👥 Friends', count: totalFriends },\n                { id: 'stats', label: '📊 Stats', count: null },\n                { id: 'settings', label: '⚙️ Settings', count: null },\n              ].map((tab) => (\n            <button\n              key={tab.id}\n              onClick={() => setActiveTab(tab.id as any)}\n              className={`flex-1 px-4 py-2 rounded-md transition-colors ${\n                activeTab === tab.id\n                  ? 'bg-purple-600 text-white'\n                  : 'text-white/60 hover:text-white hover:bg-white/10'\n              }`}\n            >\n              {tab.label}\n              {tab.count !== null && (\n                <span className=\"ml-2 bg-white/20 px-2 py-1 rounded-full text-xs\">\n                  {tab.count}\n                </span>\n              )}\n            </button>\n          ))}\n        </div>\n\n        {/* Content Sections */}\n        {activeTab === 'media' && (\n          <div className=\"space-y-6\">\n            {/* Upload Button */}\n            {isEditing && (\n              <div className=\"text-center\">\n                <button\n                  onClick={() => setShowUploadModal(true)}\n                  className=\"btn-primary text-lg px-8 py-4\"\n                >\n                  📸 Upload New Photo or Video\n                </button>\n              </div>\n            )}\n\n            {/* Media Grid */}\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n              {profileMedia.map((media) => (\n                <div \n                  key={media.id} \n                  className=\"card overflow-hidden group\"\n                  style={getNeonBorderStyle()}\n                >\n                  {/* Media Content */}\n                  <div className=\"relative\">\n                    {media.type === 'photo' ? (\n                      <img\n                        src={media.url}\n                        alt={media.caption}\n                        className=\"w-full h-48 object-cover\"\n                      />\n                    ) : (\n                      <video\n                        src={media.url}\n                        className=\"w-full h-48 object-cover\"\n                        controls\n                      />\n                    )}\n                    \n                    {/* Media Actions Overlay */}\n                    {isEditing && (\n                      <div className=\"absolute inset-0 bg-black/50 opacity-0 group-hover:opacity-100 transition-opacity flex items-center justify-center space-x-2\">\n                        <button\n                          onClick={() => handlePhotoEdit(media)}\n                          className=\"bg-blue-600 text-white p-2 rounded-full hover:bg-blue-700\"\n                          title=\"Edit Photo\"\n                        >\n                          ✏️\n                        </button>\n                        <button\n                          onClick={() => setProfilePicture(media.id)}\n                          className=\"bg-green-600 text-white p-2 rounded-full hover:bg-green-700\"\n                          title=\"Set as Profile Picture\"\n                        >\n                          👤\n                        </button>\n                        <button\n                          onClick={() => setBackgroundImage(media.id)}\n                          className=\"bg-purple-600 text-white p-2 rounded-full hover:bg-purple-700\"\n                          title=\"Set as Background\"\n                        >\n                          🎨\n                        </button>\n                        <button\n                          onClick={() => handleShareToFeed(media.id)}\n                          className=\"bg-orange-600 text-white p-2 rounded-full hover:bg-orange-700\"\n                          title=\"Share to Feed\"\n                        >\n                          📤\n                        </button>\n                        <button\n                          onClick={() => deleteMedia(media.id)}\n                          className=\"bg-red-600 text-white p-2 rounded-full hover:bg-red-700\"\n                          title=\"Delete\"\n                        >\n                          🗑️\n                        </button>\n                      </div>\n                    )}\n                  </div>\n\n                  {/* Media Info */}\n                  <div className=\"p-4\">\n                    {media.caption && (\n                      <p \n                        className=\"text-white/80 mb-2\"\n                        style={getTextStyle()}\n                      >\n                        {media.caption}\n                      </p>\n                    )}\n                    <div className=\"flex items-center justify-between text-sm text-white/60\">\n                      <span>{media.type === 'photo' ? '📸' : '🎥'} {media.type}</span>\n                      <span>❤️ {media.likes} 💬 {media.comments}</span>\n                    </div>\n                    <div className=\"text-xs text-white/40 mt-2\">\n                      {new Date(media.timestamp).toLocaleDateString()}\n                    </div>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n        )}\n\n        {activeTab === 'posts' && (\n          <div className=\"space-y-6\">\n            {/* Create Post Section */}\n            <div className=\"card\">\n              <div className=\"flex items-start space-x-3 mb-4\">\n                <img\n                  src={profileSettings.profilePicture || user?.avatar || `https://api.dicebear.com/7.x/avataaars/svg?seed=${user?.username}`}\n                  alt={user?.firstName}\n                  className=\"w-10 h-10 rounded-full\"\n                />\n                <div className=\"flex-1\">\n                  <textarea\n                    value={newPost}\n                    onChange={(e) => setNewPost(e.target.value)}\n                    placeholder=\"What's on your mind?\"\n                    className=\"w-full bg-transparent border-none text-white placeholder-white/60 resize-none focus:outline-none text-lg\"\n                    rows={3}\n                  />\n                  \n                  {/* Selected GIF Preview */}\n                  {selectedGif && (\n                    <div className=\"mt-3 relative\">\n                      <img \n                        src={selectedGif} \n                        alt=\"Selected GIF\" \n                        className=\"max-w-full max-h-48 rounded-lg\"\n                      />\n                      <button\n                        onClick={() => setSelectedGif('')}\n                        className=\"absolute top-2 right-2 bg-red-500 text-white rounded-full w-6 h-6 flex items-center justify-center text-sm hover:bg-red-600\"\n                      >\n                        ×\n                      </button>\n                    </div>\n                  )}\n                </div>\n              </div>\n\n              {/* Emoji and GIF Buttons */}\n              <div className=\"flex items-center justify-between mb-4\">\n                <div className=\"flex items-center space-x-2\">\n                  <button\n                    onClick={() => setShowEmojiPicker(!showEmojiPicker)}\n                    className=\"text-2xl hover:scale-110 transition-transform\"\n                    title=\"Add emoji\"\n                  >\n                    😀\n                  </button>\n                  <button\n                    onClick={() => setShowGifPicker(!showGifPicker)}\n                    className=\"text-2xl hover:scale-110 transition-transform\"\n                    title=\"Add GIF\"\n                  >\n                    🎬\n                  </button>\n                </div>\n                \n                <button\n                  onClick={createPost}\n                  disabled={!newPost.trim() && !selectedGif}\n                  className=\"btn-primary disabled:opacity-50 disabled:cursor-not-allowed\"\n                >\n                  Post\n                </button>\n              </div>\n\n              {/* Emoji Picker */}\n              {showEmojiPicker && (\n                <div className=\"mb-4\">\n                  <EmojiPicker\n                    isOpen={showEmojiPicker}\n                    onClose={() => setShowEmojiPicker(false)}\n                    onSelectEmoji={handleEmojiSelect}\n                  />\n                </div>\n              )}\n\n              {/* GIF Picker */}\n              {showGifPicker && (\n                <div className=\"mb-4\">\n                  <GifPicker\n                    isOpen={showGifPicker}\n                    onClose={() => setShowGifPicker(false)}\n                    onSelectGif={handleGifSelect}\n                  />\n                </div>\n              )}\n            </div>\n\n            {/* User's Posts from Feed */}\n            <div className=\"space-y-6\">\n              {getUserPosts().map((post) => (\n                <div \n                  key={post.id} \n                  id={`post-${post.id}`}\n                  className=\"card overflow-hidden\"\n                  style={getNeonBorderStyle()}\n                >\n                  {/* Post Header */}\n                  <div className=\"flex items-center space-x-3 p-4 border-b border-white/20\">\n                    <img\n                      src={post.user.avatar || `https://api.dicebear.com/7.x/avataaars/svg?seed=${post.user.username}`}\n                      alt={post.user.firstName}\n                      className=\"w-10 h-10 rounded-full\"\n                    />\n                    <div className=\"flex-1\">\n                      <div className=\"font-semibold text-white\" style={getTextStyle()}>\n                        {post.user.firstName} {post.user.lastName}\n                      </div>\n                      <div className=\"text-white/60 text-sm\">\n                        @{post.user.username} • {formatTimestamp(post.timestamp)}\n                      </div>\n                    </div>\n                    {isEditing && (\n                      <button\n                        onClick={() => deletePost(post.id)}\n                        className=\"text-red-400 hover:text-red-300 transition-colors\"\n                        title=\"Delete Post\"\n                      >\n                        🗑️\n                      </button>\n                    )}\n                  </div>\n\n                  {/* Post Content */}\n                  <div className=\"p-4\">\n                    <p className=\"text-white text-lg mb-4\" style={getTextStyle()}>\n                      {post.content}\n                    </p>\n                    \n                    {/* Post Media */}\n                    {post.gifUrl && (\n                      <div className=\"mb-4\">\n                        <img \n                          src={post.gifUrl} \n                          alt=\"Post GIF\" \n                          className=\"max-w-full max-h-96 rounded-lg\"\n                        />\n                      </div>\n                    )}\n                  </div>\n\n                  {/* Post Stats */}\n                  <div className=\"flex items-center justify-between text-white/60 text-sm px-4 pb-4\">\n                    <span>❤️ {post.likes} likes</span>\n                    <span>💬 {post.comments.length} comments</span>\n                  </div>\n\n                  {/* Action Buttons */}\n                  <div className=\"flex items-center justify-between border-t border-white/20 pt-4 px-4 pb-4\">\n                    <div className=\"flex items-center space-x-6\">\n                      <button className=\"text-lg hover:scale-110 transition-transform\">❤️</button>\n                      <button className=\"text-lg hover:scale-110 transition-transform\">😂</button>\n                      <button className=\"text-lg hover:scale-110 transition-transform\">🔥</button>\n                    </div>\n                    <button \n                      onClick={() => setShowCommentInput(showCommentInput === post.id ? null : post.id)}\n                      className=\"text-white/60 hover:text-white transition-colors\"\n                    >\n                      💬 Comment\n                    </button>\n                  </div>\n\n                  {/* Add Comment Section */}\n                  {showCommentInput === post.id && (\n                    <div className=\"border-t border-white/20 p-4 bg-white/5\">\n                      <div className=\"flex items-start space-x-3\">\n                        <img\n                          src={profileSettings.profilePicture || user?.avatar || `https://api.dicebear.com/7.x/avataaars/svg?seed=${user?.username}`}\n                          alt={user?.firstName}\n                          className=\"w-8 h-8 rounded-full flex-shrink-0\"\n                        />\n                        <div className=\"flex-1\">\n                          <textarea\n                            value={newComment}\n                            onChange={(e) => setNewComment(e.target.value)}\n                            placeholder=\"Write a comment...\"\n                            className=\"w-full bg-white/10 border border-white/20 rounded-lg px-3 py-2 text-white placeholder-white/40 focus:outline-none focus:ring-2 focus:ring-purple-500 resize-none\"\n                            rows={2}\n                          />\n                          <div className=\"flex items-center justify-between mt-2\">\n                            <div className=\"flex items-center space-x-2\">\n                              <button className=\"text-2xl hover:scale-110 transition-transform\">😀</button>\n                              <button className=\"text-2xl hover:scale-110 transition-transform\">🎬</button>\n                            </div>\n                            <div className=\"flex space-x-2\">\n                              <button\n                                onClick={() => setShowCommentInput(null)}\n                                className=\"px-3 py-1 text-white/60 hover:text-white transition-colors\"\n                              >\n                                Cancel\n                              </button>\n                              <button\n                                onClick={() => handleAddComment(post.id)}\n                                disabled={!newComment.trim()}\n                                className=\"btn-primary disabled:opacity-50 disabled:cursor-not-allowed px-4 py-1\"\n                              >\n                                Post\n                              </button>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  )}\n\n                  {/* Comments Section */}\n                  {post.comments.length > 0 && (\n                    <div className=\"border-t border-white/20 p-4 bg-white/5\">\n                      <h4 className=\"text-white/80 font-medium mb-3\">Comments</h4>\n                      <div className=\"space-y-4\">\n                        {post.comments.map((comment: any) => (\n                          <div key={comment.id} className=\"space-y-3\">\n                            {/* Main Comment */}\n                            <div className=\"flex items-start space-x-3\">\n                              <img\n                                src={comment.user.avatar || `https://api.dicebear.com/7.x/avataaars/svg?seed=${comment.user.username}`}\n                                alt={comment.user.firstName}\n                                className=\"w-8 h-8 rounded-full flex-shrink-0\"\n                              />\n                              <div className=\"flex-1\">\n                                <div className=\"bg-white/10 rounded-lg p-3\">\n                                  <div className=\"flex items-center space-x-2 mb-1\">\n                                    <span className=\"font-semibold text-white text-sm\">\n                                      {comment.user.firstName} {comment.user.lastName}\n                                    </span>\n                                    <span className=\"text-white/40 text-xs\">\n                                      {formatTimestamp(comment.timestamp)}\n                                    </span>\n                                  </div>\n                                  <p className=\"text-white/80 text-sm\">{comment.content}</p>\n                                  {comment.gifUrl && (\n                                    <div className=\"mt-2\">\n                                      <img \n                                        src={comment.gifUrl} \n                                        alt=\"Comment GIF\" \n                                        className=\"max-h-32 rounded\"\n                                      />\n                                    </div>\n                                  )}\n                                  \n                                  {/* Comment Reactions */}\n                                  <div className=\"flex items-center space-x-2 mt-2\">\n                                    <button\n                                      onClick={() => handleCommentReaction(comment.id, '❤️')}\n                                      className={`text-sm px-2 py-1 rounded-full transition-colors ${\n                                        userCommentReactions[comment.id]?.includes('❤️') \n                                          ? 'bg-red-500 text-white' \n                                          : 'bg-white/10 text-white/80 hover:bg-white/20'\n                                      }`}\n                                    >\n                                      ❤️ {commentReactions[comment.id]?.['❤️'] || 0}\n                                    </button>\n                                    <button\n                                      onClick={() => handleCommentReaction(comment.id, '👍')}\n                                      className={`text-sm px-2 py-1 rounded-full transition-colors ${\n                                        userCommentReactions[comment.id]?.includes('👍') \n                                          ? 'bg-blue-500 text-white' \n                                          : 'bg-white/10 text-white/80 hover:bg-white/20'\n                                      }`}\n                                    >\n                                      👍 {commentReactions[comment.id]?.['👍'] || 0}\n                                    </button>\n                                    <button\n                                      onClick={() => handleCommentReaction(comment.id, '😂')}\n                                      className={`text-sm px-2 py-1 rounded-full transition-colors ${\n                                        userCommentReactions[comment.id]?.includes('😂') \n                                          ? 'bg-yellow-500 text-white' \n                                          : 'bg-white/10 text-white/80 hover:bg-white/20'\n                                      }`}\n                                    >\n                                      😂 {commentReactions[comment.id]?.['😂'] || 0}\n                                    </button>\n                                    <button\n                                      onClick={() => handleCommentReaction(comment.id, '🔥')}\n                                      className={`text-sm px-2 py-1 rounded-full transition-colors ${\n                                        userCommentReactions[comment.id]?.includes('🔥') \n                                          ? 'bg-orange-500 text-white' \n                                          : 'bg-white/10 text-white/80 hover:bg-white/20'\n                                      }`}\n                                    >\n                                      🔥 {commentReactions[comment.id]?.['🔥'] || 0}\n                                    </button>\n                                  </div>\n                                </div>\n                                \n                                {/* Reply Button */}\n                                <button\n                                  onClick={() => setShowReplyInput(showReplyInput === comment.id ? null : comment.id)}\n                                  className=\"text-white/60 hover:text-white text-xs mt-1 ml-3\"\n                                >\n                                  💬 Reply\n                                </button>\n\n                                {/* Add Reply Section */}\n                                {showReplyInput === comment.id && (\n                                  <div className=\"mt-3 ml-3\">\n                                    <div className=\"flex items-start space-x-3\">\n                                      <img\n                                        src={profileSettings.profilePicture || user?.avatar || `https://api.dicebear.com/7.x/avataaars/svg?seed=${user?.username}`}\n                                        alt={user?.firstName}\n                                        className=\"w-6 h-6 rounded-full flex-shrink-0\"\n                                      />\n                                      <div className=\"flex-1\">\n                                        <textarea\n                                          value={newReply}\n                                          onChange={(e) => setNewReply(e.target.value)}\n                                          placeholder={`Reply to ${comment.user.firstName}...`}\n                                          className=\"w-full bg-white/10 border border-white/20 rounded-lg px-3 py-2 text-white placeholder-white/40 focus:outline-none focus:ring-2 focus:ring-purple-500 resize-none text-sm\"\n                                          rows={2}\n                                        />\n                                        \n                                        {/* Emoji and GIF Buttons for Reply */}\n                                        <div className=\"flex items-center space-x-2 mt-2\">\n                                          <button\n                                            onClick={() => setShowEmojiPicker(!showEmojiPicker)}\n                                            className=\"text-lg hover:scale-110 transition-transform\"\n                                            title=\"Add emoji\"\n                                          >\n                                            😀\n                                          </button>\n                                          <button\n                                            onClick={() => setShowGifPicker(!showGifPicker)}\n                                            className=\"text-lg hover:scale-110 transition-transform\"\n                                            title=\"Add GIF\"\n                                          >\n                                            🎬\n                                          </button>\n                                        </div>\n\n                                        {/* Emoji Picker for Reply */}\n                                        {showEmojiPicker && (\n                                          <div className=\"mt-2\">\n                                            <EmojiPicker\n                                              isOpen={showEmojiPicker}\n                                              onClose={() => setShowEmojiPicker(false)}\n                                              onSelectEmoji={(emoji) => setNewReply(prev => prev + emoji)}\n                                            />\n                                          </div>\n                                        )}\n\n                                        {/* GIF Picker for Reply */}\n                                        {showGifPicker && (\n                                          <div className=\"mt-2\">\n                                            <GifPicker\n                                              isOpen={showGifPicker}\n                                              onClose={() => setShowGifPicker(false)}\n                                              onSelectGif={(gif) => setNewReply(prev => prev + ` [GIF: ${gif.url}]`)}\n                                            />\n                                          </div>\n                                        )}\n\n                                        <div className=\"flex space-x-2 mt-2\">\n                                          <button\n                                            onClick={() => setShowReplyInput(null)}\n                                            className=\"px-3 py-1 text-white/60 hover:text-white transition-colors text-xs\"\n                                          >\n                                            Cancel\n                                          </button>\n                                          <button\n                                            onClick={() => handleAddReply(post.id, comment.id)}\n                                            disabled={!newReply.trim()}\n                                            className=\"btn-primary disabled:opacity-50 disabled:cursor-not-allowed px-3 py-1 text-xs\"\n                                          >\n                                            Reply\n                                          </button>\n                                        </div>\n                                      </div>\n                                    </div>\n                                  </div>\n                                )}\n\n                                {/* Replies */}\n                                {comment.replies && comment.replies.length > 0 && (\n                                  <div className=\"ml-6 mt-3 space-y-2\">\n                                    {comment.replies.map((reply: any) => (\n                                      <div key={reply.id} className=\"flex items-start space-x-3\">\n                                        <img\n                                          src={reply.user.avatar || `https://api.dicebear.com/7.x/avataaars/svg?seed=${reply.user.username}`}\n                                          alt={reply.user.firstName}\n                                          className=\"w-6 h-6 rounded-full flex-shrink-0\"\n                                        />\n                                        <div className=\"flex-1\">\n                                          <div className=\"bg-white/5 rounded-lg p-2\">\n                                            <div className=\"flex items-center space-x-2 mb-1\">\n                                              <span className=\"font-semibold text-white text-xs\">\n                                                {reply.user.firstName} {reply.user.lastName}\n                                              </span>\n                                              <span className=\"text-white/40 text-xs\">\n                                                {formatTimestamp(reply.timestamp)}\n                                              </span>\n                                            </div>\n                                            <p className=\"text-white/80 text-xs\">{reply.content}</p>\n                                          </div>\n                                        </div>\n                                      </div>\n                                    ))}\n                                  </div>\n                                )}\n                              </div>\n                            </div>\n                          </div>\n                        ))}\n                      </div>\n                    </div>\n                  )}\n                </div>\n              ))}\n            </div>\n\n            {/* No Posts Message */}\n            {getUserPosts().length === 0 && (\n              <div className=\"text-center py-12\">\n                <div className=\"text-6xl mb-4\">📝</div>\n                <h3 className=\"text-xl font-semibold text-white mb-2\" style={getTextStyle()}>\n                  No Posts Yet\n                </h3>\n                <p className=\"text-white/60 mb-6\">\n                  Start sharing your thoughts and experiences with the community!\n                </p>\n                <button\n                  onClick={() => setActiveTab('posts')}\n                  className=\"btn-primary\"\n                >\n                  Create Your First Post\n                </button>\n              </div>\n            )}\n          </div>\n        )}\n\n        {activeTab === 'messages' && (\n          <div className=\"space-y-6\">\n            {/* Header with Create Buttons */}\n            <div className=\"flex items-center justify-between\">\n              <h3 className=\"text-xl font-semibold text-white\" style={getTextStyle()}>\n                💬 Messages\n              </h3>\n              <div className=\"flex space-x-3\">\n                <button\n                  onClick={() => setShowCreateMessage(true)}\n                  className=\"btn-secondary\"\n                >\n                  ✉️ New Message\n                </button>\n                <button\n                  onClick={() => setShowCreateGroup(true)}\n                  className=\"btn-primary\"\n                >\n                  🆕 Create Group\n                </button>\n              </div>\n            </div>\n\n            {/* Direct Messages */}\n            <div className=\"card\">\n              <h4 className=\"text-lg font-semibold text-white mb-4\" style={getTextStyle()}>\n                👤 Direct Messages\n              </h4>\n              \n              {directMessages.length === 0 ? (\n                <div className=\"text-center py-8\">\n                  <div className=\"text-4xl mb-4\">💬</div>\n                  <p className=\"text-white/60\">No direct messages yet</p>\n                </div>\n              ) : (\n                <div className=\"space-y-4\">\n                  {directMessages.map((dm) => (\n                    <div \n                      key={dm.id} \n                      className={`p-4 rounded-lg cursor-pointer transition-colors ${\n                        selectedDM?.id === dm.id \n                          ? 'bg-purple-500/20 border border-purple-500/50' \n                          : 'bg-white/5 hover:bg-white/10'\n                      }`}\n                      onClick={() => setSelectedDM(dm)}\n                      style={getNeonBorderStyle()}\n                    >\n                      <div className=\"flex items-center space-x-3\">\n                        <div className=\"relative\">\n                          <img\n                            src={dm.user.avatar}\n                            alt={dm.user.firstName}\n                            className=\"w-12 h-12 rounded-full\"\n                          />\n                          {dm.unread && (\n                            <div className=\"absolute -top-1 -right-1 w-4 h-4 bg-red-500 rounded-full flex items-center justify-center\">\n                              <span className=\"text-white text-xs\">!</span>\n                            </div>\n                          )}\n                        </div>\n                        <div className=\"flex-1\">\n                          <div className=\"flex items-center justify-between mb-1\">\n                            <h4 className=\"font-semibold text-white\" style={getTextStyle()}>\n                              {dm.user.firstName} {dm.user.lastName}\n                            </h4>\n                            <span className=\"text-white/40 text-xs\">\n                              {formatTimestamp(dm.timestamp)}\n                            </span>\n                          </div>\n                          <p className=\"text-white/70 text-sm truncate\">\n                            {dm.lastMessage}\n                          </p>\n                          <p className=\"text-white/40 text-xs\">\n                            @{dm.user.username}\n                          </p>\n                        </div>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              )}\n            </div>\n\n            {/* Group Messages */}\n            <div className=\"card\">\n              <h4 className=\"text-lg font-semibold text-white mb-4\" style={getTextStyle()}>\n                👥 Group Messages\n              </h4>\n              \n              {groupMessages.length === 0 ? (\n                <div className=\"text-center py-8\">\n                  <div className=\"text-4xl mb-4\">👥</div>\n                  <p className=\"text-white/60\">No group messages yet</p>\n                </div>\n              ) : (\n                <div className=\"space-y-4\">\n                  {groupMessages.map((group) => (\n                    <div \n                      key={group.id} \n                      className={`p-4 rounded-lg cursor-pointer transition-colors ${\n                        selectedDM?.id === group.id \n                          ? 'bg-purple-500/20 border border-purple-500/50' \n                          : 'bg-white/5 hover:bg-white/10'\n                      }`}\n                      onClick={() => setSelectedDM(group)}\n                      style={getNeonBorderStyle()}\n                    >\n                      <div className=\"flex items-center space-x-3\">\n                        <div className=\"relative\">\n                          <div className=\"w-12 h-12 rounded-full bg-purple-600 flex items-center justify-center text-2xl\">\n                            {group.avatar}\n                          </div>\n                          {group.unread && (\n                            <div className=\"absolute -top-1 -right-1 w-4 h-4 bg-red-500 rounded-full flex items-center justify-center\">\n                              <span className=\"text-white text-xs\">!</span>\n                            </div>\n                          )}\n                        </div>\n                        <div className=\"flex-1\">\n                          <div className=\"flex items-center justify-between mb-1\">\n                            <h4 className=\"font-semibold text-white\" style={getTextStyle()}>\n                              {group.name}\n                            </h4>\n                            <span className=\"text-white/40 text-xs\">\n                              {formatTimestamp(group.timestamp)}\n                            </span>\n                          </div>\n                          <p className=\"text-white/70 text-sm truncate\">\n                            {group.lastMessage}\n                          </p>\n                          <p className=\"text-white/40 text-xs\">\n                            {group.members.length} members\n                          </p>\n                        </div>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              )}\n            </div>\n\n            {/* Selected DM Chat */}\n            {selectedDM && (\n              <div className=\"card\">\n                <div className=\"flex items-center justify-between mb-4\">\n                  <div className=\"flex items-center space-x-3\">\n                    <img\n                      src={selectedDM.user.avatar}\n                      alt={selectedDM.user.firstName}\n                      className=\"w-10 h-10 rounded-full\"\n                    />\n                    <div>\n                      <h4 className=\"font-semibold text-white\" style={getTextStyle()}>\n                        {selectedDM.user.firstName} {selectedDM.user.lastName}\n                      </h4>\n                      <p className=\"text-white/60 text-sm\">@{selectedDM.user.username}</p>\n                    </div>\n                  </div>\n                  <button\n                    onClick={() => setSelectedDM(null)}\n                    className=\"text-white/60 hover:text-white transition-colors\"\n                  >\n                    ✕\n                  </button>\n                </div>\n                \n                <div className=\"border-t border-white/20 pt-4\">\n                  <div className=\"mb-4\">\n                    <p className=\"text-white/80 text-sm bg-white/10 rounded-lg p-3\">\n                      {selectedDM.lastMessage}\n                    </p>\n                    <p className=\"text-white/40 text-xs mt-2 text-right\">\n                      {formatTimestamp(selectedDM.timestamp)}\n                    </p>\n                  </div>\n                  \n                  {/* Media Upload Preview */}\n                  {selectedDM.media && (\n                    <div className=\"mb-4\">\n                      {selectedDM.media.type === 'image' ? (\n                        <img \n                          src={selectedDM.media.url} \n                          alt=\"Shared media\" \n                          className=\"max-h-32 rounded-lg\"\n                        />\n                      ) : selectedDM.media.type === 'video' ? (\n                        <video \n                          src={selectedDM.media.url} \n                          controls \n                          className=\"max-h-32 rounded-lg\"\n                        />\n                      ) : (\n                        <div className=\"bg-white/10 p-3 rounded-lg\">\n                          <span className=\"text-white/80\">📎 {selectedDM.media.name}</span>\n                        </div>\n                      )}\n                    </div>\n                  )}\n                  \n                  {/* Message Input with Media Support */}\n                  <div className=\"space-y-3\">\n                    <div className=\"flex space-x-2\">\n                      <input\n                        type=\"text\"\n                        value={newDM}\n                        onChange={(e) => setNewDM(e.target.value)}\n                        placeholder=\"Type a message...\"\n                        className=\"flex-1 input-field\"\n                      />\n                      <button\n                        onClick={() => setShowDMEmojiPicker(!showDMEmojiPicker)}\n                        className=\"p-2 text-white/60 hover:text-white transition-colors\"\n                        title=\"Add emoji\"\n                      >\n                        😊\n                      </button>\n                      <button\n                        onClick={() => setShowDMGifPicker(!showDMGifPicker)}\n                        className=\"p-2 text-white/60 hover:text-white transition-colors\"\n                        title=\"Add GIF\"\n                      >\n                        🎬\n                      </button>\n                      <button\n                        onClick={() => setShowMediaUpload(true)}\n                        className=\"p-2 text-white/60 hover:text-white transition-colors\"\n                        title=\"Attach media\"\n                      >\n                        📎\n                      </button>\n                    </div>\n                    \n                    {/* Emoji Picker */}\n                    {showDMEmojiPicker && (\n                      <div className=\"bg-white/10 rounded-lg p-3\">\n                        <div className=\"grid grid-cols-8 gap-2\">\n                          {['😊', '😂', '❤️', '🔥', '👍', '🎉', '😎', '🤔', '😢', '😡', '🥳', '🤩', '😴', '🤗', '😍', '😘'].map((emoji) => (\n                            <button\n                              key={emoji}\n                              onClick={() => {\n                                setNewDM(prev => prev + emoji);\n                                setShowDMEmojiPicker(false);\n                              }}\n                              className=\"text-2xl hover:scale-110 transition-transform p-1\"\n                            >\n                              {emoji}\n                            </button>\n                          ))}\n                        </div>\n                      </div>\n                    )}\n                    \n                    {/* GIF Picker */}\n                    {showDMGifPicker && (\n                      <div className=\"bg-white/10 rounded-lg p-3\">\n                        <div className=\"grid grid-cols-3 gap-2\">\n                          {[\n                            'https://media.giphy.com/media/3o7abKhOpu0NwenH3O/giphy.gif',\n                            'https://media.giphy.com/media/26BRv0ThflsHCqDrG/giphy.gif',\n                            'https://media.giphy.com/media/3o7TKoWXm3okO1kgHC/giphy.gif',\n                            'https://media.giphy.com/media/3o7TKDEqg6Er4va8hi/giphy.gif',\n                            'https://media.giphy.com/media/3o7TKDEqg6Er4va8hi/giphy.gif',\n                            'https://media.giphy.com/media/3o7TKDEqg6Er4va8hi/giphy.gif'\n                          ].map((gif, index) => (\n                            <button\n                              key={index}\n                              onClick={() => {\n                                setNewDM(prev => prev + ` [GIF]`);\n                                setShowDMGifPicker(false);\n                              }}\n                              className=\"w-full h-20 bg-gray-700 rounded hover:scale-105 transition-transform\"\n                            >\n                              <img src={gif} alt=\"GIF\" className=\"w-full h-full object-cover rounded\" />\n                            </button>\n                          ))}\n                        </div>\n                      </div>\n                    )}\n                    \n                    <div className=\"flex space-x-2\">\n                      <button\n                        onClick={() => {\n                          if (newDM.trim()) {\n                            // In a real app, this would send the message\n                            console.log('Sending DM to:', selectedDM.user?.username || selectedDM.name, 'Message:', newDM);\n                            setNewDM('');\n                            setShowDMEmojiPicker(false);\n                            setShowDMGifPicker(false);\n                          }\n                        }}\n                        disabled={!newDM.trim()}\n                        className=\"btn-primary disabled:opacity-50 disabled:cursor-not-allowed\"\n                      >\n                        Send\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            )}\n          </div>\n        )}\n\n        {activeTab === 'friends' && (\n          <div className=\"space-y-6\">\n            <div className=\"card\">\n              <h3 className=\"text-xl font-semibold text-white mb-6\" style={getTextStyle()}>\n                👥 Manage Friends List\n              </h3>\n              \n              {/* Current Top 5 Friends */}\n              <div className=\"mb-6\">\n                <h4 className=\"text-lg font-medium mb-4\" style={getTextStyle()}>\n                  Current Top 5 Friends\n                </h4>\n                <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-5 gap-4\">\n                  {getUserFriends().slice(0, 5).map((friend, index) => (\n                    <div key={friend.id} className=\"text-center\">\n                      <div className=\"relative mb-2\">\n                        <div className=\"absolute -top-2 -left-2 bg-purple-600 text-white text-xs rounded-full w-6 h-6 flex items-center justify-center font-bold\">\n                          {index + 1}\n                        </div>\n                        <img\n                          src={friend.avatar}\n                          alt={friend.firstName}\n                          className=\"w-16 h-16 rounded-full mx-auto border-2 border-purple-400\"\n                        />\n                        <div className={`absolute -bottom-1 -right-1 w-4 h-4 rounded-full border-2 border-white ${\n                          friend.isOnline ? 'bg-green-500' : 'bg-gray-400'\n                        }`}></div>\n                      </div>\n                      <div className=\"text-white font-medium text-sm\" style={getTextStyle()}>\n                        {friend.firstName}\n                      </div>\n                      <div className=\"text-white/60 text-xs\">\n                        {friend.isOnline ? 'Online' : 'Offline'}\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n              \n              {/* All Friends */}\n              <div>\n                <h4 className=\"text-lg font-medium mb-4\" style={getTextStyle()}>\n                  All Friends ({getUserFriends().length})\n                </h4>\n                <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n                  {getUserFriends().map((friend) => (\n                    <div \n                      key={friend.id} \n                      className={`p-3 rounded-lg border-2 transition-colors ${\n                        getUserFriends().indexOf(friend) < 5 \n                          ? 'border-purple-400 bg-purple-500/10' \n                          : 'border-white/20 bg-white/5'\n                      }`}\n                    >\n                      <div className=\"flex items-center space-x-3\">\n                        <img\n                          src={friend.avatar}\n                          alt={friend.firstName}\n                          className=\"w-12 h-12 rounded-full\"\n                        />\n                        <div className=\"flex-1\">\n                          <div className=\"font-medium text-white\" style={getTextStyle()}>\n                            {friend.firstName} {friend.lastName}\n                          </div>\n                          <div className=\"text-white/60 text-sm\">\n                            {friend.isOnline ? '🟢 Online' : '⚫ Offline'}\n                          </div>\n                          {getUserFriends().indexOf(friend) < 5 && (\n                            <div className=\"text-purple-400 text-xs font-medium\">\n                              Top 5 Friend\n                            </div>\n                          )}\n                        </div>\n                        <div className=\"flex flex-col space-y-1\">\n                          {getUserFriends().indexOf(friend) >= 5 && (\n                            <button\n                              onClick={() => {\n                                // In a real app, this would promote the friend to top 5\n                                console.log('Promoting friend to top 5:', friend.firstName);\n                              }}\n                              className=\"text-xs bg-purple-600 hover:bg-purple-700 text-white px-2 py-1 rounded transition-colors\"\n                            >\n                              Promote\n                            </button>\n                          )}\n                          {getUserFriends().indexOf(friend) < 5 && (\n                            <button\n                              onClick={() => {\n                                // In a real app, this would demote the friend from top 5\n                                console.log('Demoting friend from top 5:', friend.firstName);\n                              }}\n                              className=\"text-xs bg-gray-600 hover:bg-gray-700 text-white px-2 py-1 rounded transition-colors\"\n                            >\n                              Demote\n                            </button>\n                          )}\n                        </div>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {activeTab === 'stats' && (\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n            {[\n              { label: 'Photos', value: profileStats.totalPhotos, icon: '📸' },\n              { label: 'Videos', value: profileStats.totalVideos, icon: '🎥' },\n              { label: 'Posts', value: getUserPosts().length, icon: '📝' },\n              { label: 'Followers', value: profileStats.followers, icon: '👥' },\n              { label: 'Following', value: profileStats.following, icon: '👤' },\n              { label: 'Profile Views', value: profileStats.profileViews, icon: '👁️' },\n            ].map((stat) => (\n              <div \n                key={stat.label} \n                className=\"card text-center\"\n                style={getNeonBorderStyle()}\n              >\n                <div className=\"text-4xl mb-2\">{stat.icon}</div>\n                <div \n                  className=\"text-2xl font-bold mb-1\"\n                  style={getTextStyle()}\n                >\n                  {stat.value}\n                </div>\n                <div className=\"text-white/60 text-sm\">{stat.label}</div>\n              </div>\n            ))}\n          </div>\n        )}\n\n        {activeTab === 'settings' && (\n          <div className=\"space-y-6\">\n            {/* Username Change Section */}\n            <div className=\"card\">\n              <h3 className=\"text-xl font-semibold text-white mb-6\" style={getTextStyle()}>\n                ✏️ Edit Profile Information\n              </h3>\n              \n              <div className=\"mb-6\">\n                <label className=\"block text-sm font-medium text-white/80 mb-2\">\n                  Change Username\n                </label>\n                <div className=\"flex items-center space-x-4\">\n                  <div className=\"flex-1\">\n                    <input\n                      type=\"text\"\n                      value={newUsername}\n                      onChange={(e) => setNewUsername(e.target.value)}\n                      placeholder=\"Enter new username\"\n                      className=\"input-field w-full\"\n                      maxLength={20}\n                    />\n                    <p className=\"text-white/40 text-xs mt-1\">\n                      Username must be 3-20 characters, letters, numbers, and underscores only\n                    </p>\n                  </div>\n                  <button\n                    onClick={handleChangeUsername}\n                    disabled={!newUsername.trim() || newUsername === user?.username || isChangingUsername}\n                    className=\"btn-primary text-sm disabled:opacity-50 disabled:cursor-not-allowed whitespace-nowrap\"\n                  >\n                    {isChangingUsername ? 'Changing...' : 'Change Username'}\n                  </button>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"card\">\n              <h3 className=\"text-xl font-semibold text-white mb-6\" style={getTextStyle()}>\n                🎨 Customize Your Profile\n              </h3>\n              \n              {/* Color Schemes */}\n              <div className=\"mb-6\">\n                <h4 className=\"text-lg font-medium mb-3\" style={getTextStyle()}>\n                  Color Schemes\n                </h4>\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-3\">\n                  {getPresetColorSchemes().map((scheme) => (\n                    <button\n                      key={scheme.name}\n                      onClick={() => updateProfileSettings(scheme.colors)}\n                      className=\"p-3 rounded-lg border border-white/20 hover:border-white/40 transition-colors text-left\"\n                    >\n                      <div className=\"font-medium text-white mb-2\">{scheme.name}</div>\n                      <div className=\"flex space-x-2\">\n                        {Object.entries(scheme.colors).map(([key, color]) => (\n                          <div\n                            key={key}\n                            className=\"w-4 h-4 rounded border border-white/20\"\n                            style={{ backgroundColor: color as string }}\n                          />\n                        ))}\n                      </div>\n                    </button>\n                  ))}\n                </div>\n              </div>\n\n              {/* Neon Effects */}\n              <div className=\"mb-6\">\n                <h4 className=\"text-lg font-medium mb-3\" style={getTextStyle()}>\n                  Neon Effects\n                </h4>\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-3\">\n                  {getPresetNeonEffects().map((effect) => (\n                    <button\n                      key={effect.name}\n                      onClick={() => updateProfileSettings(effect.settings)}\n                      className=\"p-3 rounded-lg border border-white/20 hover:border-white/40 transition-colors text-left\"\n                    >\n                      <div className=\"font-medium text-white\">{effect.name}</div>\n                    </button>\n                  ))}\n                </div>\n              </div>\n\n              {/* Font Selection */}\n              <div className=\"mb-6\">\n                <h4 className=\"text-lg font-medium mb-3\" style={getTextStyle()}>\n                  Font Selection\n                </h4>\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-3\">\n                  {[\n                    { name: 'Default', value: 'inherit' },\n                    { name: 'Modern Sans', value: 'Inter, system-ui, sans-serif' },\n                    { name: 'Elegant Serif', value: 'Georgia, serif' },\n                    { name: 'Monospace', value: 'JetBrains Mono, monospace' },\n                    { name: 'Handwriting', value: 'Caveat, cursive' },\n                    { name: 'Display', value: 'Playfair Display, serif' },\n                    { name: 'Tech', value: 'Orbitron, sans-serif' },\n                    { name: 'Fancy', value: 'Dancing Script, cursive' },\n                  ].map((font) => (\n                    <button\n                      key={font.name}\n                      onClick={() => updateProfileSettings({ customFont: font.value })}\n                      className={`p-3 rounded-lg border border-white/20 hover:border-white/40 transition-colors text-left ${\n                        profileSettings.customFont === font.value ? 'border-purple-500 bg-purple-500/20' : ''\n                      }`}\n                      style={{ fontFamily: font.value }}\n                    >\n                      <div className=\"font-medium text-white mb-1\">{font.name}</div>\n                      <div className=\"text-white/60 text-sm\">The quick brown fox</div>\n                    </button>\n                  ))}\n                </div>\n              </div>\n\n              {/* Custom Colors */}\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                <div>\n                  <label className=\"block text-sm font-medium text-white/80 mb-2\">\n                    Text Color\n                  </label>\n                  <input\n                    type=\"color\"\n                    value={profileSettings.textColor}\n                    onChange={(e) => updateProfileSettings({ textColor: e.target.value })}\n                    className=\"w-full h-10 rounded-lg border border-white/20\"\n                  />\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-white/80 mb-2\">\n                    Glow Color\n                  </label>\n                  <input\n                    type=\"color\"\n                    value={profileSettings.textGlowColor}\n                    onChange={(e) => updateProfileSettings({ textGlowColor: e.target.value })}\n                    className=\"w-full h-10 rounded-lg border border-white/20\"\n                  />\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-white/80 mb-2\">\n                    Background Color\n                  </label>\n                  <input\n                    type=\"color\"\n                    value={profileSettings.backgroundColor}\n                    onChange={(e) => updateProfileSettings({ backgroundColor: e.target.value })}\n                    className=\"w-full h-10 rounded-lg border border-white/20\"\n                  />\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-white/80 mb-2\">\n                    Neon Accent\n                  </label>\n                  <input\n                    type=\"color\"\n                    value={profileSettings.neonAccentColor}\n                    onChange={(e) => updateProfileSettings({ neonAccentColor: e.target.value })}\n                    className=\"w-full h-10 rounded-lg border border-white/20\"\n                  />\n                </div>\n              </div>\n\n              {/* Effect Intensity Sliders */}\n              <div className=\"space-y-4 mt-6\">\n                <div>\n                  <label className=\"block text-sm font-medium text-white/80 mb-2\">\n                    Text Glow Intensity: {profileSettings.textGlowIntensity.toFixed(1)}\n                  </label>\n                  <input\n                    type=\"range\"\n                    min=\"0\"\n                    max=\"1\"\n                    step=\"0.1\"\n                    value={profileSettings.textGlowIntensity}\n                    onChange={(e) => updateProfileSettings({ textGlowIntensity: parseFloat(e.target.value) })}\n                    className=\"w-full\"\n                  />\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-white/80 mb-2\">\n                    Neon Glow Intensity: {profileSettings.neonGlowIntensity.toFixed(1)}\n                  </label>\n                  <input\n                    type=\"range\"\n                    min=\"0\"\n                    max=\"1\"\n                    step=\"0.1\"\n                    value={profileSettings.neonGlowIntensity}\n                    onChange={(e) => updateProfileSettings({ neonGlowIntensity: parseFloat(e.target.value) })}\n                    className=\"w-full\"\n                  />\n                </div>\n              </div>\n\n              {/* Toggle Options */}\n              <div className=\"flex items-center space-x-6 mt-6\">\n                <label className=\"flex items-center space-x-2\">\n                  <input\n                    type=\"checkbox\"\n                    checked={profileSettings.textShadow}\n                    onChange={(e) => updateProfileSettings({ textShadow: e.target.checked })}\n                    className=\"rounded\"\n                  />\n                  <span className=\"text-white/80\">Text Shadow</span>\n                </label>\n                <label className=\"flex items-center space-x-2\">\n                  <input\n                    type=\"checkbox\"\n                    checked={profileSettings.neonBorder}\n                    onChange={(e) => updateProfileSettings({ neonBorder: e.target.checked })}\n                    className=\"rounded\"\n                  />\n                  <span className=\"text-white/80\">Neon Border</span>\n                </label>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n\n      {/* Media Upload Component */}\n      <MediaUpload\n        isOpen={showUploadModal}\n        onUpload={uploadMedia}\n        onCancel={() => setShowUploadModal(false)}\n      />\n\n      {/* Media Selection Modal */}\n      {showMediaModal && (\n        <div className=\"fixed inset-0 bg-black/50 backdrop-blur-sm flex items-center justify-center z-50\">\n          <div className=\"card max-w-4xl w-full mx-4 max-h-[90vh] overflow-y-auto\">\n            <h3 className=\"text-xl font-semibold text-white mb-6\">Select Media</h3>\n            \n            <div className=\"grid grid-cols-2 md:grid-cols-3 gap-4\">\n              {profileMedia.filter(m => m.type === 'photo').map((media) => (\n                <div \n                  key={media.id} \n                  className=\"relative cursor-pointer group\"\n                  onClick={() => setSelectedMedia(media)}\n                >\n                  <img\n                    src={media.url}\n                    alt={media.caption}\n                    className=\"w-full h-32 object-cover rounded-lg\"\n                  />\n                  <div className=\"absolute inset-0 bg-black/50 opacity-0 group-hover:opacity-100 transition-opacity rounded-lg flex items-center justify-center\">\n                    <span className=\"text-white text-sm\">Click to select</span>\n                  </div>\n                </div>\n              ))}\n            </div>\n\n            {selectedMedia && (\n              <div className=\"mt-6 p-4 bg-white/10 rounded-lg\">\n                <h4 className=\"text-lg font-medium text-white mb-4\">Set as:</h4>\n                <div className=\"flex space-x-3\">\n                  <button\n                    onClick={() => {\n                      setProfilePicture(selectedMedia.id);\n                      setShowMediaModal(false);\n                      setSelectedMedia(null);\n                    }}\n                    className=\"btn-primary\"\n                  >\n                    Profile Picture\n                  </button>\n\n                  <button\n                    onClick={() => {\n                      setBackgroundImage(selectedMedia.id);\n                      setShowMediaModal(false);\n                      setSelectedMedia(null);\n                    }}\n                    className=\"btn-secondary\"\n                  >\n                    Background\n                  </button>\n                </div>\n              </div>\n            )}\n\n            <div className=\"mt-6 text-center\">\n              <button\n                onClick={() => {\n                  setShowMediaModal(false);\n                  setSelectedMedia(null);\n                }}\n                className=\"btn-secondary\"\n              >\n                Close\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Photo Editor Modal */}\n      {showPhotoEditor && editingPhoto && (\n        <div className=\"fixed inset-0 bg-black/50 backdrop-blur-sm flex items-center justify-center z-50\">\n          <div className=\"card max-w-4xl w-full mx-4 max-h-[90vh] overflow-y-auto\">\n            <h3 className=\"text-xl font-semibold text-white mb-6\">✏️ Edit Photo</h3>\n            \n            <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n              {/* Photo Preview */}\n              <div className=\"relative bg-black/20 rounded-lg p-4\">\n                <div className=\"relative overflow-hidden rounded-lg\" style={{ height: '300px' }}>\n                  <img\n                    src={editingPhoto.url}\n                    alt=\"Editing\"\n                    className=\"w-full h-full object-cover\"\n                    style={{\n                      transform: `scale(${photoScale}) rotate(${photoRotation}deg) translate(${photoPosition.x}px, ${photoPosition.y}px)`,\n                      transition: 'transform 0.3s ease',\n                    }}\n                  />\n                </div>\n                <div className=\"text-center mt-4 text-white/60 text-sm\">\n                  Photo Preview\n                </div>\n              </div>\n\n              {/* Controls */}\n              <div className=\"space-y-6\">\n                {/* Scale Control */}\n                <div>\n                  <label className=\"block text-sm font-medium text-white/80 mb-2\">\n                    Scale: {photoScale.toFixed(2)}x\n                  </label>\n                  <input\n                    type=\"range\"\n                    min=\"0.5\"\n                    max=\"3\"\n                    step=\"0.1\"\n                    value={photoScale}\n                    onChange={(e) => setPhotoScale(parseFloat(e.target.value))}\n                    className=\"w-full\"\n                  />\n                  <div className=\"flex justify-between text-xs text-white/40 mt-1\">\n                    <span>0.5x</span>\n                    <span>1x</span>\n                    <span>2x</span>\n                    <span>3x</span>\n                  </div>\n                </div>\n\n                {/* Rotation Control */}\n                <div>\n                  <label className=\"block text-sm font-medium text-white/80 mb-2\">\n                    Rotation: {photoRotation}°\n                  </label>\n                  <input\n                    type=\"range\"\n                    min=\"-180\"\n                    max=\"180\"\n                    step=\"5\"\n                    value={photoRotation}\n                    onChange={(e) => setPhotoRotation(parseInt(e.target.value))}\n                    className=\"w-full\"\n                  />\n                  <div className=\"flex justify-between text-xs text-white/40 mt-1\">\n                    <span>-180°</span>\n                    <span>0°</span>\n                    <span>180°</span>\n                  </div>\n                </div>\n\n                {/* Position Controls */}\n                <div>\n                  <label className=\"block text-sm font-medium text-white/80 mb-2\">\n                    Position\n                  </label>\n                  <div className=\"grid grid-cols-2 gap-4\">\n                    <div>\n                      <label className=\"block text-xs text-white/60 mb-1\">X: {photoPosition.x}px</label>\n                      <input\n                        type=\"range\"\n                        min=\"-100\"\n                        max=\"100\"\n                        step=\"5\"\n                        value={photoPosition.x}\n                        onChange={(e) => setPhotoPosition(prev => ({ ...prev, x: parseInt(e.target.value) }))}\n                        className=\"w-full\"\n                      />\n                    </div>\n                    <div>\n                      <label className=\"block text-xs text-white/60 mb-1\">Y: {photoPosition.y}px</label>\n                      <input\n                        type=\"range\"\n                        min=\"-100\"\n                        max=\"100\"\n                        step=\"5\"\n                        value={photoPosition.y}\n                        onChange={(e) => setPhotoPosition(prev => ({ ...prev, y: parseInt(e.target.value) }))}\n                        className=\"w-full\"\n                      />\n                    </div>\n                  </div>\n                </div>\n\n                {/* Quick Reset Buttons */}\n                <div className=\"flex space-x-2\">\n                  <button\n                    onClick={() => {\n                      setPhotoScale(1);\n                      setPhotoRotation(0);\n                      setPhotoPosition({ x: 0, y: 0 });\n                    }}\n                    className=\"btn-secondary flex-1\"\n                  >\n                    🔄 Reset\n                  </button>\n                  <button\n                    onClick={() => setShowPhotoEditor(false)}\n                    className=\"btn-secondary flex-1\"\n                  >\n                    ❌ Cancel\n                  </button>\n                </div>\n\n                {/* Apply Button */}\n                <button\n                  onClick={applyPhotoEdit}\n                  className=\"btn-primary w-full\"\n                >\n                  ✅ Apply Changes\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Username Change Modal */}\n      {showUsernameModal && (\n        <div className=\"fixed inset-0 bg-black/50 backdrop-blur-sm flex items-center justify-center z-50\">\n          <div className=\"card max-w-md w-full mx-4\">\n            <h3 className=\"text-xl font-semibold text-white mb-6\">✏️ Change Username</h3>\n            \n            <div className=\"space-y-4\">\n              <div>\n                <label className=\"block text-sm font-medium text-white/80 mb-2\">\n                  Current Username\n                </label>\n                <div className=\"bg-white/10 border border-white/20 rounded-lg px-3 py-2 text-white/60\">\n                  @{user?.username}\n                </div>\n              </div>\n              \n              <div>\n                <label className=\"block text-sm font-medium text-white/80 mb-2\">\n                  New Username\n                </label>\n                <input\n                  type=\"text\"\n                  value={newUsername}\n                  onChange={(e) => setNewUsername(e.target.value)}\n                  className=\"w-full input-field\"\n                  placeholder=\"Enter new username\"\n                  maxLength={20}\n                />\n                <p className=\"text-white/40 text-xs mt-1\">\n                  Username must be 3-20 characters, letters, numbers, and underscores only\n                </p>\n              </div>\n            </div>\n            \n            <div className=\"flex space-x-3 mt-6\">\n              <button\n                onClick={() => {\n                  setShowUsernameModal(false);\n                  setNewUsername('');\n                }}\n                className=\"btn-secondary flex-1\"\n                disabled={isChangingUsername}\n              >\n                Cancel\n              </button>\n              <button\n                onClick={handleChangeUsername}\n                disabled={!newUsername.trim() || newUsername === user?.username || isChangingUsername}\n                className=\"btn-primary flex-1 disabled:opacity-50 disabled:cursor-not-allowed\"\n              >\n                {isChangingUsername ? 'Changing...' : 'Change Username'}\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n\n              {/* Create Message Modal */}\n        {showCreateMessage && (\n          <div className=\"fixed inset-0 bg-black/50 backdrop-blur-sm flex items-center justify-center z-50\">\n            <div className=\"card max-w-md w-full mx-4\">\n              <h3 className=\"text-xl font-semibold text-white mb-6\" style={getTextStyle()}>\n                ✉️ Send New Message\n              </h3>\n              \n              <div className=\"space-y-4\">\n                <div>\n                  <label className=\"block text-sm font-medium text-white/80 mb-2\">Select Recipient</label>\n                  <select\n                    value={newMessageRecipient}\n                    onChange={(e) => setNewMessageRecipient(e.target.value)}\n                    className=\"w-full input-field\"\n                  >\n                    <option value=\"\">Choose a friend...</option>\n                    {getUserFriends().map((friend) => (\n                      <option key={friend.id} value={friend.id}>\n                        {friend.firstName} {friend.lastName} (@{friend.username})\n                      </option>\n                    ))}\n                  </select>\n                </div>\n                \n                <div>\n                  <label className=\"block text-sm font-medium text-white/80 mb-2\">Message</label>\n                  \n                  {/* Message Input with Emoji/GIF/Media Buttons */}\n                  <div className=\"space-y-3\">\n                    <div className=\"flex space-x-2\">\n                      <textarea\n                        value={newMessageContent}\n                        onChange={(e) => setNewMessageContent(e.target.value)}\n                        placeholder=\"Type your message...\"\n                        className=\"flex-1 input-field min-h-[100px] resize-none\"\n                        maxLength={500}\n                      />\n                      <div className=\"flex flex-col space-y-2\">\n                        <button\n                          onClick={() => setShowNewMessageEmojiPicker(!showNewMessageEmojiPicker)}\n                          className=\"p-2 text-white/60 hover:text-white transition-colors bg-white/10 rounded\"\n                          title=\"Add emoji\"\n                        >\n                          😊\n                        </button>\n                        <button\n                          onClick={() => setShowNewMessageGifPicker(!showNewMessageGifPicker)}\n                          className=\"p-2 text-white/60 hover:text-white transition-colors bg-white/10 rounded\"\n                          title=\"Add GIF\"\n                        >\n                          🎬\n                        </button>\n                        <button\n                          onClick={() => setShowMediaUpload(true)}\n                          className=\"p-2 text-white/60 hover:text-white transition-colors bg-white/10 rounded\"\n                          title=\"Attach media\"\n                        >\n                          📎\n                        </button>\n                      </div>\n                    </div>\n                    \n                    {/* Character Counter */}\n                    <p className=\"text-white/40 text-xs text-right\">\n                      {newMessageContent.length}/500\n                    </p>\n                    \n                    {/* Emoji Picker */}\n                    {showNewMessageEmojiPicker && (\n                      <div className=\"bg-white/10 rounded-lg p-3\">\n                        <div className=\"grid grid-cols-8 gap-2\">\n                          {['😊', '😂', '❤️', '🔥', '👍', '🎉', '😎', '🤔', '😢', '😡', '🥳', '🤩', '😴', '🤗', '😍', '😘'].map((emoji) => (\n                            <button\n                              key={emoji}\n                              onClick={() => {\n                                setNewMessageContent(prev => prev + emoji);\n                                setShowNewMessageEmojiPicker(false);\n                              }}\n                              className=\"text-2xl hover:scale-110 transition-transform p-1\"\n                            >\n                              {emoji}\n                            </button>\n                          ))}\n                        </div>\n                      </div>\n                    )}\n                    \n                    {/* GIF Picker */}\n                    {showNewMessageGifPicker && (\n                      <div className=\"bg-white/10 rounded-lg p-3\">\n                        <div className=\"grid grid-cols-3 gap-2\">\n                          {[\n                            'https://media.giphy.com/media/3o7abKhOpu0NwenH3O/giphy.gif',\n                            'https://media.giphy.com/media/26BRv0ThflsHCqDrG/giphy.gif',\n                            'https://media.giphy.com/media/3o7TKoWXm3okO1kgHC/giphy.gif',\n                            'https://media.giphy.com/media/3o7TKDEqg6Er4va8hi/giphy.gif',\n                            'https://media.giphy.com/media/3o7TKDEqg6Er4va8hi/giphy.gif',\n                            'https://media.giphy.com/media/3o7TKDEqg6Er4va8hi/giphy.gif'\n                          ].map((gif, index) => (\n                            <button\n                              key={index}\n                              onClick={() => {\n                                setNewMessageContent(prev => prev + ` [GIF]`);\n                                setShowNewMessageGifPicker(false);\n                              }}\n                              className=\"w-full h-20 bg-gray-700 rounded hover:scale-105 transition-transform\"\n                            >\n                              <img src={gif} alt=\"GIF\" className=\"w-full h-full object-cover rounded\" />\n                            </button>\n                          ))}\n                        </div>\n                      </div>\n                    )}\n                  </div>\n                </div>\n                \n                {/* Media Preview */}\n                {newMessageMedia && (\n                  <div className=\"bg-white/10 rounded-lg p-3\">\n                    <div className=\"flex items-center justify-between mb-2\">\n                      <span className=\"text-white/80 text-sm\">Attached Media:</span>\n                      <button\n                        onClick={() => setNewMessageMedia(null)}\n                        className=\"text-white/40 hover:text-white transition-colors\"\n                      >\n                        ✕\n                      </button>\n                    </div>\n                    {newMessageMedia.type === 'image' ? (\n                      <img \n                        src={newMessageMedia.url} \n                        alt=\"Attached image\" \n                        className=\"max-h-32 rounded-lg\"\n                      />\n                    ) : (\n                      <video \n                        src={newMessageMedia.url} \n                        controls \n                        className=\"max-h-32 rounded-lg\"\n                      />\n                    )}\n                    <p className=\"text-white/60 text-xs mt-1\">{newMessageMedia.name}</p>\n                  </div>\n                )}\n              </div>\n              \n              <div className=\"flex space-x-3 mt-6\">\n                <button\n                  onClick={() => {\n                    setShowCreateMessage(false);\n                    setNewMessageRecipient('');\n                    setNewMessageContent('');\n                    setNewMessageMedia(null);\n                    setShowNewMessageEmojiPicker(false);\n                    setShowNewMessageGifPicker(false);\n                  }}\n                  className=\"btn-secondary flex-1\"\n                >\n                  Cancel\n                </button>\n                <button\n                  onClick={() => {\n                    if (newMessageRecipient && (newMessageContent.trim() || newMessageMedia)) {\n                      // In a real app, this would send the message\n                      const recipient = getUserFriends().find(f => f.id === newMessageRecipient);\n                      console.log('Sending message to:', recipient?.firstName, 'Content:', newMessageContent, 'Media:', newMessageMedia);\n                      \n                      // Add to direct messages for demo\n                      const newDM = {\n                        id: `new-${Date.now()}`,\n                        user: {\n                          id: recipient?.id || '',\n                          username: recipient?.username || '',\n                          firstName: recipient?.firstName || '',\n                          lastName: recipient?.lastName || '',\n                          avatar: recipient?.avatar || '',\n                        },\n                        lastMessage: newMessageContent || (newMessageMedia ? `[${newMessageMedia.type === 'image' ? 'Photo' : 'Video'}]` : ''),\n                        timestamp: new Date(),\n                        unread: false,\n                        type: 'direct',\n                        media: newMessageMedia,\n                      };\n                      \n                      setDirectMessages(prev => [newDM, ...prev]);\n                      \n                      setShowCreateMessage(false);\n                      setNewMessageRecipient('');\n                      setNewMessageContent('');\n                      setNewMessageMedia(null);\n                      setShowNewMessageEmojiPicker(false);\n                      setShowNewMessageGifPicker(false);\n                    }\n                  }}\n                  disabled={!newMessageRecipient || (!newMessageContent.trim() && !newMessageMedia)}\n                  className=\"btn-primary flex-1 disabled:opacity-50\"\n                >\n                  Send Message\n                </button>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {/* Create Group Modal */}\n        {showCreateGroup && (\n        <div className=\"fixed inset-0 bg-black/50 backdrop-blur-sm flex items-center justify-center z-50\">\n          <div className=\"card max-w-md w-full mx-4\">\n            <h3 className=\"text-xl font-semibold text-white mb-6\" style={getTextStyle()}>\n              🆕 Create New Group\n            </h3>\n            \n            <div className=\"space-y-4\">\n              <div>\n                <label className=\"block text-sm font-medium text-white/80 mb-2\">Group Name</label>\n                <input\n                  type=\"text\"\n                  value={newGroupName}\n                  onChange={(e) => setNewGroupName(e.target.value)}\n                  placeholder=\"Enter group name\"\n                  className=\"w-full input-field\"\n                />\n              </div>\n              \n              <div>\n                <label className=\"block text-sm font-medium text-white/80 mb-2\">Select Members</label>\n                <div className=\"max-h-40 overflow-y-auto space-y-2\">\n                  {getUserFriends().map((friend) => (\n                    <label key={friend.id} className=\"flex items-center space-x-3 cursor-pointer\">\n                      <input\n                        type=\"checkbox\"\n                        checked={selectedGroupMembers.includes(friend.id)}\n                        onChange={(e) => {\n                          if (e.target.checked) {\n                            setSelectedGroupMembers(prev => [...prev, friend.id]);\n                          } else {\n                            setSelectedGroupMembers(prev => prev.filter(id => id !== friend.id));\n                          }\n                        }}\n                        className=\"rounded\"\n                      />\n                      <img\n                        src={friend.avatar}\n                        alt={friend.firstName}\n                        className=\"w-8 h-8 rounded-full\"\n                      />\n                      <span className=\"text-white text-sm\">\n                        {friend.firstName} {friend.lastName}\n                      </span>\n                    </label>\n                  ))}\n                </div>\n              </div>\n            </div>\n            \n            <div className=\"flex space-x-3 mt-6\">\n              <button\n                onClick={() => {\n                  setShowCreateGroup(false);\n                  setNewGroupName('');\n                  setSelectedGroupMembers([]);\n                }}\n                className=\"btn-secondary flex-1\"\n              >\n                Cancel\n              </button>\n              <button\n                onClick={() => {\n                  if (newGroupName.trim() && selectedGroupMembers.length > 0) {\n                    // In a real app, this would create the group\n                    console.log('Creating group:', newGroupName, 'with members:', selectedGroupMembers);\n                    setShowCreateGroup(false);\n                    setNewGroupName('');\n                    setSelectedGroupMembers([]);\n                  }\n                }}\n                disabled={!newGroupName.trim() || selectedGroupMembers.length === 0}\n                className=\"btn-primary flex-1 disabled:opacity-50\"\n              >\n                Create Group\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Video Upload Modal */}\n      {showVideoUploadModal && (\n        <div className=\"fixed inset-0 bg-black/50 backdrop-blur-sm flex items-center justify-center z-50\">\n          <div className=\"card max-w-md w-full mx-4\">\n            <h3 className=\"text-xl font-semibold text-white mb-6\" style={getTextStyle()}>\n              🎥 Change Profile Video\n            </h3>\n            \n            <div className=\"space-y-6\">\n              {/* Upload Video Section */}\n              <div>\n                <h4 className=\"text-lg font-medium text-white mb-3\">Upload Your Video</h4>\n                <div className=\"border-2 border-dashed border-white/20 rounded-lg p-6 text-center hover:border-purple-400 transition-colors\">\n                  <input\n                    type=\"file\"\n                    accept=\"video/*\"\n                    onChange={(e) => {\n                      const file = e.target.files?.[0];\n                      if (file) {\n                        handleVideoUpload(file);\n                      }\n                    }}\n                    className=\"hidden\"\n                    id=\"video-upload\"\n                  />\n                  <label htmlFor=\"video-upload\" className=\"cursor-pointer\">\n                    <div className=\"text-4xl mb-2\">📁</div>\n                    <div className=\"text-white text-sm mb-2\">Click to upload video</div>\n                    <div className=\"text-white/60 text-xs\">MP4, MOV, AVI up to 50MB</div>\n                  </label>\n                </div>\n              </div>\n\n              {/* YouTube Video Section */}\n              <div>\n                <h4 className=\"text-lg font-medium text-white mb-3\">Or Add YouTube Video</h4>\n                <div className=\"space-y-3\">\n                  <input\n                    type=\"url\"\n                    value={youtubeUrl}\n                    onChange={(e) => setYoutubeUrl(e.target.value)}\n                    placeholder=\"Paste YouTube URL here...\"\n                    className=\"w-full input-field\"\n                  />\n                  <button\n                    onClick={handleYoutubeVideo}\n                    disabled={!youtubeUrl.trim()}\n                    className=\"btn-primary w-full disabled:opacity-50\"\n                  >\n                    Add YouTube Video\n                  </button>\n                </div>\n              </div>\n\n              {/* Current Video Display */}\n              {profileVideo && (\n                <div className=\"bg-white/10 rounded-lg p-4\">\n                  <h4 className=\"text-white font-medium mb-2\">Current Video:</h4>\n                  <div className=\"text-white/80 text-sm\">\n                    {profileVideo.type === 'youtube' ? 'YouTube Video' : profileVideo.name}\n                  </div>\n                  <button\n                    onClick={() => setProfileVideo(null)}\n                    className=\"text-red-400 hover:text-red-300 text-sm mt-2\"\n                  >\n                    Remove Video\n                  </button>\n                </div>\n              )}\n\n              <button\n                onClick={() => setShowVideoUploadModal(false)}\n                className=\"btn-secondary w-full\"\n              >\n                Cancel\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Media Upload Modal for DMs */}\n      {showMediaUpload && (\n        <div className=\"fixed inset-0 bg-black/50 backdrop-blur-sm flex items-center justify-center z-50\">\n          <div className=\"card max-w-md w-full mx-4\">\n            <h3 className=\"text-xl font-semibold text-white mb-4\" style={getTextStyle()}>\n              📎 Attach Media\n            </h3>\n            \n            <div className=\"space-y-4\">\n                              <div className=\"grid grid-cols-2 gap-4\">\n                  <button\n                    onClick={() => {\n                      // In a real app, this would open file picker for images\n                      console.log('Selecting image for new message');\n                      \n                      // Mock image selection for demo\n                      const mockImage = {\n                        type: 'image' as const,\n                        url: 'https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?w=400&h=300&fit=crop',\n                        name: 'profile-photo.jpg'\n                      };\n                      \n                      if (showCreateMessage) {\n                        setNewMessageMedia(mockImage);\n                      } else if (selectedDM) {\n                        // Handle existing DM media\n                        console.log('Adding image to existing DM');\n                      }\n                      \n                      setShowMediaUpload(false);\n                    }}\n                    className=\"p-4 border-2 border-dashed border-white/20 rounded-lg hover:border-purple-400 transition-colors text-center\"\n                  >\n                    <div className=\"text-4xl mb-2\">📸</div>\n                    <div className=\"text-white text-sm\">Photo</div>\n                  </button>\n                  \n                  <button\n                    onClick={() => {\n                      // In a real app, this would open file picker for videos\n                      console.log('Selecting video for new message');\n                      \n                      // Mock video selection for demo\n                      const mockVideo = {\n                        type: 'video' as const,\n                        url: 'https://sample-videos.com/zip/10/mp4/SampleVideo_1280x720_1mb.mp4',\n                        name: 'sample-video.mp4'\n                      };\n                      \n                      if (showCreateMessage) {\n                        setNewMessageMedia(mockVideo);\n                      } else if (selectedDM) {\n                        // Handle existing DM media\n                        console.log('Adding video to existing DM');\n                      }\n                      \n                      setShowMediaUpload(false);\n                    }}\n                    className=\"p-4 border-2 border-dashed border-white/20 rounded-lg hover:border-purple-400 transition-colors text-center\"\n                  >\n                    <div className=\"text-4xl mb-2\">🎥</div>\n                    <div className=\"text-white text-sm\">Video</div>\n                  </button>\n                </div>\n              \n              <button\n                onClick={() => setShowMediaUpload(false)}\n                className=\"btn-secondary w-full\"\n              >\n                Cancel\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Profile;\n","import React, { useState, useContext, useEffect } from 'react';\nimport { useAuth } from '../contexts/AuthContext';\nimport { useProfile } from '../contexts/ProfileContext';\nimport EmojiPicker from './EmojiPicker';\nimport GifPicker from './GifPicker';\n\ninterface Post {\n  id: string;\n  content: string;\n  user: {\n    id: string;\n    firstName: string;\n    lastName: string;\n    avatar: string;\n    username: string;\n  };\n  timestamp: string;\n  likes: number;\n  comments: Comment[];\n  media?: {\n    type: 'image' | 'video';\n    url: string;\n  };\n}\n\ninterface Comment {\n  id: string;\n  content: string;\n  user: {\n    id: string;\n    firstName: string;\n    lastName: string;\n    avatar: string;\n    username: string;\n  };\n  timestamp: string;\n  replies: Reply[];\n}\n\ninterface Reply {\n  id: string;\n  content: string;\n  user: {\n    id: string;\n    firstName: string;\n    lastName: string;\n    avatar: string;\n    username: string;\n  };\n  timestamp: string;\n}\n\ninterface TrendingTopic {\n  id: string;\n  title: string;\n  category: string;\n  engagement: string;\n  trending: boolean;\n}\n\nconst Feed: React.FC = () => {\n  const { user } = useAuth();\n  const { profileSettings } = useProfile();\n  const [posts, setPosts] = useState<Post[]>([]);\n  const [newPost, setNewPost] = useState('');\n  const [showEmojiPicker, setShowEmojiPicker] = useState(false);\n  const [showGifPicker, setShowGifPicker] = useState(false);\n  const [showComments, setShowComments] = useState<{ [key: string]: boolean }>({});\n  const [commentText, setCommentText] = useState<{ [key: string]: string }>({});\n  const [replyText, setReplyText] = useState<{ [key: string]: string }>({});\n  const [showReplyInput, setShowReplyInput] = useState<{ [key: string]: boolean }>({});\n  const [selectedFile, setSelectedFile] = useState<File | null>(null);\n  const [previewUrl, setPreviewUrl] = useState<string | null>(null);\n\n  // Trending topics data\n  const trendingTopics: TrendingTopic[] = [\n    {\n      id: '1',\n      title: 'AI Technology Breakthroughs',\n      category: 'Technology',\n      engagement: '2.5M posts',\n      trending: true\n    },\n    {\n      id: '2',\n      title: 'Climate Change Solutions',\n      category: 'Environment',\n      engagement: '1.8M posts',\n      trending: true\n    },\n    {\n      id: '3',\n      title: 'Space Exploration Updates',\n      category: 'Science',\n      engagement: '1.2M posts',\n      trending: false\n    },\n    {\n      id: '4',\n      title: 'Global Health Initiatives',\n      category: 'Health',\n      engagement: '950K posts',\n      trending: true\n    },\n    {\n      id: '5',\n      title: 'Sustainable Living Tips',\n      category: 'Lifestyle',\n      engagement: '750K posts',\n      trending: false\n    },\n    {\n      id: '6',\n      title: 'Digital Art Revolution',\n      category: 'Art',\n      engagement: '680K posts',\n      trending: true\n    },\n    {\n      id: '7',\n      title: 'Remote Work Trends',\n      category: 'Business',\n      engagement: '520K posts',\n      trending: false\n    },\n    {\n      id: '8',\n      title: 'Mental Health Awareness',\n      category: 'Health',\n      engagement: '480K posts',\n      trending: true\n    }\n  ];\n\n  // Mock posts data\n  const mockPosts: Post[] = [\n    {\n      id: '1',\n      content: 'Just finished an amazing project! 🚀 The team worked incredibly hard and the results are outstanding. #coding #success #teamwork',\n      user: {\n        id: '1',\n        firstName: 'Sarah',\n        lastName: 'Johnson',\n        avatar: 'https://images.unsplash.com/photo-1494790108755-2616b612b786?w=150&h=150&fit=crop&crop=face',\n        username: 'sarah_dev'\n      },\n      timestamp: '2024-01-15T10:30:00Z',\n      likes: 42,\n      comments: [\n        {\n          id: 'c1',\n          content: 'Congratulations! 🎉 This looks amazing!',\n          user: {\n            id: '2',\n            firstName: 'Mike',\n            lastName: 'Chen',\n            avatar: 'https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?w=150&h=150&fit=crop&crop=face',\n            username: 'mike_chen'\n          },\n          timestamp: '2024-01-15T11:00:00Z',\n          replies: []\n        }\n      ]\n    },\n    {\n      id: '2',\n      content: 'Beautiful sunset at the beach today! 🌅 Perfect way to end the week. Sometimes you just need to pause and appreciate the simple moments in life.',\n      user: {\n        id: '2',\n        firstName: 'Mike',\n        lastName: 'Chen',\n        avatar: 'https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?w=150&h=150&fit=crop&crop=face',\n        username: 'mike_chen'\n      },\n      timestamp: '2024-01-15T09:15:00Z',\n      likes: 28,\n      comments: []\n    }\n  ];\n\n  useEffect(() => {\n    setPosts(mockPosts);\n  }, []);\n\n  const handlePostSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    if (!newPost.trim() && !selectedFile) return;\n\n    const newPostObj: Post = {\n      id: Date.now().toString(),\n      content: newPost,\n      user: {\n        id: user?.id || '1',\n        firstName: user?.firstName || 'User',\n        lastName: user?.lastName || 'Name',\n        avatar: user?.avatar || 'https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?w=150&h=150&fit=crop&crop=face',\n        username: user?.username || 'username'\n      },\n      timestamp: new Date().toISOString(),\n      likes: 0,\n      comments: [],\n      media: selectedFile ? {\n        type: selectedFile.type.startsWith('image/') ? 'image' : 'video',\n        url: previewUrl || ''\n      } : undefined\n    };\n\n    setPosts([newPostObj, ...posts]);\n    setNewPost('');\n    setSelectedFile(null);\n    setPreviewUrl(null);\n  };\n\n  const handleLike = (postId: string) => {\n    setPosts(posts.map(post => \n      post.id === postId ? { ...post, likes: post.likes + 1 } : post\n    ));\n  };\n\n  const handleComment = (postId: string) => {\n    const text = commentText[postId];\n    if (!text?.trim()) return;\n\n    const newComment: Comment = {\n      id: Date.now().toString(),\n      content: text,\n      user: {\n        id: user?.id || '1',\n        firstName: user?.firstName || 'User',\n        lastName: user?.lastName || 'Name',\n        avatar: user?.avatar || 'https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?w=150&h=150&fit=crop&crop=face',\n        username: user?.username || 'username'\n      },\n      timestamp: new Date().toISOString(),\n      replies: []\n    };\n\n    setPosts(posts.map(post => \n      post.id === postId \n        ? { ...post, comments: [...post.comments, newComment] }\n        : post\n    ));\n\n    setCommentText({ ...commentText, [postId]: '' });\n  };\n\n  const handleReply = (postId: string, commentId: string) => {\n    const text = replyText[commentId];\n    if (!text?.trim()) return;\n\n    const newReply: Reply = {\n      id: Date.now().toString(),\n      content: text,\n      user: {\n        id: user?.id || '1',\n        firstName: user?.firstName || 'User',\n        lastName: user?.lastName || 'Name',\n        avatar: user?.avatar || 'https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?w=150&h=150&fit=crop&crop=face',\n        username: user?.username || 'username'\n      },\n      timestamp: new Date().toISOString()\n    };\n\n    setPosts(posts.map(post => \n      post.id === postId \n        ? {\n            ...post,\n            comments: post.comments.map(comment =>\n              comment.id === commentId\n                ? { ...comment, replies: [...comment.replies, newReply] }\n                : comment\n            )\n          }\n        : post\n    ));\n\n    setReplyText({ ...replyText, [commentId]: '' });\n    setShowReplyInput({ ...showReplyInput, [commentId]: false });\n  };\n\n  const handleEmojiSelect = (emoji: string) => {\n    setNewPost(prev => prev + emoji);\n    setShowEmojiPicker(false);\n  };\n\n  const handleGifSelect = (gifUrl: string) => {\n    setNewPost(prev => prev + ` [GIF: ${gifUrl}]`);\n    setShowGifPicker(false);\n  };\n\n  const handleFileSelect = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const file = e.target.files?.[0];\n    if (file) {\n      setSelectedFile(file);\n      const url = URL.createObjectURL(file);\n      setPreviewUrl(url);\n    }\n  };\n\n  const formatTimestamp = (timestamp: string) => {\n    const date = new Date(timestamp);\n    const now = new Date();\n    const diffInMinutes = Math.floor((now.getTime() - date.getTime()) / (1000 * 60));\n    \n    if (diffInMinutes < 1) return 'Just now';\n    if (diffInMinutes < 60) return `${diffInMinutes}m ago`;\n    if (diffInMinutes < 1440) return `${Math.floor(diffInMinutes / 60)}h ago`;\n    return date.toLocaleDateString();\n  };\n\n  const toggleComments = (postId: string) => {\n    setShowComments(prev => ({\n      ...prev,\n      [postId]: !prev[postId]\n    }));\n  };\n\n  return (\n    <div className=\"max-w-7xl mx-auto flex gap-8 p-6\">\n      {/* Left Sidebar - Trending Topics */}\n      <div className=\"w-80 flex-shrink-0\">\n        <div className=\"bg-gray-800 rounded-lg p-6 sticky top-6\">\n          <h2 className=\"text-xl font-bold text-white mb-4\">🔥 Trending Now</h2>\n          <div className=\"space-y-4\">\n            {trendingTopics.map((topic) => (\n              <div key={topic.id} className=\"border-b border-gray-700 pb-3 last:border-b-0\">\n                <div className=\"flex items-start justify-between\">\n                  <div className=\"flex-1\">\n                    <h3 className=\"text-white font-medium text-sm leading-tight mb-1\">\n                      {topic.title}\n                    </h3>\n                    <div className=\"flex items-center gap-2 text-xs text-gray-400\">\n                      <span className=\"bg-gray-700 px-2 py-1 rounded-full\">\n                        {topic.category}\n                      </span>\n                      <span>{topic.engagement}</span>\n                    </div>\n                  </div>\n                  {topic.trending && (\n                    <div className=\"text-orange-500 text-lg\">🔥</div>\n                  )}\n                </div>\n              </div>\n            ))}\n          </div>\n          <button className=\"w-full mt-4 bg-blue-600 hover:bg-blue-700 text-white py-2 px-4 rounded-lg text-sm font-medium transition-colors\">\n            View All Trends\n          </button>\n        </div>\n      </div>\n\n      {/* Main Feed Content */}\n      <div className=\"flex-1 max-w-2xl\">\n        {/* Create Post */}\n        <div className=\"card mb-6\">\n          <form onSubmit={handlePostSubmit}>\n            <div className=\"flex items-start space-x-3\">\n              <img\n                src={user?.avatar || 'https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?w=150&h=150&fit=crop&crop=face'}\n                alt=\"Profile\"\n                className=\"w-10 h-10 rounded-full\"\n              />\n              <div className=\"flex-1\">\n                <textarea\n                  value={newPost}\n                  onChange={(e) => setNewPost(e.target.value)}\n                  placeholder=\"What's on your mind?\"\n                  className=\"w-full bg-transparent text-white placeholder-gray-400 resize-none border-none outline-none\"\n                  rows={3}\n                />\n                \n                {previewUrl && (\n                  <div className=\"mt-3 relative\">\n                    {selectedFile?.type.startsWith('image/') ? (\n                      <img src={previewUrl} alt=\"Preview\" className=\"max-w-full h-auto rounded-lg max-h-64\" />\n                    ) : (\n                      <video src={previewUrl} controls className=\"max-w-full h-auto rounded-lg max-h-64\" />\n                    )}\n                    <button\n                      type=\"button\"\n                      onClick={() => {\n                        setSelectedFile(null);\n                        setPreviewUrl(null);\n                      }}\n                      className=\"absolute top-2 right-2 bg-red-500 text-white rounded-full w-6 h-6 flex items-center justify-center text-sm hover:bg-red-600\"\n                    >\n                      ×\n                    </button>\n                  </div>\n                )}\n\n                <div className=\"flex items-center justify-between mt-3 pt-3 border-t border-gray-700\">\n                  <div className=\"flex items-center space-x-2\">\n                    <button\n                      type=\"button\"\n                      onClick={() => setShowEmojiPicker(!showEmojiPicker)}\n                      className=\"text-gray-400 hover:text-white transition-colors\"\n                    >\n                      😊\n                    </button>\n                    <button\n                      type=\"button\"\n                      onClick={() => setShowGifPicker(!showGifPicker)}\n                      className=\"text-gray-400 hover:text-white transition-colors\"\n                    >\n                      🎬\n                    </button>\n                    <label className=\"cursor-pointer text-gray-400 hover:text-white transition-colors\">\n                      📷\n                      <input\n                        type=\"file\"\n                        accept=\"image/*,video/*\"\n                        onChange={handleFileSelect}\n                        className=\"hidden\"\n                      />\n                    </label>\n                  </div>\n                  <button\n                    type=\"submit\"\n                    disabled={!newPost.trim() && !selectedFile}\n                    className=\"bg-blue-600 hover:bg-blue-700 disabled:bg-gray-600 disabled:cursor-not-allowed text-white px-6 py-2 rounded-lg font-medium transition-colors\"\n                  >\n                    Post\n                  </button>\n                </div>\n              </div>\n            </div>\n          </form>\n\n          {showEmojiPicker && (\n            <div className=\"mt-3\">\n              <EmojiPicker isOpen={showEmojiPicker} onClose={() => setShowEmojiPicker(false)} onSelectEmoji={handleEmojiSelect} />\n            </div>\n          )}\n        </div>\n\n        {/* Posts Feed */}\n        <div className=\"space-y-6\">\n          {posts.map((post) => (\n            <div key={post.id} className=\"card\">\n              {/* Post Header */}\n              <div className=\"flex items-center space-x-3 mb-4\">\n                <img\n                  src={post.user.avatar}\n                  alt={post.user.firstName}\n                  className=\"w-10 h-10 rounded-full\"\n                />\n                <div className=\"flex-1\">\n                  <div className=\"font-medium text-white\">\n                    {post.user.firstName} {post.user.lastName}\n                  </div>\n                  <div className=\"text-gray-400 text-sm\">\n                    {formatTimestamp(post.timestamp)}\n                  </div>\n                </div>\n              </div>\n\n              {/* Post Content */}\n              <div className=\"text-white mb-4\">\n                {post.content}\n              </div>\n\n              {/* Post Media */}\n              {post.media && (\n                <div className=\"mb-4\">\n                  {post.media.type === 'image' ? (\n                    <img\n                      src={post.media.url}\n                      alt=\"Post media\"\n                      className=\"max-w-full h-auto rounded-lg\"\n                    />\n                  ) : (\n                    <video\n                      src={post.media.url}\n                      controls\n                      className=\"max-w-full h-auto rounded-lg\"\n                    />\n                  )}\n                </div>\n              )}\n\n              {/* Post Actions */}\n              <div className=\"flex items-center justify-between pt-4 border-t border-gray-700\">\n                <div className=\"flex items-center space-x-6\">\n                  <button\n                    onClick={() => handleLike(post.id)}\n                    className=\"flex items-center space-x-2 text-gray-400 hover:text-red-500 transition-colors\"\n                  >\n                    <span>❤️</span>\n                    <span>{post.likes}</span>\n                  </button>\n                  <button\n                    onClick={() => toggleComments(post.id)}\n                    className=\"flex items-center space-x-2 text-gray-400 hover:text-white transition-colors\"\n                  >\n                    <span>💬</span>\n                    <span>{post.comments.length}</span>\n                  </button>\n                </div>\n              </div>\n\n              {/* Comments Section */}\n              {showComments[post.id] && (\n                <div className=\"mt-4 pt-4 border-t border-gray-700\">\n                  {/* Add Comment */}\n                  <div className=\"flex items-center space-x-3 mb-4\">\n                    <img\n                      src={user?.avatar || 'https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?w=150&h=150&fit=crop&crop=face'}\n                      alt=\"Profile\"\n                      className=\"w-8 h-8 rounded-full\"\n                    />\n                    <div className=\"flex-1 flex space-x-2\">\n                      <input\n                        type=\"text\"\n                        value={commentText[post.id] || ''}\n                        onChange={(e) => setCommentText({ ...commentText, [post.id]: e.target.value })}\n                        placeholder=\"Write a comment...\"\n                        className=\"flex-1 bg-gray-700 text-white placeholder-gray-400 px-3 py-2 rounded-lg border-none outline-none\"\n                      />\n                      <button\n                        onClick={() => handleComment(post.id)}\n                        disabled={!commentText[post.id]?.trim()}\n                        className=\"bg-blue-600 hover:bg-blue-700 disabled:bg-gray-600 disabled:cursor-not-allowed text-white px-4 py-2 rounded-lg text-sm transition-colors\"\n                      >\n                        Comment\n                      </button>\n                    </div>\n                  </div>\n\n                  {/* Comments List */}\n                  <div className=\"space-y-3\">\n                    {post.comments.map((comment) => (\n                      <div key={comment.id} className=\"bg-gray-700 rounded-lg p-3\">\n                        <div className=\"flex items-start space-x-3\">\n                          <img\n                            src={comment.user.avatar}\n                            alt={comment.user.firstName}\n                            className=\"w-8 h-8 rounded-full\"\n                          />\n                          <div className=\"flex-1\">\n                            <div className=\"font-medium text-white text-sm\">\n                              {comment.user.firstName} {comment.user.lastName}\n                            </div>\n                            <div className=\"text-white text-sm mt-1\">\n                              {comment.content}\n                            </div>\n                            <div className=\"flex items-center space-x-4 mt-2\">\n                              <span className=\"text-gray-400 text-xs\">\n                                {formatTimestamp(comment.timestamp)}\n                              </span>\n                              <button\n                                onClick={() => setShowReplyInput({ ...showReplyInput, [comment.id]: !showReplyInput[comment.id] })}\n                                className=\"text-gray-400 hover:text-white text-xs transition-colors\"\n                              >\n                                Reply\n                              </button>\n                            </div>\n\n                            {/* Reply Input */}\n                            {showReplyInput[comment.id] && (\n                              <div className=\"mt-3 flex items-center space-x-2\">\n                                <input\n                                  type=\"text\"\n                                  value={replyText[comment.id] || ''}\n                                  onChange={(e) => setReplyText({ ...replyText, [comment.id]: e.target.value })}\n                                  placeholder=\"Write a reply...\"\n                                  className=\"flex-1 bg-gray-600 text-white placeholder-gray-400 px-3 py-2 rounded-lg border-none outline-none text-sm\"\n                                />\n                                <button\n                                  onClick={() => handleReply(post.id, comment.id)}\n                                  disabled={!replyText[comment.id]?.trim()}\n                                  className=\"bg-blue-600 hover:bg-blue-700 disabled:bg-gray-600 disabled:cursor-not-allowed text-white px-3 py-2 rounded-lg text-sm transition-colors\"\n                                >\n                                  Reply\n                                </button>\n                              </div>\n                            )}\n\n                            {/* Replies */}\n                            {comment.replies.length > 0 && (\n                              <div className=\"mt-3 space-y-2\">\n                                {comment.replies.map((reply) => (\n                                  <div key={reply.id} className=\"bg-gray-600 rounded-lg p-2 ml-6\">\n                                    <div className=\"flex items-start space-x-2\">\n                                      <img\n                                        src={reply.user.avatar}\n                                        alt={reply.user.firstName}\n                                        className=\"w-6 h-6 rounded-full\"\n                                      />\n                                      <div className=\"flex-1\">\n                                        <div className=\"font-medium text-white text-xs\">\n                                          {reply.user.firstName} {reply.user.lastName}\n                                        </div>\n                                        <div className=\"text-white text-xs mt-1\">\n                                          {reply.content}\n                                        </div>\n                                        <div className=\"text-gray-400 text-xs mt-1\">\n                                          {formatTimestamp(reply.timestamp)}\n                                        </div>\n                                      </div>\n                                    </div>\n                                  </div>\n                                ))}\n                              </div>\n                            )}\n                          </div>\n                        </div>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n              )}\n            </div>\n          ))}\n        </div>\n      </div>\n\n      {/* GIF Picker Modal */}\n      <GifPicker\n        isOpen={showGifPicker}\n        onClose={() => setShowGifPicker(false)}\n        onSelectGif={(gif) => handleGifSelect(gif.url)}\n      />\n    </div>\n  );\n};\n\nexport default Feed;\n","import React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';\nimport { io, Socket } from 'socket.io-client';\n\nexport interface Message {\n  id: string;\n  content: string;\n  senderId: string;\n  senderName: string;\n  senderAvatar?: string;\n  timestamp: Date;\n  roomId: string;\n  type: 'text' | 'image' | 'file';\n}\n\nexport interface ChatRoom {\n  id: string;\n  name: string;\n  description: string;\n  type: 'public' | 'private' | 'alumni';\n  participants: string[];\n  lastMessage?: Message;\n  isActive: boolean;\n  category: string;\n  icon: string;\n  memberCount: number;\n}\n\ninterface ChatContextType {\n  socket: Socket | null;\n  messages: Message[];\n  rooms: ChatRoom[];\n  activeRoom: ChatRoom | null;\n  isConnected: boolean;\n  joinRoom: (roomId: string) => void;\n  leaveRoom: (roomId: string) => void;\n  sendMessage: (content: string, type?: 'text' | 'image' | 'file') => void;\n  createRoom: (roomData: Omit<ChatRoom, 'id'>) => void;\n}\n\nconst ChatContext = createContext<ChatContextType | undefined>(undefined);\n\nexport const useChat = () => {\n  const context = useContext(ChatContext);\n  if (context === undefined) {\n    throw new Error('useChat must be used within a ChatProvider');\n  }\n  return context;\n};\n\ninterface ChatProviderProps {\n  children: ReactNode;\n}\n\nexport const ChatProvider: React.FC<ChatProviderProps> = ({ children }) => {\n  const [socket, setSocket] = useState<Socket | null>(null);\n  const [messages, setMessages] = useState<Message[]>([]);\n  const [rooms, setRooms] = useState<ChatRoom[]>([]);\n  const [activeRoom, setActiveRoom] = useState<ChatRoom | null>(null);\n  const [isConnected, setIsConnected] = useState(false);\n\n  useEffect(() => {\n    // Initialize default chat rooms with expanded categories\n    const defaultRooms: ChatRoom[] = [\n      // 🌟 General & Social\n      {\n        id: 'general',\n        name: 'General Chat',\n        description: 'General discussion room for all users',\n        type: 'public',\n        participants: [],\n        isActive: true,\n        category: 'General',\n        icon: '💬',\n        memberCount: 156,\n      },\n      {\n        id: 'random',\n        name: 'Random & Fun',\n        description: 'Random conversations, jokes, and fun topics',\n        type: 'public',\n        participants: [],\n        isActive: true,\n        category: 'General',\n        icon: '🎲',\n        memberCount: 89,\n      },\n      {\n        id: 'newcomers',\n        name: 'Newcomers Welcome',\n        description: 'Welcome new users and help them get started',\n        type: 'public',\n        participants: [],\n        isActive: true,\n        category: 'General',\n        icon: '👋',\n        memberCount: 234,\n      },\n\n      // 🏆 Sports & Fitness\n      {\n        id: 'sports',\n        name: 'Sports Central',\n        description: 'All sports discussions - football, basketball, soccer, and more',\n        type: 'public',\n        participants: [],\n        isActive: true,\n        category: 'Sports',\n        icon: '⚽',\n        memberCount: 312,\n      },\n      {\n        id: 'fitness',\n        name: 'Fitness & Health',\n        description: 'Workout tips, nutrition advice, and health discussions',\n        type: 'public',\n        participants: [],\n        isActive: true,\n        category: 'Sports',\n        icon: '💪',\n        memberCount: 178,\n      },\n      {\n        id: 'basketball',\n        name: 'Basketball Fans',\n        description: 'NBA, college basketball, and streetball discussions',\n        type: 'public',\n        participants: [],\n        isActive: true,\n        category: 'Sports',\n        icon: '🏀',\n        memberCount: 245,\n      },\n      {\n        id: 'football',\n        name: 'Football Nation',\n        description: 'NFL, college football, and fantasy football talk',\n        type: 'public',\n        participants: [],\n        isActive: true,\n        category: 'Sports',\n        icon: '🏈',\n        memberCount: 298,\n      },\n      {\n        id: 'soccer',\n        name: 'Soccer World',\n        description: 'International soccer, leagues, and World Cup discussions',\n        type: 'public',\n        participants: [],\n        isActive: true,\n        category: 'Sports',\n        icon: '⚽',\n        memberCount: 267,\n      },\n\n      // 🎵 Music & Arts\n      {\n        id: 'music',\n        name: 'Music & Arts',\n        description: 'Share your favorite music and art',\n        type: 'public',\n        participants: [],\n        isActive: true,\n        category: 'Music',\n        icon: '🎵',\n        memberCount: 189,\n      },\n      {\n        id: 'rock',\n        name: 'Rock & Metal',\n        description: 'Rock, metal, punk, and alternative music discussions',\n        type: 'public',\n        participants: [],\n        isActive: true,\n        category: 'Music',\n        icon: '🤘',\n        memberCount: 134,\n      },\n      {\n        id: 'hiphop',\n        name: 'Hip Hop & Rap',\n        description: 'Hip hop culture, rap music, and urban art',\n        type: 'public',\n        participants: [],\n        isActive: true,\n        category: 'Music',\n        icon: '🎤',\n        memberCount: 167,\n      },\n      {\n        id: 'electronic',\n        name: 'Electronic Music',\n        description: 'EDM, techno, house, and electronic music lovers',\n        type: 'public',\n        participants: [],\n        isActive: true,\n        category: 'Music',\n        icon: '🎧',\n        memberCount: 145,\n      },\n      {\n        id: 'classical',\n        name: 'Classical & Jazz',\n        description: 'Classical music, jazz, and orchestral discussions',\n        type: 'public',\n        participants: [],\n        isActive: true,\n        category: 'Music',\n        icon: '🎻',\n        memberCount: 98,\n      },\n\n      // 🎮 Gaming & Entertainment\n      {\n        id: 'gaming',\n        name: 'Gaming Zone',\n        description: 'Video games, board games, and gaming culture',\n        type: 'public',\n        participants: [],\n        isActive: true,\n        category: 'Gaming',\n        icon: '🎮',\n        memberCount: 423,\n      },\n      {\n        id: 'pc-gaming',\n        name: 'PC Gaming',\n        description: 'PC games, hardware, and gaming setups',\n        type: 'public',\n        participants: [],\n        isActive: true,\n        category: 'Gaming',\n        icon: '🖥️',\n        memberCount: 256,\n      },\n      {\n        id: 'console-gaming',\n        name: 'Console Gaming',\n        description: 'PlayStation, Xbox, Nintendo, and console games',\n        type: 'public',\n        participants: [],\n        isActive: true,\n        category: 'Gaming',\n        icon: '🎯',\n        memberCount: 198,\n      },\n      {\n        id: 'esports',\n        name: 'Esports & Competitive',\n        description: 'Professional gaming, tournaments, and esports news',\n        type: 'public',\n        participants: [],\n        isActive: true,\n        category: 'Gaming',\n        icon: '🏆',\n        memberCount: 167,\n      },\n\n      // 🎬 Movies & TV\n      {\n        id: 'movies',\n        name: 'Movies & Cinema',\n        description: 'Movie reviews, discussions, and cinema news',\n        type: 'public',\n        participants: [],\n        isActive: true,\n        category: 'Entertainment',\n        icon: '🎬',\n        memberCount: 234,\n      },\n      {\n        id: 'tv-shows',\n        name: 'TV Shows & Series',\n        description: 'Television shows, streaming content, and series discussions',\n        type: 'public',\n        participants: [],\n        isActive: true,\n        category: 'Entertainment',\n        icon: '📺',\n        memberCount: 198,\n      },\n      {\n        id: 'anime',\n        name: 'Anime & Manga',\n        description: 'Japanese animation, manga, and otaku culture',\n        type: 'public',\n        participants: [],\n        isActive: true,\n        category: 'Entertainment',\n        icon: '🌸',\n        memberCount: 187,\n      },\n\n      // 🍕 Food & Lifestyle\n      {\n        id: 'food',\n        name: 'Food & Cooking',\n        description: 'Recipes, cooking tips, and food culture discussions',\n        type: 'public',\n        participants: [],\n        isActive: true,\n        category: 'Lifestyle',\n        icon: '🍕',\n        memberCount: 156,\n      },\n      {\n        id: 'travel',\n        name: 'Travel & Adventure',\n        description: 'Travel tips, destination recommendations, and adventure stories',\n        type: 'public',\n        participants: [],\n        isActive: true,\n        category: 'Lifestyle',\n        icon: '✈️',\n        memberCount: 134,\n      },\n      {\n        id: 'fashion',\n        name: 'Fashion & Style',\n        description: 'Fashion trends, style advice, and clothing discussions',\n        type: 'public',\n        participants: [],\n        isActive: true,\n        category: 'Lifestyle',\n        icon: '👗',\n        memberCount: 145,\n      },\n      {\n        id: 'beauty',\n        name: 'Beauty & Makeup',\n        description: 'Beauty tips, makeup tutorials, and skincare advice',\n        type: 'public',\n        participants: [],\n        isActive: true,\n        category: 'Lifestyle',\n        icon: '💄',\n        memberCount: 123,\n      },\n\n      // 💻 Technology & Business\n      {\n        id: 'tech',\n        name: 'Tech Talk',\n        description: 'Technology and programming discussions',\n        type: 'public',\n        participants: [],\n        isActive: true,\n        category: 'Technology',\n        icon: '💻',\n        memberCount: 267,\n      },\n      {\n        id: 'programming',\n        name: 'Programming & Development',\n        description: 'Coding, software development, and programming languages',\n        type: 'public',\n        participants: [],\n        isActive: true,\n        category: 'Technology',\n        icon: '👨‍💻',\n        memberCount: 189,\n      },\n      {\n        id: 'ai-ml',\n        name: 'AI & Machine Learning',\n        description: 'Artificial intelligence, machine learning, and data science',\n        type: 'public',\n        participants: [],\n        isActive: true,\n        category: 'Technology',\n        icon: '🤖',\n        memberCount: 145,\n      },\n      {\n        id: 'startups',\n        name: 'Startups & Entrepreneurship',\n        description: 'Business ideas, startup advice, and entrepreneurship discussions',\n        type: 'public',\n        participants: [],\n        isActive: true,\n        category: 'Business',\n        icon: '🚀',\n        memberCount: 134,\n      },\n      {\n        id: 'investing',\n        name: 'Investing & Finance',\n        description: 'Stock market, cryptocurrency, and financial advice',\n        type: 'public',\n        participants: [],\n        isActive: true,\n        category: 'Business',\n        icon: '💰',\n        memberCount: 167,\n      },\n\n      // 📚 Education & Learning\n      {\n        id: 'education',\n        name: 'Education & Learning',\n        description: 'Academic discussions, study tips, and learning resources',\n        type: 'public',\n        participants: [],\n        isActive: true,\n        category: 'Education',\n        icon: '📚',\n        memberCount: 178,\n      },\n      {\n        id: 'languages',\n        name: 'Languages & Culture',\n        description: 'Language learning, cultural exchange, and international topics',\n        type: 'public',\n        participants: [],\n        isActive: true,\n        category: 'Education',\n        icon: '🌍',\n        memberCount: 145,\n      },\n      {\n        id: 'science',\n        name: 'Science & Discovery',\n        description: 'Scientific discoveries, research, and scientific discussions',\n        type: 'public',\n        participants: [],\n        isActive: true,\n        category: 'Education',\n        icon: '🔬',\n        memberCount: 123,\n      },\n\n      // 🏠 Hobbies & Interests\n      {\n        id: 'photography',\n        name: 'Photography & Art',\n        description: 'Photography tips, art sharing, and creative discussions',\n        type: 'public',\n        participants: [],\n        isActive: true,\n        category: 'Hobbies',\n        icon: '📸',\n        memberCount: 134,\n      },\n      {\n        id: 'books',\n        name: 'Books & Literature',\n        description: 'Book recommendations, reading discussions, and literary analysis',\n        type: 'public',\n        participants: [],\n        isActive: true,\n        category: 'Hobbies',\n        icon: '📖',\n        memberCount: 156,\n      },\n      {\n        id: 'pets',\n        name: 'Pets & Animals',\n        description: 'Pet care, animal discussions, and cute pet photos',\n        type: 'public',\n        participants: [],\n        isActive: true,\n        category: 'Hobbies',\n        icon: '🐾',\n        memberCount: 198,\n      },\n      {\n        id: 'gardening',\n        name: 'Gardening & Plants',\n        description: 'Plant care, gardening tips, and green thumb discussions',\n        type: 'public',\n        participants: [],\n        isActive: true,\n        category: 'Hobbies',\n        icon: '🌱',\n        memberCount: 89,\n      },\n\n      // 🔥 Trending & Current Events\n      {\n        id: 'trending',\n        name: 'Trending Topics',\n        description: 'Current events, viral content, and trending discussions',\n        type: 'public',\n        participants: [],\n        isActive: true,\n        category: 'Trending',\n        icon: '🔥',\n        memberCount: 456,\n      },\n      {\n        id: 'news',\n        name: 'News & Politics',\n        description: 'Current events, political discussions, and world news',\n        type: 'public',\n        participants: [],\n        isActive: true,\n        category: 'Trending',\n        icon: '📰',\n        memberCount: 234,\n      },\n      {\n        id: 'memes',\n        name: 'Memes & Humor',\n        description: 'Share and discuss the latest memes and funny content',\n        type: 'public',\n        participants: [],\n        isActive: true,\n        category: 'Trending',\n        icon: '😂',\n        memberCount: 345,\n      },\n\n      // 🎓 Special Access Rooms\n      {\n        id: 'alumni',\n        name: 'Alumni Room',\n        description: 'Exclusive room for verified alumni',\n        type: 'alumni',\n        participants: [],\n        isActive: true,\n        category: 'Special',\n        icon: '🎓',\n        memberCount: 67,\n      },\n      {\n        id: 'vip',\n        name: 'VIP Lounge',\n        description: 'Premium members and verified users only',\n        type: 'private',\n        participants: [],\n        isActive: true,\n        category: 'Special',\n        icon: '👑',\n        memberCount: 23,\n      },\n    ];\n\n    setRooms(defaultRooms);\n\n    // Initialize mock socket connection (no real server needed)\n    const mockSocket = {\n      emit: (event: string, data: any) => {\n        console.log(`Mock socket emit: ${event}`, data);\n        \n        // Handle local message sending\n        if (event === 'sendMessage') {\n          const newMessage: Message = {\n            id: Date.now().toString(),\n            content: data.content,\n            senderId: data.senderId,\n            senderName: data.senderName,\n            senderAvatar: data.senderAvatar,\n            timestamp: new Date(),\n            roomId: data.roomId,\n            type: data.type,\n          };\n          setMessages(prev => [...prev, newMessage]);\n        }\n      },\n      on: () => {},\n      close: () => {},\n    };\n\n    setSocket(mockSocket as any);\n    setIsConnected(true);\n    console.log('Mock chat server connected');\n\n    return () => {\n      // Cleanup mock socket\n    };\n  }, []);\n\n  const joinRoom = (roomId: string) => {\n    console.log('ChatContext: joinRoom called with:', roomId); // Debug log\n    \n    const room = rooms.find(r => r.id === roomId);\n    console.log('Found room:', room); // Debug log\n    \n    if (room) {\n      if (socket) {\n        socket.emit('joinRoom', roomId);\n      }\n      setActiveRoom(room);\n      console.log('Active room set to:', room); // Debug log\n      \n      // Clear messages when joining a new room\n      setMessages([]);\n    } else {\n      console.log('Room not found:', roomId); // Debug log\n    }\n  };\n\n  const leaveRoom = (roomId: string) => {\n    if (!socket) return;\n\n    socket.emit('leaveRoom', roomId);\n    setActiveRoom(null);\n    setMessages([]);\n  };\n\n  const sendMessage = (content: string, type: 'text' | 'image' | 'file' = 'text') => {\n    if (!activeRoom) return;\n\n    const message: Omit<Message, 'id' | 'timestamp'> = {\n      content,\n      senderId: 'current-user', // This would come from auth context\n      senderName: 'You', // This would come from auth context\n      roomId: activeRoom.id,\n      type,\n    };\n\n    if (socket) {\n      socket.emit('sendMessage', message);\n    }\n  };\n\n  const createRoom = (roomData: Omit<ChatRoom, 'id'>) => {\n    const newRoom: ChatRoom = {\n      ...roomData,\n      id: Date.now().toString(),\n    };\n\n    setRooms(prev => [...prev, newRoom]);\n  };\n\n  const value: ChatContextType = {\n    socket,\n    messages,\n    rooms,\n    activeRoom,\n    isConnected,\n    joinRoom,\n    leaveRoom,\n    sendMessage,\n    createRoom,\n  };\n\n  return (\n    <ChatContext.Provider value={value}>\n      {children}\n    </ChatContext.Provider>\n  );\n};\n","import React, { useState, useMemo } from 'react';\nimport { useChat } from '../contexts/ChatContext';\nimport { useAuth } from '../contexts/AuthContext';\n\nconst ChatRooms: React.FC = () => {\n  const { rooms, activeRoom, joinRoom, leaveRoom, isConnected } = useChat();\n  const { user } = useAuth();\n  const [selectedRoom, setSelectedRoom] = useState<string | null>(null);\n  const [showCreateRoom, setShowCreateRoom] = useState(false);\n  const [selectedCategory, setSelectedCategory] = useState<string>('All');\n  const [searchQuery, setSearchQuery] = useState('');\n  const [newRoomData, setNewRoomData] = useState({\n    name: '',\n    description: '',\n    type: 'public' as 'public' | 'private' | 'alumni',\n    category: 'General',\n  });\n\n  // Get unique categories from rooms\n  const categories = useMemo(() => {\n    const cats = ['All', ...Array.from(new Set(rooms.map(room => room.category)))];\n    return cats.sort();\n  }, [rooms]);\n\n  // Filter rooms based on selected category and search query\n  const filteredRooms = useMemo(() => {\n    let filtered = rooms;\n    \n    if (selectedCategory !== 'All') {\n      filtered = filtered.filter(room => room.category === selectedCategory);\n    }\n    \n    if (searchQuery) {\n      filtered = filtered.filter(room => \n        room.name.toLowerCase().includes(searchQuery.toLowerCase()) ||\n        room.description.toLowerCase().includes(searchQuery.toLowerCase())\n      );\n    }\n    \n    return filtered;\n  }, [rooms, selectedCategory, searchQuery]);\n\n  const handleJoinRoom = (roomId: string) => {\n    console.log('Joining room:', roomId); // Debug log\n    \n    if (activeRoom?.id === roomId) {\n      console.log('Leaving room:', roomId); // Debug log\n      leaveRoom(roomId);\n      setSelectedRoom(null);\n    } else {\n      console.log('Joining new room:', roomId); // Debug log\n      joinRoom(roomId);\n      setSelectedRoom(roomId);\n      \n      // Show success message\n      console.log(`Successfully joined room: ${roomId}`);\n      \n      // Add visual feedback\n      alert(`Successfully joined ${rooms.find(r => r.id === roomId)?.name}!`);\n    }\n  };\n\n  const handleCreateRoom = () => {\n    // This would integrate with the chat context\n    setShowCreateRoom(false);\n    setNewRoomData({ name: '', description: '', type: 'public', category: 'General' });\n  };\n\n  const getRoomIcon = (type: string) => {\n    switch (type) {\n      case 'alumni':\n        return '🎓';\n      case 'private':\n        return '🔒';\n      default:\n        return '💬';\n    }\n  };\n\n  const getRoomTypeColor = (type: string) => {\n    switch (type) {\n      case 'alumni':\n        return 'bg-purple-500/20 text-purple-400 border-purple-500/50';\n      case 'private':\n        return 'bg-yellow-500/20 text-yellow-400 border-yellow-500/50';\n      default:\n        return 'bg-blue-500/20 text-blue-400 border-blue-500/50';\n    }\n  };\n\n  const getCategoryIcon = (category: string) => {\n    const categoryIcons: { [key: string]: string } = {\n      'General': '🌟',\n      'Sports': '🏆',\n      'Music': '🎵',\n      'Gaming': '🎮',\n      'Entertainment': '🎬',\n      'Lifestyle': '🍕',\n      'Technology': '💻',\n      'Business': '💰',\n      'Education': '📚',\n      'Hobbies': '🏠',\n      'Trending': '🔥',\n      'Special': '👑',\n    };\n    return categoryIcons[category] || '💬';\n  };\n\n  const getCategoryColor = (category: string) => {\n    const categoryColors: { [key: string]: string } = {\n      'General': 'bg-blue-500/20 text-blue-400 border-blue-500/50',\n      'Sports': 'bg-green-500/20 text-green-400 border-green-500/50',\n      'Music': 'bg-purple-500/20 text-purple-400 border-purple-500/50',\n      'Gaming': 'bg-orange-500/20 text-orange-400 border-orange-500/50',\n      'Entertainment': 'bg-pink-500/20 text-pink-400 border-pink-500/50',\n      'Lifestyle': 'bg-teal-500/20 text-teal-400 border-teal-500/50',\n      'Technology': 'bg-indigo-500/20 text-indigo-400 border-indigo-500/50',\n      'Business': 'bg-emerald-500/20 text-emerald-400 border-emerald-500/50',\n      'Education': 'bg-cyan-500/20 text-cyan-400 border-cyan-500/50',\n      'Hobbies': 'bg-amber-500/20 text-amber-400 border-amber-500/50',\n      'Trending': 'bg-red-500/20 text-red-400 border-red-500/50',\n      'Special': 'bg-yellow-500/20 text-yellow-400 border-yellow-500/50',\n    };\n    return categoryColors[category] || 'bg-gray-500/20 text-gray-400 border-gray-500/50';\n  };\n\n  return (\n    <div className=\"min-h-screen py-8 px-4 sm:px-6 lg:px-8\">\n      <div className=\"max-w-7xl mx-auto\">\n        {/* Header */}\n        <div className=\"text-center mb-8\">\n          <h1 className=\"text-4xl font-bold text-white mb-4\">\n            Chat Rooms\n          </h1>\n          <p className=\"text-xl text-white/60 max-w-3xl mx-auto\">\n            Join conversations, connect with friends, and be part of amazing communities across {categories.length - 1} different categories\n          </p>\n          <div className=\"flex items-center justify-center space-x-4 mt-6\">\n            <div className=\"flex items-center space-x-2\">\n              <div className=\"w-3 h-3 rounded-full bg-green-500\"></div>\n              <span className=\"text-white/60 text-sm\">\n                {isConnected ? 'Connected' : 'Connecting...'}\n              </span>\n            </div>\n            <button\n              onClick={() => setShowCreateRoom(true)}\n              className=\"btn-primary\"\n            >\n              Create New Room\n            </button>\n          </div>\n        </div>\n\n        {/* Search and Filter Bar */}\n        <div className=\"mb-8\">\n          <div className=\"flex flex-col sm:flex-row gap-4\">\n            {/* Search Bar */}\n            <div className=\"flex-1\">\n              <div className=\"relative\">\n                <input\n                  type=\"text\"\n                  placeholder=\"Search chat rooms...\"\n                  value={searchQuery}\n                  onChange={(e) => setSearchQuery(e.target.value)}\n                  className=\"w-full input-field pl-10\"\n                />\n                <div className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-white/60\">\n                  🔍\n                </div>\n              </div>\n            </div>\n\n            {/* Category Filter */}\n            <div className=\"sm:w-48\">\n              <select\n                value={selectedCategory}\n                onChange={(e) => setSelectedCategory(e.target.value)}\n                className=\"w-full input-field\"\n              >\n                {categories.map(category => (\n                  <option key={category} value={category}>\n                    {category} ({category === 'All' ? rooms.length : rooms.filter(r => r.category === category).length})\n                  </option>\n                ))}\n              </select>\n            </div>\n          </div>\n        </div>\n\n        {/* Category Tabs */}\n        <div className=\"mb-8\">\n          <div className=\"flex flex-wrap gap-2 justify-center\">\n            {categories.map(category => (\n              <button\n                key={category}\n                onClick={() => setSelectedCategory(category)}\n                className={`px-4 py-2 rounded-full text-sm font-medium transition-all duration-200 ${\n                  selectedCategory === category\n                    ? 'bg-purple-500 text-white shadow-lg'\n                    : 'bg-white/10 text-white/70 hover:bg-white/20 hover:text-white'\n                }`}\n              >\n                <span className=\"mr-2\">{getCategoryIcon(category)}</span>\n                {category}\n                {category !== 'All' && (\n                  <span className=\"ml-2 bg-white/20 px-2 py-1 rounded-full text-xs\">\n                    {rooms.filter(r => r.category === category).length}\n                  </span>\n                )}\n              </button>\n            ))}\n          </div>\n        </div>\n\n        {/* Create Room Modal */}\n        {showCreateRoom && (\n          <div className=\"fixed inset-0 bg-black/50 backdrop-blur-sm flex items-center justify-center z-50\">\n            <div className=\"card max-w-md w-full mx-4\">\n              <h3 className=\"text-xl font-semibold text-white mb-6\">Create New Chat Room</h3>\n              <form onSubmit={(e) => { e.preventDefault(); handleCreateRoom(); }}>\n                <div className=\"space-y-4\">\n                  <div>\n                    <label className=\"block text-sm font-medium text-white mb-2\">\n                      Room Name\n                    </label>\n                    <input\n                      type=\"text\"\n                      value={newRoomData.name}\n                      onChange={(e) => setNewRoomData({ ...newRoomData, name: e.target.value })}\n                      className=\"input-field\"\n                      placeholder=\"Enter room name\"\n                      required\n                    />\n                  </div>\n                  \n                  <div>\n                    <label className=\"block text-sm font-medium text-white mb-2\">\n                      Description\n                    </label>\n                    <textarea\n                      value={newRoomData.description}\n                      onChange={(e) => setNewRoomData({ ...newRoomData, description: e.target.value })}\n                      className=\"input-field\"\n                      rows={3}\n                      placeholder=\"Describe what this room is about\"\n                      required\n                    />\n                  </div>\n                  \n                  <div>\n                    <label className=\"block text-sm font-medium text-white mb-2\">\n                      Category\n                    </label>\n                    <select\n                      value={newRoomData.category}\n                      onChange={(e) => setNewRoomData({ ...newRoomData, category: e.target.value })}\n                      className=\"input-field\"\n                    >\n                      {categories.filter(cat => cat !== 'All').map(category => (\n                        <option key={category} value={category}>{category}</option>\n                      ))}\n                    </select>\n                  </div>\n                  \n                  <div>\n                    <label className=\"block text-sm font-medium text-white mb-2\">\n                      Room Type\n                    </label>\n                    <select\n                      value={newRoomData.type}\n                      onChange={(e) => setNewRoomData({ ...newRoomData, type: e.target.value as any })}\n                      className=\"input-field\"\n                    >\n                      <option value=\"public\">Public</option>\n                      <option value=\"private\">Private</option>\n                      <option value=\"alumni\">Alumni</option>\n                    </select>\n                  </div>\n                </div>\n                \n                <div className=\"flex space-x-3 mt-6\">\n                  <button\n                    type=\"submit\"\n                    className=\"btn-primary flex-1\"\n                  >\n                    Create Room\n                  </button>\n                  <button\n                    type=\"button\"\n                    onClick={() => setShowCreateRoom(false)}\n                    className=\"btn-secondary flex-1\"\n                  >\n                    Cancel\n                  </button>\n                </div>\n              </form>\n            </div>\n          </div>\n        )}\n\n        {/* Rooms Grid */}\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6\">\n          {filteredRooms.map((room) => (\n            <div\n              key={room.id}\n              className={`card cursor-pointer transition-all duration-200 hover:scale-105 ${\n                activeRoom?.id === room.id ? 'ring-2 ring-purple-500' : ''\n              }`}\n              onClick={() => handleJoinRoom(room.id)}\n            >\n              <div className=\"flex items-start justify-between mb-4\">\n                <div className=\"text-4xl\">{room.icon || getRoomIcon(room.type)}</div>\n                <div className=\"flex flex-col items-end space-y-2\">\n                  <span className={`px-2 py-1 rounded-full text-xs border ${getRoomTypeColor(room.type)}`}>\n                    {room.type.charAt(0).toUpperCase() + room.type.slice(1)}\n                  </span>\n                  <span className={`px-2 py-1 rounded-full text-xs border ${getCategoryColor(room.category)}`}>\n                    {room.category}\n                  </span>\n                </div>\n              </div>\n              \n              <h3 className=\"text-xl font-semibold text-white mb-2\">{room.name}</h3>\n              <p className=\"text-white/70 mb-4 text-sm leading-relaxed\">{room.description}</p>\n              \n              <div className=\"flex items-center justify-between\">\n                <div className=\"flex items-center space-x-2 text-sm text-white/60\">\n                  <span>👥</span>\n                  <span>{room.memberCount || room.participants.length} members</span>\n                </div>\n                \n                <button\n                  className={`px-4 py-2 rounded-lg text-sm font-medium transition-colors ${\n                    activeRoom?.id === room.id\n                      ? 'bg-red-500 hover:bg-red-600 text-white'\n                      : 'bg-purple-500 hover:bg-purple-600 text-white'\n                  }`}\n                  onClick={(e) => {\n                    e.stopPropagation();\n                    handleJoinRoom(room.id);\n                  }}\n                >\n                  {activeRoom?.id === room.id ? 'Leave' : 'Join'}\n                </button>\n              </div>\n            </div>\n          ))}\n        </div>\n\n        {/* No Results Message */}\n        {filteredRooms.length === 0 && (\n          <div className=\"text-center py-12\">\n            <div className=\"text-6xl mb-4\">🔍</div>\n            <h3 className=\"text-xl font-semibold text-white mb-2\">No rooms found</h3>\n            <p className=\"text-white/60\">\n              Try adjusting your search or category filter\n            </p>\n          </div>\n        )}\n\n        {/* Active Room Info */}\n        {activeRoom && (\n          <div className=\"mt-8\">\n            <div className=\"card\">\n              <div className=\"flex items-center justify-between mb-4\">\n                <h2 className=\"text-2xl font-bold text-white\">\n                  Currently in: {activeRoom.name}\n                </h2>\n                <button\n                  onClick={() => leaveRoom(activeRoom.id)}\n                  className=\"btn-secondary\"\n                >\n                  Leave Room\n                </button>\n              </div>\n              <p className=\"text-white/70 mb-4\">{activeRoom.description}</p>\n              <div className=\"flex items-center space-x-4 text-sm text-white/60\">\n                <span>Room Type: {activeRoom.type}</span>\n                <span>•</span>\n                <span>Category: {activeRoom.category}</span>\n                <span>•</span>\n                <span>Members: {activeRoom.memberCount || activeRoom.participants.length}</span>\n                <span>•</span>\n                <span>Status: {activeRoom.isActive ? 'Active' : 'Inactive'}</span>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {/* Category Statistics */}\n        <div className=\"mt-12\">\n          <div className=\"card\">\n            <h3 className=\"text-xl font-semibold text-white mb-6\">📊 Chat Room Statistics</h3>\n            <div className=\"grid grid-cols-2 md:grid-cols-4 lg:grid-cols-6 gap-4\">\n              {categories.filter(cat => cat !== 'All').map(category => {\n                const roomCount = rooms.filter(r => r.category === category).length;\n                const totalMembers = rooms\n                  .filter(r => r.category === category)\n                  .reduce((sum, room) => sum + (room.memberCount || 0), 0);\n                \n                return (\n                  <div key={category} className=\"text-center p-4 bg-white/5 rounded-lg\">\n                    <div className=\"text-2xl mb-2\">{getCategoryIcon(category)}</div>\n                    <h4 className=\"font-semibold text-white text-sm mb-1\">{category}</h4>\n                    <p className=\"text-white/60 text-xs\">{roomCount} rooms</p>\n                    <p className=\"text-white/40 text-xs\">{totalMembers.toLocaleString()} members</p>\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n        </div>\n\n        {/* Special Features */}\n        <div className=\"mt-12\">\n          <div className=\"card\">\n            <h3 className=\"text-xl font-semibold text-white mb-4\">🌟 Special Features</h3>\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n              <div className=\"text-center\">\n                <div className=\"text-3xl mb-2\">🎓</div>\n                <h4 className=\"font-semibold text-white mb-2\">Alumni Room</h4>\n                <p className=\"text-white/70 text-sm\">\n                  Exclusive access for verified alumni to reconnect and network\n                </p>\n              </div>\n              <div className=\"text-center\">\n                <div className=\"text-3xl mb-2\">🔒</div>\n                <h4 className=\"font-semibold text-white mb-2\">Private Rooms</h4>\n                <p className=\"text-white/70 text-sm\">\n                  Create private spaces for close friends and family\n                </p>\n              </div>\n              <div className=\"text-center\">\n                <div className=\"text-3xl mb-2\">💬</div>\n                <h4 className=\"font-semibold text-white mb-2\">Public Rooms</h4>\n                <p className=\"text-white/70 text-sm\">\n                  Join open discussions and meet new people\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ChatRooms;\n","import React, { useState, useEffect } from 'react';\nimport { useAuth } from '../contexts/AuthContext';\nimport { useChat } from '../contexts/ChatContext';\nimport GifPicker from './GifPicker';\nimport EmojiPicker from './EmojiPicker';\n\ninterface AlumniMember {\n  id: string;\n  name: string;\n  avatar: string;\n  graduationYear: number;\n  school: string;\n  major: string;\n  isVerified: boolean;\n  lastSeen: Date;\n}\n\nconst AlumniRoom: React.FC = () => {\n  const { user, updateProfile } = useAuth();\n  const { joinRoom, leaveRoom, activeRoom, messages, sendMessage } = useChat();\n  const [newMessage, setNewMessage] = useState('');\n  const [showVerification, setShowVerification] = useState(false);\n  const [verificationForm, setVerificationForm] = useState({\n    graduationYear: '',\n    school: '',\n    major: '',\n  });\n  const [isVerifying, setIsVerifying] = useState(false);\n  const [verificationSuccess, setVerificationSuccess] = useState(false);\n  const [alumniMembers, setAlumniMembers] = useState<AlumniMember[]>([]);\n  const [showEmojiPicker, setShowEmojiPicker] = useState(false);\n  const [showGifPicker, setShowGifPicker] = useState(false);\n  const [selectedGif, setSelectedGif] = useState<string>('');\n  const [localMessages, setLocalMessages] = useState<any[]>([]);\n  const [isInRoom, setIsInRoom] = useState(false);\n\n  // Common emojis for quick access\n  const commonEmojis = ['😀', '😂', '❤️', '🔥', '👍', '🎉', '😍', '🤔', '😭', '😱', '🥳', '😎', '🤗', '😴', '🤩', '😤', '😇', '🤠', '👻', '🤖', '🎓', '💼', '🌟', '💪', '🎯'];\n\n  // Simple verification: user has graduation info and is marked as verified\n  const isVerifiedAlumni = user?.isVerified && user?.graduationYear && user?.school;\n\n  useEffect(() => {\n    // Always show demo messages and allow messaging for testing\n    setLocalMessages([\n      {\n        id: '1',\n        content: 'Welcome to the Alumni Room! 🎓',\n        senderName: 'System',\n        senderAvatar: 'https://api.dicebear.com/7.x/avataaars/svg?seed=system',\n        timestamp: new Date(Date.now() - 1000 * 60 * 5),\n      },\n      {\n        id: '2',\n        content: 'Great to see everyone here! 👋',\n        senderName: 'Sarah Johnson',\n        senderAvatar: 'https://api.dicebear.com/7.x/avataaars/svg?seed=sarah',\n        timestamp: new Date(Date.now() - 1000 * 60 * 3),\n      },\n      {\n        id: '3',\n        content: 'Anyone up for the reunion next month? 🎉',\n        senderName: 'Michael Chen',\n        senderAvatar: 'https://api.dicebear.com/7.x/avataaars/svg?seed=michael',\n        timestamp: new Date(Date.now() - 1000 * 60 * 1),\n      },\n    ]);\n    \n    // Auto-join alumni room if verified\n    if (isVerifiedAlumni) {\n      joinRoom('alumni');\n      setIsInRoom(true);\n    } else {\n      // For testing, allow messaging even without verification\n      setIsInRoom(true);\n    }\n\n    // Mock alumni members data\n    const mockMembers: AlumniMember[] = [\n      {\n        id: '1',\n        name: 'Sarah Johnson',\n        avatar: 'https://api.dicebear.com/7.x/avataaars/svg?seed=sarah',\n        graduationYear: 2023,\n        school: 'University of Technology',\n        major: 'Computer Science',\n        isVerified: true,\n        lastSeen: new Date(Date.now() - 1000 * 60 * 5), // 5 minutes ago\n      },\n      {\n        id: '2',\n        name: 'Michael Chen',\n        avatar: 'https://api.dicebear.com/7.x/avataaars/svg?seed=michael',\n        graduationYear: 2022,\n        school: 'University of Technology',\n        major: 'Engineering',\n        isVerified: true,\n        lastSeen: new Date(Date.now() - 1000 * 60 * 15), // 15 minutes ago\n      },\n      {\n        id: '3',\n        name: 'Emily Rodriguez',\n        avatar: 'https://api.dicebear.com/7.x/avataaars/svg?seed=emily',\n        graduationYear: 2021,\n        school: 'University of Technology',\n        major: 'Business Administration',\n        isVerified: true,\n        lastSeen: new Date(Date.now() - 1000 * 60 * 30), // 30 minutes ago\n      },\n    ];\n\n    setAlumniMembers(mockMembers);\n  }, [isVerifiedAlumni, joinRoom]);\n\n  const handleSendMessage = (e: React.FormEvent) => {\n    e.preventDefault();\n    if (!newMessage.trim() && !selectedGif) return;\n\n    console.log('Sending message:', newMessage); // Debug log\n\n    // Create message object for instant display\n    const messageObj = {\n      id: Date.now().toString(),\n      content: selectedGif ? `[GIF] ${newMessage}` : newMessage,\n      senderName: `${user?.firstName || 'User'} ${user?.lastName || 'Name'}`,\n      senderAvatar: user?.avatar || `https://api.dicebear.com/7.x/avataaars/svg?seed=${user?.username || 'user'}`,\n      timestamp: new Date(),\n      gifUrl: selectedGif || undefined,\n    };\n\n    console.log('Message object:', messageObj); // Debug log\n\n    // Add message to local messages immediately\n    setLocalMessages(prev => {\n      console.log('Previous messages:', prev); // Debug log\n      const newMessages = [...prev, messageObj];\n      console.log('New messages array:', newMessages); // Debug log\n      return newMessages;\n    });\n    \n    // Send message through chat context (for future socket integration)\n    if (selectedGif) {\n      sendMessage(`[GIF] ${newMessage}`, 'image');\n      setSelectedGif('');\n    } else {\n      sendMessage(newMessage);\n    }\n    \n    // Clear input immediately\n    setNewMessage('');\n  };\n\n  const handleEmojiSelect = (emoji: string) => {\n    setNewMessage(prev => prev + emoji);\n    setShowEmojiPicker(false);\n  };\n\n  const handleGifSelect = (gif: any) => {\n    setSelectedGif(gif.url);\n    setShowGifPicker(false);\n  };\n\n  const handleVerification = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setIsVerifying(true);\n\n    try {\n      // Simple verification: just update the user profile with graduation info\n      // and mark them as verified (no complex document verification needed)\n      await updateProfile({\n        graduationYear: parseInt(verificationForm.graduationYear),\n        school: verificationForm.school,\n        major: verificationForm.major,\n        isVerified: true, // Automatically verify after basic info is provided\n      });\n\n      // Show success message\n      setVerificationSuccess(true);\n      \n      // Auto-join alumni room after successful verification\n      setTimeout(() => {\n        joinRoom('alumni');\n        setShowVerification(false);\n        setVerificationSuccess(false);\n      }, 2000);\n\n    } catch (error) {\n      console.error('Verification error:', error);\n    } finally {\n      setIsVerifying(false);\n    }\n  };\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) => {\n    setVerificationForm({\n      ...verificationForm,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const formatTimeAgo = (date: Date) => {\n    const now = new Date();\n    const diffInMinutes = Math.floor((now.getTime() - date.getTime()) / (1000 * 60));\n    \n    if (diffInMinutes < 1) return 'just now';\n    if (diffInMinutes < 60) return `${diffInMinutes}m ago`;\n    if (diffInMinutes < 1440) return `${Math.floor(diffInMinutes / 60)}h ago`;\n    return `${Math.floor(diffInMinutes / 1440)}d ago`;\n  };\n\n  // Show verification success message\n  if (verificationSuccess) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center py-8 px-4 sm:px-6 lg:px-8\">\n        <div className=\"max-w-md mx-auto text-center\">\n          <div className=\"card\">\n            <div className=\"text-6xl mb-6\">🎉</div>\n            <h1 className=\"text-3xl font-bold text-white mb-4\">\n              Verification Successful!\n            </h1>\n            <p className=\"text-lg text-white/70 mb-6\">\n              Welcome to the Alumni Room! You now have access to all exclusive alumni features.\n            </p>\n            <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-purple-500 mx-auto mb-4\"></div>\n            <p className=\"text-white/60\">Redirecting to Alumni Room...</p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  if (!isVerifiedAlumni) {\n    return (\n      <div className=\"min-h-screen py-8 px-4 sm:px-6 lg:px-8\">\n        <div className=\"max-w-4xl mx-auto\">\n          {/* Access Denied */}\n          <div className=\"card text-center\">\n            <div className=\"text-6xl mb-6\">🎓</div>\n            <h1 className=\"text-3xl font-bold text-white mb-4\">\n              Welcome to the Alumni Room\n            </h1>\n            <p className=\"text-xl text-white/70 mb-8 max-w-2xl mx-auto\">\n              This exclusive space is reserved for verified alumni. Complete the simple verification below to gain access.\n            </p>\n\n            {/* Simple Verification Form */}\n            <div className=\"max-w-md mx-auto\">\n              <div className=\"bg-blue-500/20 border border-blue-500/50 rounded-lg p-6 mb-8\">\n                <h3 className=\"text-lg font-semibold text-blue-400 mb-4\">\n                  🚀 Simple Alumni Verification\n                </h3>\n                <p className=\"text-white/80 mb-4\">\n                  Just provide your graduation details to get instant access to the Alumni Room!\n                </p>\n                <button\n                  onClick={() => setShowVerification(true)}\n                  className=\"btn-primary w-full\"\n                >\n                  Start Verification\n                </button>\n              </div>\n            </div>\n\n            {/* Features Preview */}\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 mt-12\">\n              <div className=\"text-center\">\n                <div className=\"text-3xl mb-3\">👥</div>\n                <h4 className=\"font-semibold text-white mb-2\">Network</h4>\n                <p className=\"text-white/70 text-sm\">\n                  Connect with alumni from your graduating class and beyond\n                </p>\n              </div>\n              <div className=\"text-center\">\n                <div className=\"text-3xl mb-3\">💼</div>\n                <h4 className=\"font-semibold text-white mb-2\">Career</h4>\n                <p className=\"text-white/70 text-sm\">\n                  Share job opportunities and professional advice\n                </p>\n              </div>\n              <div className=\"text-center\">\n                <div className=\"text-3xl mb-3\">🎉</div>\n                <h4 className=\"font-semibold text-white mb-2\">Events</h4>\n                <p className=\"text-white/70 text-sm\">\n                  Organize reunions and alumni meetups\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen py-8 px-4 sm:px-6 lg:px-8\">\n      <div className=\"max-w-6xl mx-auto\">\n        {/* Header */}\n        <div className=\"card mb-8\">\n          <div className=\"flex items-center justify-between mb-6\">\n            <div>\n              <h1 className=\"text-3xl font-bold text-white mb-2\">\n                🎓 Alumni Room\n              </h1>\n              <p className=\"text-white/70\">\n                Welcome back, {user?.firstName}! Connect with your fellow alumni from {user?.school} Class of {user?.graduationYear}.\n              </p>\n            </div>\n            <div className=\"flex items-center space-x-2\">\n              <div className=\"w-3 h-3 rounded-full bg-green-500\"></div>\n              <span className=\"text-white/60 text-sm\">Connected</span>\n            </div>\n          </div>\n\n          {/* Quick Stats */}\n          <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\n            <div className=\"text-center\">\n              <div className=\"text-2xl font-bold text-white\">{alumniMembers.length}</div>\n              <div className=\"text-white/60 text-sm\">Online Alumni</div>\n            </div>\n            <div className=\"text-center\">\n              <div className=\"text-2xl font-bold text-white\">24</div>\n              <div className=\"text-white/60 text-sm\">Total Members</div>\n            </div>\n            <div className=\"text-center\">\n              <div className=\"text-2xl font-bold text-white\">156</div>\n              <div className=\"text-white/60 text-sm\">Messages Today</div>\n            </div>\n            <div className=\"text-center\">\n              <div className=\"text-2xl font-bold text-white\">12</div>\n              <div className=\"text-white/60 text-sm\">Active Events</div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-8\">\n          {/* Chat Section */}\n          <div className=\"lg:col-span-2\">\n            <div className=\"card h-96 flex flex-col\">\n              <div className=\"flex items-center justify-between mb-4\">\n                <h3 className=\"text-lg font-semibold text-white\">Live Chat</h3>\n                <button\n                  onClick={() => leaveRoom('alumni')}\n                  className=\"btn-secondary text-sm\"\n                >\n                  Leave Room\n                </button>\n              </div>\n\n              {/* Messages */}\n              <div className=\"flex-1 overflow-y-auto mb-4 space-y-3\">\n                {localMessages.length === 0 ? (\n                  <div className=\"text-center text-white/60 py-8\">\n                    <p>No messages yet. Start the conversation!</p>\n                  </div>\n                ) : (\n                  localMessages.map((message) => (\n                    <div key={message.id} className=\"flex items-start space-x-3\">\n                      <img\n                        src={message.senderAvatar || `https://api.dicebear.com/7.x/avataaars/svg?seed=${message.senderName}`}\n                        alt={message.senderName}\n                        className=\"w-8 h-8 rounded-full\"\n                      />\n                      <div className=\"flex-1\">\n                        <div className=\"bg-white/10 rounded-lg px-3 py-2\">\n                          <span className=\"font-semibold text-white text-sm\">{message.senderName}</span>\n                          <p className=\"text-white/80 text-sm\">{message.content}</p>\n                          {message.gifUrl && (\n                            <div className=\"mt-2\">\n                              <img \n                                src={message.gifUrl} \n                                alt=\"Message GIF\" \n                                className=\"max-h-32 rounded\"\n                              />\n                            </div>\n                          )}\n                        </div>\n                        <p className=\"text-xs text-white/50 mt-1\">\n                          {new Date(message.timestamp).toLocaleTimeString()}\n                        </p>\n                      </div>\n                    </div>\n                  ))\n                )}\n              </div>\n\n              {/* Message Input */}\n              <form onSubmit={handleSendMessage} className=\"space-y-3\">\n                {/* GIF Preview */}\n                {selectedGif && (\n                  <div className=\"relative\">\n                    <img \n                      src={selectedGif} \n                      alt=\"Selected GIF\" \n                      className=\"max-w-full max-h-32 rounded-lg\"\n                    />\n                    <button\n                      type=\"button\"\n                      onClick={() => setSelectedGif('')}\n                      className=\"absolute top-2 right-2 bg-red-500 text-white rounded-full w-6 h-6 flex items-center justify-center text-sm hover:bg-red-600\"\n                    >\n                      ×\n                    </button>\n                  </div>\n                )}\n\n                {/* Emoji and GIF Buttons */}\n                <div className=\"flex items-center space-x-2\">\n                  <button\n                    type=\"button\"\n                    onClick={() => setShowEmojiPicker(!showEmojiPicker)}\n                    className=\"text-2xl hover:scale-110 transition-transform\"\n                    title=\"Add emoji\"\n                  >\n                    😀\n                  </button>\n                  <button\n                    type=\"button\"\n                    onClick={() => setShowGifPicker(!showGifPicker)}\n                    className=\"text-2xl hover:scale-110 transition-transform\"\n                    title=\"Add GIF\"\n                  >\n                    🎬\n                  </button>\n                </div>\n\n                {/* Emoji Picker */}\n                {showEmojiPicker && (\n                  <div>\n                    <EmojiPicker\n                      isOpen={showEmojiPicker}\n                      onClose={() => setShowEmojiPicker(false)}\n                      onSelectEmoji={handleEmojiSelect}\n                    />\n                  </div>\n                )}\n\n                {/* GIF Picker */}\n                {showGifPicker && (\n                  <div>\n                    <GifPicker\n                      isOpen={showGifPicker}\n                      onClose={() => setShowGifPicker(false)}\n                      onSelectGif={handleGifSelect}\n                    />\n                  </div>\n                )}\n\n                {/* Message Input and Send Button */}\n                <div className=\"flex space-x-3\">\n                  <input\n                    type=\"text\"\n                    value={newMessage}\n                    onChange={(e) => setNewMessage(e.target.value)}\n                    placeholder=\"Type your message...\"\n                    className=\"flex-1 input-field\"\n                  />\n                  <button\n                    type=\"submit\"\n                    disabled={!newMessage.trim() && !selectedGif}\n                    className=\"btn-primary disabled:opacity-50 disabled:cursor-not-allowed\"\n                  >\n                    Send\n                  </button>\n                </div>\n              </form>\n            </div>\n          </div>\n\n          {/* Alumni Members */}\n          <div className=\"card\">\n            <h3 className=\"text-lg font-semibold text-white mb-4\">Online Alumni</h3>\n            <div className=\"space-y-3\">\n              {alumniMembers.map((member) => (\n                <div key={member.id} className=\"flex items-center space-x-3 p-3 bg-white/5 rounded-lg\">\n                  <div className=\"relative\">\n                    <img\n                      src={member.avatar}\n                      alt={member.name}\n                      className=\"w-10 h-10 rounded-full\"\n                    />\n                    <div className=\"absolute -bottom-1 -right-1 w-3 h-3 bg-green-500 rounded-full border-2 border-white\"></div>\n                  </div>\n                  <div className=\"flex-1\">\n                    <h4 className=\"font-medium text-white text-sm\">{member.name}</h4>\n                    <p className=\"text-white/60 text-xs\">\n                      {member.major} • {member.graduationYear}\n                    </p>\n                    <p className=\"text-white/40 text-xs\">\n                      {formatTimeAgo(member.lastSeen)}\n                    </p>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n        </div>\n\n        {/* Alumni Events */}\n        <div className=\"mt-8\">\n          <div className=\"card\">\n            <h3 className=\"text-xl font-semibold text-white mb-6\">Upcoming Alumni Events</h3>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n              <div className=\"bg-white/5 rounded-lg p-4\">\n                <div className=\"text-2xl mb-2\">🎓</div>\n                <h4 className=\"font-semibold text-white mb-2\">Class of 2023 Reunion</h4>\n                <p className=\"text-white/70 text-sm mb-3\">\n                  Join us for our first reunion since graduation!\n                </p>\n                <div className=\"text-white/60 text-xs\">\n                  📅 Dec 15, 2024 • 📍 Downtown Convention Center\n                </div>\n              </div>\n              <div className=\"bg-white/5 rounded-lg p-4\">\n                <div className=\"text-2xl mb-2\">💼</div>\n                <h4 className=\"font-semibold text-white mb-2\">Career Networking Mixer</h4>\n                <p className=\"text-white/70 text-sm mb-3\">\n                  Connect with alumni in your industry\n                </p>\n                <div className=\"text-white/60 text-xs\">\n                  📅 Jan 20, 2025 • 📍 Tech Hub Downtown\n                </div>\n              </div>\n              <div className=\"bg-white/5 rounded-lg p-4\">\n                <div className=\"text-2xl mb-2\">🎉</div>\n                <h4 className=\"font-semibold text-white mb-2\">Alumni Homecoming</h4>\n                <p className=\"text-white/70 text-sm mb-3\">\n                  Annual celebration with all graduating classes\n                </p>\n                <div className=\"text-white/60 text-xs\">\n                  📅 Feb 28, 2025 • 📍 University Campus\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Simple Verification Modal */}\n      {showVerification && (\n        <div className=\"fixed inset-0 bg-black/50 backdrop-blur-sm flex items-center justify-center z-50\">\n          <div className=\"card max-w-md w-full mx-4 max-h-[90vh] overflow-y-auto\">\n            <h3 className=\"text-xl font-semibold text-white mb-6\">🎓 Simple Alumni Verification</h3>\n            <p className=\"text-white/70 mb-6 text-center\">\n              Just fill out these basic details to get instant access to the Alumni Room!\n            </p>\n            \n            <form onSubmit={handleVerification}>\n              <div className=\"space-y-4\">\n                <div>\n                  <label className=\"block text-sm font-medium text-white mb-2\">\n                    Graduation Year *\n                  </label>\n                  <input\n                    type=\"number\"\n                    name=\"graduationYear\"\n                    value={verificationForm.graduationYear}\n                    onChange={handleChange}\n                    className=\"input-field\"\n                    placeholder=\"e.g., 2023\"\n                    min=\"1980\"\n                    max={new Date().getFullYear() + 1}\n                    required\n                  />\n                </div>\n                \n                <div>\n                  <label className=\"block text-sm font-medium text-white mb-2\">\n                    School/University *\n                  </label>\n                  <input\n                    type=\"text\"\n                    name=\"school\"\n                    value={verificationForm.school}\n                    onChange={handleChange}\n                    className=\"input-field\"\n                    placeholder=\"Your school name\"\n                    required\n                  />\n                </div>\n                \n                <div>\n                  <label className=\"block text-sm font-medium text-white mb-2\">\n                    Major/Field of Study *\n                  </label>\n                  <input\n                    type=\"text\"\n                    name=\"major\"\n                    value={verificationForm.major}\n                    onChange={handleChange}\n                    className=\"input-field\"\n                    placeholder=\"Your major\"\n                    required\n                  />\n                </div>\n              </div>\n              \n              <div className=\"mt-6\">\n                <button\n                  type=\"submit\"\n                  disabled={isVerifying || !verificationForm.graduationYear || !verificationForm.school || !verificationForm.major}\n                  className=\"btn-primary w-full disabled:opacity-50 disabled:cursor-not-allowed\"\n                >\n                  {isVerifying ? 'Verifying...' : '🎉 Get Instant Access!'}\n                </button>\n              </div>\n              \n              <div className=\"mt-4 text-center\">\n                <button\n                  type=\"button\"\n                  onClick={() => setShowVerification(false)}\n                  className=\"text-white/60 hover:text-white transition-colors\"\n                >\n                  Cancel\n                </button>\n              </div>\n            </form>\n            \n            <div className=\"mt-6 p-4 bg-green-500/20 border border-green-500/50 rounded-lg\">\n              <h4 className=\"font-semibold text-green-400 mb-2\">✨ Simple & Fast</h4>\n              <p className=\"text-white/80 text-sm\">\n                No documents needed! Just provide your graduation details and get instant access to the exclusive Alumni Room.\n              </p>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default AlumniRoom;\n","import React, { useState, useRef, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { useAuth } from '../contexts/AuthContext';\n\ninterface VideoCallProps {\n  roomId?: string;\n  userName?: string;\n  onLeaveRoom?: () => void;\n}\n\nconst VideoCall: React.FC<VideoCallProps> = ({ roomId: propRoomId, userName: propUserName, onLeaveRoom }) => {\n  const { roomId: urlRoomId } = useParams<{ roomId: string }>();\n  const { user } = useAuth();\n  const navigate = useNavigate();\n  \n  const roomId = propRoomId || urlRoomId || 'default-room';\n  const userName = propUserName || user?.firstName || 'Anonymous';\n  \n  const [isVideoEnabled, setIsVideoEnabled] = useState(true);\n  const [isAudioEnabled, setIsAudioEnabled] = useState(true);\n  const [isScreenSharing, setIsScreenSharing] = useState(false);\n  const [isChatOpen, setIsChatOpen] = useState(false);\n  const [chatMessages, setChatMessages] = useState<Array<{id: string, user: string, message: string, timestamp: Date}>>([]);\n  const [newMessage, setNewMessage] = useState('');\n  const [showBackgroundPicker, setShowBackgroundPicker] = useState(false);\n  const [selectedBackground, setSelectedBackground] = useState<string>('none');\n  const [customBackgroundUrl, setCustomBackgroundUrl] = useState<string>('');\n  const [uploadedImage, setUploadedImage] = useState<string>('');\n  \n  const [participants, setParticipants] = useState([\n    { id: '1', name: 'You', avatar: user?.avatar || `https://api.dicebear.com/7.x/avataaars/svg?seed=${userName}` },\n    { id: '2', name: 'Sarah Johnson', avatar: 'https://api.dicebear.com/7.x/avataaars/svg?seed=sarah' },\n    { id: '3', name: 'Mike Chen', avatar: 'https://api.dicebear.com/7.x/avataaars/svg?seed=mike' },\n  ]);\n\n  // Predefined background options\n  const backgroundOptions = [\n    { id: 'none', name: 'No Background', url: '' },\n    { id: 'blur', name: 'Blur Background', url: 'blur' },\n    { id: 'office', name: 'Office', url: 'https://images.unsplash.com/photo-1497366216548-37526070297c?w=1920&h=1080&fit=crop' },\n    { id: 'nature', name: 'Nature', url: 'https://images.unsplash.com/photo-1506905925346-21bda4d32df4?w=1920&h=1080&fit=crop' },\n    { id: 'city', name: 'City', url: 'https://images.unsplash.com/photo-1449824913935-59a10b8d7250?w=1920&h=1080&fit=crop' },\n    { id: 'abstract', name: 'Abstract', url: 'https://images.unsplash.com/photo-1557683316-973673baf926?w=1920&h=1080&fit=crop' },\n    { id: 'beach', name: 'Beach', url: 'https://images.unsplash.com/photo-1507525428034-b723cf961d3e?w=1920&h=1080&fit=crop' },\n    { id: 'mountains', name: 'Mountains', url: 'https://images.unsplash.com/photo-1464822759844-d150baec0134?w=1920&h=1080&fit=crop' },\n    { id: 'custom', name: 'Custom URL', url: 'custom' },\n    { id: 'upload', name: 'Upload Image', url: 'upload' }\n  ];\n\n  const localVideoRef = useRef<HTMLVideoElement>(null);\n  const remoteVideoRef = useRef<HTMLVideoElement>(null);\n  const chatContainerRef = useRef<HTMLDivElement>(null);\n  const localStreamRef = useRef<MediaStream | null>(null);\n  const screenStreamRef = useRef<MediaStream | null>(null);\n  const fileInputRef = useRef<HTMLInputElement>(null);\n\n  useEffect(() => {\n    // Initialize video stream\n    initializeVideo();\n    \n    // Add some sample chat messages\n    setChatMessages([\n      { id: '1', user: 'Sarah Johnson', message: 'Hey everyone! 👋', timestamp: new Date(Date.now() - 1000 * 60 * 2) },\n      { id: '2', user: 'Mike Chen', message: 'Great to see you all!', timestamp: new Date(Date.now() - 1000 * 60 * 1) },\n    ]);\n\n    return () => {\n      // Cleanup video streams\n      cleanupStreams();\n    };\n  }, []);\n\n  const cleanupStreams = () => {\n    console.log('Cleaning up all streams...');\n    \n    // Stop local stream\n    if (localStreamRef.current) {\n      localStreamRef.current.getTracks().forEach(track => {\n        track.stop();\n        console.log('Stopped local track:', track.kind, track.id);\n      });\n      localStreamRef.current = null;\n    }\n    \n    // Stop screen sharing stream\n    if (screenStreamRef.current) {\n      screenStreamRef.current.getTracks().forEach(track => {\n        track.stop();\n        console.log('Stopped screen track:', track.kind, track.id);\n      });\n      screenStreamRef.current = null;\n    }\n    \n    // Clear video elements\n    if (localVideoRef.current) {\n      localVideoRef.current.srcObject = null;\n    }\n    if (remoteVideoRef.current) {\n      remoteVideoRef.current.srcObject = null;\n    }\n    \n    // Force garbage collection hint\n    if (window.gc) {\n      window.gc();\n    }\n    \n    console.log('Stream cleanup completed');\n  };\n\n  const initializeVideo = async () => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        video: {\n          width: { ideal: 1920 },\n          height: { ideal: 1080 },\n          facingMode: 'user'\n        },\n        audio: {\n          echoCancellation: true,\n          noiseSuppression: true,\n          autoGainControl: true\n        }\n      });\n      \n      localStreamRef.current = stream;\n      \n      if (localVideoRef.current) {\n        localVideoRef.current.srcObject = stream;\n        localVideoRef.current.play().catch(console.error);\n      }\n      \n      console.log('Video stream initialized successfully');\n    } catch (error) {\n      console.error('Error accessing camera/microphone:', error);\n      // Fallback to audio only\n      try {\n        const audioStream = await navigator.mediaDevices.getUserMedia({\n          audio: {\n            echoCancellation: true,\n            noiseSuppression: true,\n            autoGainControl: true\n          }\n        });\n        \n        localStreamRef.current = audioStream;\n        console.log('Audio-only stream initialized as fallback');\n      } catch (audioError) {\n        console.error('Error accessing audio:', audioError);\n      }\n    }\n  };\n\n  const toggleVideo = () => {\n    setIsVideoEnabled(!isVideoEnabled);\n    if (localStreamRef.current) {\n      const videoTrack = localStreamRef.current.getVideoTracks()[0];\n      if (videoTrack) {\n        videoTrack.enabled = !isVideoEnabled;\n        console.log('Video track enabled:', videoTrack.enabled);\n      }\n    }\n  };\n\n  const toggleAudio = () => {\n    setIsAudioEnabled(!isAudioEnabled);\n    if (localStreamRef.current) {\n      const audioTrack = localStreamRef.current.getAudioTracks()[0];\n      if (audioTrack) {\n        audioTrack.enabled = !isAudioEnabled;\n        console.log('Audio track enabled:', audioTrack.enabled);\n      }\n    }\n  };\n\n  const toggleScreenShare = async () => {\n    if (!isScreenSharing) {\n      try {\n        const screenStream = await navigator.mediaDevices.getDisplayMedia({\n          video: {\n            displaySurface: 'monitor'\n          },\n          audio: false\n        });\n        \n        screenStreamRef.current = screenStream;\n        \n        if (localVideoRef.current) {\n          localVideoRef.current.srcObject = screenStream;\n          localVideoRef.current.play().catch(console.error);\n        }\n        setIsScreenSharing(true);\n        \n        // Handle screen share stop\n        screenStream.getVideoTracks()[0].addEventListener('ended', () => {\n          toggleScreenShare();\n        });\n        \n        console.log('Screen sharing started');\n      } catch (error) {\n        console.error('Error sharing screen:', error);\n      }\n    } else {\n      // Stop screen sharing and return to camera\n      if (screenStreamRef.current) {\n        screenStreamRef.current.getTracks().forEach(track => track.stop());\n        screenStreamRef.current = null;\n      }\n      \n      if (localStreamRef.current && localVideoRef.current) {\n        localVideoRef.current.srcObject = localStreamRef.current;\n        localVideoRef.current.play().catch(console.error);\n      }\n      setIsScreenSharing(false);\n      console.log('Screen sharing stopped');\n    }\n  };\n\n  const handleBackgroundChange = (backgroundId: string) => {\n    setSelectedBackground(backgroundId);\n    if (backgroundId === 'custom') {\n      setShowBackgroundPicker(true);\n      setUploadedImage('');\n    } else if (backgroundId === 'upload') {\n      setShowBackgroundPicker(false);\n      setCustomBackgroundUrl('');\n      // Trigger file input\n      if (fileInputRef.current) {\n        fileInputRef.current.click();\n      }\n    } else {\n      setShowBackgroundPicker(false);\n      setCustomBackgroundUrl('');\n      setUploadedImage('');\n    }\n    console.log('Background changed to:', backgroundId);\n  };\n\n  const handleFileUpload = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const file = event.target.files?.[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onload = (e) => {\n        const result = e.target?.result as string;\n        setUploadedImage(result);\n        setSelectedBackground('upload');\n        console.log('Image uploaded successfully');\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n\n  const applyCustomBackground = () => {\n    if (customBackgroundUrl.trim()) {\n      setSelectedBackground('custom');\n      setShowBackgroundPicker(false);\n      console.log('Custom background applied:', customBackgroundUrl);\n    }\n  };\n\n  const getBackgroundStyle = () => {\n    if (selectedBackground === 'none') {\n      return {};\n    } else if (selectedBackground === 'blur') {\n      return { \n        filter: 'blur(15px)',\n        transform: 'scale(1.1)' // Prevent blur edges\n      };\n    } else if (selectedBackground === 'custom' && customBackgroundUrl) {\n      return {\n        backgroundImage: `url(${customBackgroundUrl})`,\n        backgroundSize: 'cover',\n        backgroundPosition: 'center',\n        backgroundRepeat: 'no-repeat'\n      };\n    } else if (selectedBackground === 'upload' && uploadedImage) {\n      return {\n        backgroundImage: `url(${uploadedImage})`,\n        backgroundSize: 'cover',\n        backgroundPosition: 'center',\n        backgroundRepeat: 'no-repeat'\n      };\n    } else {\n      const background = backgroundOptions.find(bg => bg.id === selectedBackground);\n      if (background && background.url && background.url !== 'custom' && background.url !== 'upload') {\n        return {\n          backgroundImage: `url(${background.url})`,\n          backgroundSize: 'cover',\n          backgroundPosition: 'center',\n          backgroundRepeat: 'no-repeat'\n        };\n      }\n    }\n    return {};\n  };\n\n  const sendMessage = (e: React.FormEvent) => {\n    e.preventDefault();\n    if (!newMessage.trim()) return;\n\n    const message = {\n      id: Date.now().toString(),\n      user: userName,\n      message: newMessage,\n      timestamp: new Date()\n    };\n\n    setChatMessages([...chatMessages, message]);\n    setNewMessage('');\n    \n    // Auto-scroll to bottom\n    setTimeout(() => {\n      if (chatContainerRef.current) {\n        chatContainerRef.current.scrollTop = chatContainerRef.current.scrollHeight;\n      }\n    }, 100);\n  };\n\n  const leaveCall = () => {\n    console.log('Leaving call, cleaning up...');\n    \n    // Clean up all streams properly\n    cleanupStreams();\n    \n    // Reset states\n    setIsVideoEnabled(false);\n    setIsAudioEnabled(false);\n    setIsScreenSharing(false);\n    \n    // Navigate or call callback\n    if (onLeaveRoom) {\n      onLeaveRoom();\n    } else {\n      navigate('/');\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gray-900 flex flex-col\">\n      {/* Header */}\n      <div className=\"bg-black/50 backdrop-blur-md border-b border-white/20 p-4\">\n        <div className=\"flex items-center justify-between\">\n          <div className=\"flex items-center space-x-4\">\n            <div className=\"w-10 h-10 bg-gradient-to-r from-purple-500 to-blue-500 rounded-lg flex items-center justify-center\">\n              <span className=\"text-white text-xl\">📹</span>\n            </div>\n            <div>\n              <h1 className=\"text-xl font-bold text-white\">Video Call</h1>\n              <p className=\"text-white/60 text-sm\">Room: {roomId}</p>\n            </div>\n          </div>\n          \n          <div className=\"flex items-center space-x-2\">\n            <span className=\"text-white/60 text-sm\">{participants.length} participants</span>\n            <div className=\"w-2 h-2 bg-green-500 rounded-full\"></div>\n          </div>\n        </div>\n      </div>\n\n      {/* Main Content */}\n      <div className=\"flex-1 flex\">\n        {/* Video Area */}\n        <div className=\"flex-1 flex flex-col p-4\">\n          {/* Background Picker */}\n          <div className=\"mb-4 bg-black/30 rounded-lg p-4\">\n            <div className=\"flex items-center space-x-4\">\n              <label className=\"text-white text-sm font-medium\">🎨 Background:</label>\n              <select\n                value={selectedBackground}\n                onChange={(e) => handleBackgroundChange(e.target.value)}\n                className=\"bg-white/10 border border-white/20 rounded-lg px-3 py-2 text-white text-sm focus:outline-none focus:ring-2 focus:ring-purple-500\"\n              >\n                {backgroundOptions.map((bg) => (\n                  <option key={bg.id} value={bg.id} className=\"bg-gray-800 text-white\">\n                    {bg.name}\n                  </option>\n                ))}\n              </select>\n              \n              {selectedBackground === 'custom' && (\n                <div className=\"flex items-center space-x-2\">\n                  <input\n                    type=\"url\"\n                    value={customBackgroundUrl}\n                    onChange={(e) => setCustomBackgroundUrl(e.target.value)}\n                    placeholder=\"Enter image URL...\"\n                    className=\"bg-white/10 border border-white/20 rounded-lg px-3 py-2 text-white text-sm placeholder-white/40 focus:outline-none focus:ring-2 focus:ring-purple-500 w-64\"\n                  />\n                  <button\n                    onClick={applyCustomBackground}\n                    className=\"bg-purple-600 hover:bg-purple-700 text-white px-3 py-2 rounded-lg text-sm transition-colors\"\n                  >\n                    Apply\n                  </button>\n                </div>\n              )}\n\n              {selectedBackground === 'upload' && uploadedImage && (\n                <div className=\"flex items-center space-x-2\">\n                  <span className=\"text-green-400 text-sm\">✅ Image uploaded!</span>\n                  <button\n                    onClick={() => setUploadedImage('')}\n                    className=\"bg-red-600 hover:bg-red-700 text-white px-2 py-1 rounded text-xs transition-colors\"\n                  >\n                    Remove\n                  </button>\n                </div>\n              )}\n            </div>\n          </div>\n\n          {/* Hidden file input for image upload */}\n          <input\n            ref={fileInputRef}\n            type=\"file\"\n            accept=\"image/*\"\n            onChange={handleFileUpload}\n            className=\"hidden\"\n          />\n\n          {/* Main Video Grid */}\n          <div className=\"flex-1 grid grid-cols-1 lg:grid-cols-2 gap-4 mb-4\">\n            {/* Local Video */}\n            <div className=\"relative bg-black rounded-lg overflow-hidden\">\n              <video\n                ref={localVideoRef}\n                autoPlay\n                muted\n                playsInline\n                className=\"w-full h-full object-cover\"\n                style={getBackgroundStyle()}\n              />\n              {!isVideoEnabled && (\n                <div className=\"absolute inset-0 bg-gray-800 flex items-center justify-center\">\n                  <div className=\"text-center\">\n                    <div className=\"text-6xl mb-2\">📷</div>\n                    <p className=\"text-white/60\">Camera Off</p>\n                  </div>\n                </div>\n              )}\n              <div className=\"absolute bottom-2 left-2 bg-black/50 text-white px-2 py-1 rounded text-sm\">\n                {userName} (You)\n              </div>\n              {selectedBackground !== 'none' && (\n                <div className=\"absolute top-2 right-2 bg-purple-600 text-white px-2 py-1 rounded text-xs\">\n                  🎨 {backgroundOptions.find(bg => bg.id === selectedBackground)?.name}\n                </div>\n              )}\n            </div>\n\n            {/* Remote Video */}\n            <div className=\"relative bg-black rounded-lg overflow-hidden\">\n              <video\n                ref={remoteVideoRef}\n                autoPlay\n                playsInline\n                className=\"w-full h-full object-cover\"\n              />\n              <div className=\"absolute bottom-2 left-2 bg-black/50 text-white px-2 py-1 rounded text-sm\">\n                Sarah Johnson\n              </div>\n            </div>\n          </div>\n\n          {/* Participants Row */}\n          <div className=\"flex space-x-4 overflow-x-auto pb-2\">\n            {participants.slice(1).map((participant) => (\n              <div key={participant.id} className=\"flex-shrink-0 text-center\">\n                <div className=\"w-16 h-16 bg-gray-700 rounded-lg flex items-center justify-center mb-1\">\n                  <img\n                    src={participant.avatar}\n                    alt={participant.name}\n                    className=\"w-12 h-12 rounded-full\"\n                  />\n                </div>\n                <p className=\"text-white/80 text-xs\">{participant.name}</p>\n              </div>\n            ))}\n          </div>\n        </div>\n\n        {/* Chat Sidebar */}\n        {isChatOpen && (\n          <div className=\"w-80 bg-black/50 backdrop-blur-md border-l border-white/20 flex flex-col\">\n            <div className=\"p-4 border-b border-white/20\">\n              <h3 className=\"text-white font-semibold\">Chat</h3>\n            </div>\n            \n            <div className=\"flex-1 overflow-y-auto p-4\" ref={chatContainerRef}>\n              <div className=\"space-y-3\">\n                {chatMessages.map((msg) => (\n                  <div key={msg.id} className=\"flex flex-col\">\n                    <div className=\"flex items-center space-x-2 mb-1\">\n                      <span className=\"text-purple-400 font-medium text-sm\">{msg.user}</span>\n                      <span className=\"text-white/40 text-xs\">\n                        {msg.timestamp.toLocaleTimeString()}\n                      </span>\n                    </div>\n                    <p className=\"text-white/80 text-sm bg-white/10 rounded-lg px-3 py-2\">\n                      {msg.message}\n                    </p>\n                  </div>\n                ))}\n              </div>\n            </div>\n            \n            <form onSubmit={sendMessage} className=\"p-4 border-t border-white/20\">\n              <div className=\"flex space-x-2\">\n                <input\n                  type=\"text\"\n                  value={newMessage}\n                  onChange={(e) => setNewMessage(e.target.value)}\n                  placeholder=\"Type a message...\"\n                  className=\"flex-1 bg-white/10 border border-white/20 rounded-lg px-3 py-2 text-white placeholder-white/40 focus:outline-none focus:ring-2 focus:ring-purple-500\"\n                />\n                <button\n                  type=\"submit\"\n                  disabled={!newMessage.trim()}\n                  className=\"bg-purple-600 hover:bg-purple-700 text-white px-4 py-2 rounded-lg disabled:opacity-50\"\n                >\n                  Send\n                </button>\n              </div>\n            </form>\n          </div>\n        )}\n      </div>\n\n      {/* Control Bar */}\n      <div className=\"bg-black/50 backdrop-blur-md border-t border-white/20 p-4\">\n        <div className=\"flex items-center justify-center space-x-4\">\n          {/* Video Toggle */}\n          <button\n            onClick={toggleVideo}\n            className={`p-3 rounded-full transition-colors ${\n              isVideoEnabled \n                ? 'bg-white/20 text-white hover:bg-white/30' \n                : 'bg-red-600 text-white hover:bg-red-700'\n            }`}\n            title={isVideoEnabled ? 'Turn off camera' : 'Turn on camera'}\n          >\n            {isVideoEnabled ? '📹' : '🚫'}\n          </button>\n\n          {/* Audio Toggle */}\n          <button\n            onClick={toggleAudio}\n            className={`p-3 rounded-full transition-colors ${\n              isAudioEnabled \n                ? 'bg-white/20 text-white hover:bg-white/30' \n                : 'bg-red-600 text-white hover:bg-red-700'\n            }`}\n            title={isAudioEnabled ? 'Mute microphone' : 'Unmute microphone'}\n          >\n            {isAudioEnabled ? '🎤' : '🔇'}\n          </button>\n\n          {/* Screen Share */}\n          <button\n            onClick={toggleScreenShare}\n            className={`p-3 rounded-full transition-colors ${\n              isScreenSharing \n                ? 'bg-purple-600 text-white hover:bg-purple-700' \n                : 'bg-white/20 text-white hover:bg-white/30'\n            }`}\n            title={isScreenSharing ? 'Stop sharing' : 'Share screen'}\n          >\n            {isScreenSharing ? '🖥️' : '💻'}\n          </button>\n\n          {/* Chat Toggle */}\n          <button\n            onClick={() => setIsChatOpen(!isChatOpen)}\n            className={`p-3 rounded-full transition-colors ${\n              isChatOpen \n                ? 'bg-purple-600 text-white hover:bg-purple-700' \n                : 'bg-white/20 text-white hover:bg-white/30'\n            }`}\n            title={isChatOpen ? 'Close chat' : 'Open chat'}\n          >\n            💬\n          </button>\n\n          {/* Leave Call */}\n          <button\n            onClick={leaveCall}\n            className=\"bg-red-600 hover:bg-red-700 text-white px-6 py-3 rounded-full font-medium transition-colors\"\n          >\n            Leave Call\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default VideoCall;\n","import React, { useState, useEffect } from 'react';\nimport { useAuth } from '../contexts/AuthContext';\n\ninterface Product {\n  id: string;\n  name: string;\n  description: string;\n  price: number;\n  originalPrice?: number;\n  image: string;\n  category: string;\n  seller: {\n    id: string;\n    name: string;\n    avatar: string;\n    rating: number;\n  };\n  rating: number;\n  reviews: number;\n  sold: number;\n  tags: string[];\n  isNew?: boolean;\n  isHot?: boolean;\n  discount?: number;\n}\n\ninterface CartItem {\n  product: Product;\n  quantity: number;\n}\n\nconst Marketplace: React.FC = () => {\n  const { user } = useAuth();\n  const [products, setProducts] = useState<Product[]>([]);\n  const [filteredProducts, setFilteredProducts] = useState<Product[]>([]);\n  const [cart, setCart] = useState<CartItem[]>([]);\n  const [selectedCategory, setSelectedCategory] = useState<string>('all');\n  const [searchQuery, setSearchQuery] = useState('');\n  const [showCart, setShowCart] = useState(false);\n  const [sortBy, setSortBy] = useState<'popular' | 'price-low' | 'price-high' | 'newest'>('popular');\n\n  const categories = [\n    { id: 'all', name: 'All', icon: '🛍️' },\n    { id: 'fashion', name: 'Fashion', icon: '👗' },\n    { id: 'electronics', name: 'Electronics', icon: '📱' },\n    { id: 'home', name: 'Home & Garden', icon: '🏠' },\n    { id: 'beauty', name: 'Beauty', icon: '💄' },\n    { id: 'sports', name: 'Sports', icon: '⚽' },\n    { id: 'books', name: 'Books', icon: '📚' },\n    { id: 'toys', name: 'Toys & Games', icon: '🎮' },\n  ];\n\n  useEffect(() => {\n    // Mock products data\n    const mockProducts: Product[] = [\n      {\n        id: '1',\n        name: 'Wireless Bluetooth Headphones',\n        description: 'Premium sound quality with noise cancellation',\n        price: 89.99,\n        originalPrice: 129.99,\n        image: 'https://images.unsplash.com/photo-1505740420928-5e560c06d30e?w=300&h=300&fit=crop',\n        category: 'electronics',\n        seller: {\n          id: '1',\n          name: 'TechStore',\n          avatar: 'https://api.dicebear.com/7.x/avataaars/svg?seed=techstore',\n          rating: 4.8,\n        },\n        rating: 4.7,\n        reviews: 1247,\n        sold: 8923,\n        tags: ['wireless', 'bluetooth', 'noise-cancelling'],\n        isHot: true,\n        discount: 31,\n      },\n      {\n        id: '2',\n        name: 'Vintage Denim Jacket',\n        description: 'Classic style with modern comfort',\n        price: 45.99,\n        image: 'https://images.unsplash.com/photo-1551028719-00167b16eac5?w=300&h=300&fit=crop',\n        category: 'fashion',\n        seller: {\n          id: '2',\n          name: 'VintageVibes',\n          avatar: 'https://api.dicebear.com/7.x/avataaars/svg?seed=vintagevibes',\n          rating: 4.9,\n        },\n        rating: 4.8,\n        reviews: 892,\n        sold: 3456,\n        tags: ['vintage', 'denim', 'jacket'],\n        isNew: true,\n      },\n      {\n        id: '3',\n        name: 'Smart Home Security Camera',\n        description: '1080p HD with night vision and motion detection',\n        price: 129.99,\n        originalPrice: 199.99,\n        image: 'https://images.unsplash.com/photo-1558618666-fcd25c85cd64?w=300&h=300&fit=crop',\n        category: 'electronics',\n        seller: {\n          id: '3',\n          name: 'SmartHome',\n          avatar: 'https://api.dicebear.com/7.x/avataaars/svg?seed=smarthome',\n          rating: 4.6,\n        },\n        rating: 4.5,\n        reviews: 567,\n        sold: 2341,\n        tags: ['security', 'camera', 'smart-home'],\n        discount: 35,\n      },\n      {\n        id: '4',\n        name: 'Organic Face Serum',\n        description: 'Natural ingredients for glowing skin',\n        price: 34.99,\n        image: 'https://images.unsplash.com/photo-1556228720-195a672e8a03?w=300&h=300&fit=crop',\n        category: 'beauty',\n        seller: {\n          id: '4',\n          name: 'NaturalGlow',\n          avatar: 'https://api.dicebear.com/7.x/avataaars/svg?seed=naturalglow',\n          rating: 4.7,\n        },\n        rating: 4.6,\n        reviews: 1234,\n        sold: 5678,\n        tags: ['organic', 'skincare', 'serum'],\n        isHot: true,\n      },\n      {\n        id: '5',\n        name: 'Yoga Mat Premium',\n        description: 'Non-slip, eco-friendly yoga mat',\n        price: 29.99,\n        image: 'https://images.unsplash.com/photo-1544367567-0f2fcb009e0b?w=300&h=300&fit=crop',\n        category: 'sports',\n        seller: {\n          id: '5',\n          name: 'FitLife',\n          avatar: 'https://api.dicebear.com/7.x/avataaars/svg?seed=fitlife',\n          rating: 4.8,\n        },\n        rating: 4.7,\n        reviews: 789,\n        sold: 3456,\n        tags: ['yoga', 'fitness', 'eco-friendly'],\n      },\n      {\n        id: '6',\n        name: 'Modern Coffee Table',\n        description: 'Minimalist design with storage',\n        price: 199.99,\n        image: 'https://images.unsplash.com/photo-1586023492125-27b2c045efd7?w=300&h=300&fit=crop',\n        category: 'home',\n        seller: {\n          id: '6',\n          name: 'ModernLiving',\n          avatar: 'https://api.dicebear.com/7.x/avataaars/svg?seed=modernliving',\n          rating: 4.9,\n        },\n        rating: 4.8,\n        reviews: 456,\n        sold: 1234,\n        tags: ['furniture', 'modern', 'storage'],\n        isNew: true,\n      },\n    ];\n\n    setProducts(mockProducts);\n    setFilteredProducts(mockProducts);\n  }, []);\n\n  useEffect(() => {\n    let filtered = products;\n\n    // Filter by category\n    if (selectedCategory !== 'all') {\n      filtered = filtered.filter(product => product.category === selectedCategory);\n    }\n\n    // Filter by search query\n    if (searchQuery) {\n      filtered = filtered.filter(product =>\n        product.name.toLowerCase().includes(searchQuery.toLowerCase()) ||\n        product.description.toLowerCase().includes(searchQuery.toLowerCase()) ||\n        product.tags.some(tag => tag.toLowerCase().includes(searchQuery.toLowerCase()))\n      );\n    }\n\n    // Sort products\n    switch (sortBy) {\n      case 'price-low':\n        filtered = [...filtered].sort((a, b) => a.price - b.price);\n        break;\n      case 'price-high':\n        filtered = [...filtered].sort((a, b) => b.price - a.price);\n        break;\n      case 'newest':\n        filtered = [...filtered].sort((a, b) => (b.isNew ? 1 : 0) - (a.isNew ? 1 : 0));\n        break;\n      case 'popular':\n      default:\n        filtered = [...filtered].sort((a, b) => b.sold - a.sold);\n        break;\n    }\n\n    setFilteredProducts(filtered);\n  }, [products, selectedCategory, searchQuery, sortBy]);\n\n  const addToCart = (product: Product) => {\n    setCart(prevCart => {\n      const existingItem = prevCart.find(item => item.product.id === product.id);\n      if (existingItem) {\n        return prevCart.map(item =>\n          item.product.id === product.id\n            ? { ...item, quantity: item.quantity + 1 }\n            : item\n        );\n      } else {\n        return [...prevCart, { product, quantity: 1 }];\n      }\n    });\n  };\n\n  const removeFromCart = (productId: string) => {\n    setCart(prevCart => prevCart.filter(item => item.product.id !== productId));\n  };\n\n  const updateQuantity = (productId: string, quantity: number) => {\n    if (quantity <= 0) {\n      removeFromCart(productId);\n      return;\n    }\n    setCart(prevCart =>\n      prevCart.map(item =>\n        item.product.id === productId\n          ? { ...item, quantity }\n          : item\n      )\n    );\n  };\n\n  const getCartTotal = () => {\n    return cart.reduce((total, item) => total + (item.product.price * item.quantity), 0);\n  };\n\n  const getCartItemCount = () => {\n    return cart.reduce((total, item) => total + item.quantity, 0);\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-purple-900 via-blue-900 to-indigo-900\">\n      {/* Header */}\n      <div className=\"bg-black/20 backdrop-blur-md border-b border-white/20 sticky top-0 z-50\">\n        <div className=\"max-w-7xl mx-auto px-4 py-4\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center space-x-4\">\n              <div className=\"w-10 h-10 bg-gradient-to-r from-purple-500 to-blue-500 rounded-full flex items-center justify-center\">\n                <span className=\"text-white text-xl\">🛍️</span>\n              </div>\n              <h1 className=\"text-2xl font-bold text-white\">Star Shop</h1>\n            </div>\n\n            {/* Search Bar */}\n            <div className=\"flex-1 max-w-md mx-8\">\n              <div className=\"relative\">\n                <input\n                  type=\"text\"\n                  placeholder=\"Search products...\"\n                  value={searchQuery}\n                  onChange={(e) => setSearchQuery(e.target.value)}\n                  className=\"w-full bg-white/10 backdrop-blur-md border border-white/20 rounded-lg px-4 py-2 text-white placeholder-white/60 focus:outline-none focus:ring-2 focus:ring-purple-500\"\n                />\n                <span className=\"absolute right-3 top-2.5 text-white/60\">🔍</span>\n              </div>\n            </div>\n\n            {/* Cart Button */}\n            <button\n              onClick={() => setShowCart(!showCart)}\n              className=\"relative bg-purple-600 hover:bg-purple-700 text-white px-4 py-2 rounded-lg transition-colors\"\n            >\n              🛒 Cart\n              {getCartItemCount() > 0 && (\n                <span className=\"absolute -top-2 -right-2 bg-red-500 text-white text-xs rounded-full w-5 h-5 flex items-center justify-center\">\n                  {getCartItemCount()}\n                </span>\n              )}\n            </button>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"max-w-7xl mx-auto px-4 py-8\">\n        {/* Categories */}\n        <div className=\"mb-8\">\n          <div className=\"flex space-x-4 overflow-x-auto pb-4\">\n            {categories.map((category) => (\n              <button\n                key={category.id}\n                onClick={() => setSelectedCategory(category.id)}\n                className={`flex items-center space-x-2 px-4 py-2 rounded-lg whitespace-nowrap transition-colors ${\n                  selectedCategory === category.id\n                    ? 'bg-purple-600 text-white'\n                    : 'bg-white/10 text-white/80 hover:bg-white/20'\n                }`}\n              >\n                <span>{category.icon}</span>\n                <span>{category.name}</span>\n              </button>\n            ))}\n          </div>\n        </div>\n\n        {/* Sort Options */}\n        <div className=\"flex items-center justify-between mb-6\">\n          <h2 className=\"text-xl font-semibold text-white\">\n            {selectedCategory === 'all' ? 'All Products' : categories.find(c => c.id === selectedCategory)?.name}\n          </h2>\n          <select\n            value={sortBy}\n            onChange={(e) => setSortBy(e.target.value as any)}\n            className=\"bg-white/10 backdrop-blur-md border border-white/20 rounded-lg px-3 py-2 text-white focus:outline-none focus:ring-2 focus:ring-purple-500\"\n          >\n            <option value=\"popular\">Most Popular</option>\n            <option value=\"price-low\">Price: Low to High</option>\n            <option value=\"price-high\">Price: High to Low</option>\n            <option value=\"newest\">Newest First</option>\n          </select>\n        </div>\n\n        {/* Products Grid */}\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6\">\n          {filteredProducts.map((product) => (\n            <div key={product.id} className=\"card hover:scale-105 transition-transform duration-300 group\">\n              {/* Product Image */}\n              <div className=\"relative mb-4\">\n                <img\n                  src={product.image}\n                  alt={product.name}\n                  className=\"w-full h-48 object-cover rounded-lg\"\n                />\n                \n                {/* Badges */}\n                <div className=\"absolute top-2 left-2 flex space-x-2\">\n                  {product.isNew && (\n                    <span className=\"bg-blue-500 text-white text-xs px-2 py-1 rounded-full\">NEW</span>\n                  )}\n                  {product.isHot && (\n                    <span className=\"bg-red-500 text-white text-xs px-2 py-1 rounded-full\">HOT</span>\n                  )}\n                  {product.discount && (\n                    <span className=\"bg-green-500 text-white text-xs px-2 py-1 rounded-full\">-{product.discount}%</span>\n                  )}\n                </div>\n\n                {/* Quick Add Button */}\n                <button\n                  onClick={() => addToCart(product)}\n                  className=\"absolute bottom-2 right-2 bg-purple-600 hover:bg-purple-700 text-white p-2 rounded-full opacity-0 group-hover:opacity-100 transition-opacity\"\n                  title=\"Add to cart\"\n                >\n                  🛒\n                </button>\n              </div>\n\n              {/* Product Info */}\n              <div className=\"space-y-2\">\n                <h3 className=\"font-semibold text-white text-lg line-clamp-2\">{product.name}</h3>\n                <p className=\"text-white/70 text-sm line-clamp-2\">{product.description}</p>\n                \n                {/* Price */}\n                <div className=\"flex items-center space-x-2\">\n                  <span className=\"text-xl font-bold text-white\">${product.price}</span>\n                  {product.originalPrice && (\n                    <span className=\"text-white/60 line-through\">${product.originalPrice}</span>\n                  )}\n                </div>\n\n                {/* Seller Info */}\n                <div className=\"flex items-center space-x-2\">\n                  <img\n                    src={product.seller.avatar}\n                    alt={product.seller.name}\n                    className=\"w-6 h-6 rounded-full\"\n                  />\n                  <span className=\"text-white/60 text-sm\">{product.seller.name}</span>\n                  <span className=\"text-yellow-400 text-sm\">⭐ {product.seller.rating}</span>\n                </div>\n\n                {/* Stats */}\n                <div className=\"flex items-center justify-between text-sm text-white/60\">\n                  <span>⭐ {product.rating} ({product.reviews})</span>\n                  <span>Sold: {product.sold}</span>\n                </div>\n\n                {/* Tags */}\n                <div className=\"flex flex-wrap gap-1\">\n                  {product.tags.slice(0, 3).map((tag) => (\n                    <span\n                      key={tag}\n                      className=\"bg-white/10 text-white/60 text-xs px-2 py-1 rounded-full\"\n                    >\n                      #{tag}\n                    </span>\n                  ))}\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n\n        {/* No Results */}\n        {filteredProducts.length === 0 && (\n          <div className=\"text-center py-12\">\n            <div className=\"text-6xl mb-4\">🔍</div>\n            <h3 className=\"text-xl font-semibold text-white mb-2\">No products found</h3>\n            <p className=\"text-white/60\">Try adjusting your search or category filters</p>\n          </div>\n        )}\n      </div>\n\n      {/* Shopping Cart Sidebar */}\n      {showCart && (\n        <div className=\"fixed inset-0 bg-black/50 backdrop-blur-sm z-50\">\n          <div className=\"absolute right-0 top-0 h-full w-96 bg-gray-900 shadow-2xl\">\n            <div className=\"p-6\">\n              <div className=\"flex items-center justify-between mb-6\">\n                <h2 className=\"text-xl font-semibold text-white\">Shopping Cart</h2>\n                <button\n                  onClick={() => setShowCart(false)}\n                  className=\"text-white/60 hover:text-white\"\n                >\n                  ✕\n                </button>\n              </div>\n\n              {cart.length === 0 ? (\n                <div className=\"text-center py-12\">\n                  <div className=\"text-4xl mb-4\">🛒</div>\n                  <p className=\"text-white/60\">Your cart is empty</p>\n                </div>\n              ) : (\n                <>\n                  <div className=\"space-y-4 mb-6 max-h-96 overflow-y-auto\">\n                    {cart.map((item) => (\n                      <div key={item.product.id} className=\"flex items-center space-x-3 p-3 bg-white/5 rounded-lg\">\n                        <img\n                          src={item.product.image}\n                          alt={item.product.name}\n                          className=\"w-16 h-16 object-cover rounded-lg\"\n                        />\n                        <div className=\"flex-1\">\n                          <h4 className=\"font-medium text-white text-sm\">{item.product.name}</h4>\n                          <p className=\"text-white/60 text-sm\">${item.product.price}</p>\n                        </div>\n                        <div className=\"flex items-center space-x-2\">\n                          <button\n                            onClick={() => updateQuantity(item.product.id, item.quantity - 1)}\n                            className=\"w-6 h-6 bg-white/10 text-white rounded-full flex items-center justify-center hover:bg-white/20\"\n                          >\n                            -\n                          </button>\n                          <span className=\"text-white w-8 text-center\">{item.quantity}</span>\n                          <button\n                            onClick={() => updateQuantity(item.product.id, item.quantity + 1)}\n                            className=\"w-6 h-6 bg-white/10 text-white rounded-full flex items-center justify-center hover:bg-white/20\"\n                          >\n                            +\n                          </button>\n                        </div>\n                        <button\n                          onClick={() => removeFromCart(item.product.id)}\n                          className=\"text-red-400 hover:text-red-300\"\n                        >\n                          🗑️\n                        </button>\n                      </div>\n                    ))}\n                  </div>\n\n                  <div className=\"border-t border-white/20 pt-4\">\n                    <div className=\"flex justify-between items-center mb-4\">\n                      <span className=\"text-white font-semibold\">Total:</span>\n                      <span className=\"text-white font-bold text-xl\">${getCartTotal().toFixed(2)}</span>\n                    </div>\n                    <button className=\"w-full bg-purple-600 hover:bg-purple-700 text-white py-3 rounded-lg font-medium transition-colors\">\n                      Checkout\n                    </button>\n                  </div>\n                </>\n              )}\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Marketplace;\n","import React, { useState, useEffect } from 'react';\nimport { useAuth } from '../contexts/AuthContext';\n\ninterface LeaderboardUser {\n  id: string;\n  username: string;\n  firstName: string;\n  lastName: string;\n  avatar: string;\n  posts: number;\n  likes: number;\n  comments: number;\n  totalScore: number;\n  rank: number;\n  isCurrentUser: boolean;\n  badge?: '🥇' | '🥈' | '🥉' | '⭐';\n  role: 'user' | 'admin' | 'owner' | 'celebrity';\n}\n\ninterface WeeklyWinner {\n  position: 1 | 2 | 3;\n  user: LeaderboardUser;\n  prize: string;\n  description: string;\n}\n\nconst Leaderboard: React.FC = () => {\n  const { user } = useAuth();\n  const [leaderboard, setLeaderboard] = useState<LeaderboardUser[]>([]);\n  const [weeklyWinners, setWeeklyWinners] = useState<WeeklyWinner[]>([]);\n  const [timeFrame, setTimeFrame] = useState<'week' | 'month' | 'allTime'>('week');\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    loadLeaderboard();\n    loadWeeklyWinners();\n  }, [timeFrame]);\n\n  const loadLeaderboard = async () => {\n    setIsLoading(true);\n    \n    // Simulate API call delay\n    await new Promise(resolve => setTimeout(resolve, 1000));\n    \n    // Mock leaderboard data\n    const mockLeaderboard: LeaderboardUser[] = [\n      {\n        id: '1',\n        username: 'sarah_j',\n        firstName: 'Sarah',\n        lastName: 'Johnson',\n        avatar: 'https://api.dicebear.com/7.x/avataaars/svg?seed=sarah',\n        posts: 47,\n        likes: 892,\n        comments: 156,\n        totalScore: 1095,\n        rank: 1,\n        badge: '🥇',\n        isCurrentUser: user?.id === '1',\n        role: 'celebrity',\n      },\n      {\n        id: '2',\n        username: 'mike_chen',\n        firstName: 'Mike',\n        lastName: 'Chen',\n        avatar: 'https://api.dicebear.com/7.x/avataaars/svg?seed=mike',\n        posts: 38,\n        likes: 745,\n        comments: 123,\n        totalScore: 906,\n        rank: 2,\n        badge: '🥈',\n        isCurrentUser: user?.id === '2',\n        role: 'admin',\n      },\n      {\n        id: '3',\n        username: 'emma_w',\n        firstName: 'Emma',\n        lastName: 'Wilson',\n        avatar: 'https://api.dicebear.com/7.x/avataaars/svg?seed=emma',\n        posts: 32,\n        likes: 678,\n        comments: 98,\n        totalScore: 808,\n        rank: 3,\n        badge: '🥉',\n        isCurrentUser: user?.id === '3',\n        role: 'user',\n      },\n      {\n        id: '4',\n        username: 'david_r',\n        firstName: 'David',\n        lastName: 'Rodriguez',\n        avatar: 'https://api.dicebear.com/7.x/avataaars/svg?seed=david',\n        posts: 28,\n        likes: 567,\n        comments: 87,\n        totalScore: 682,\n        rank: 4,\n        badge: '⭐',\n        isCurrentUser: user?.id === '4',\n        role: 'user',\n      },\n      {\n        id: '5',\n        username: 'alex_t',\n        firstName: 'Alex',\n        lastName: 'Thompson',\n        avatar: 'https://api.dicebear.com/7.x/avataaars/svg?seed=alex',\n        posts: 25,\n        likes: 489,\n        comments: 76,\n        totalScore: 590,\n        rank: 5,\n        badge: undefined,\n        isCurrentUser: user?.id === '5',\n        role: 'user',\n      },\n      {\n        id: '6',\n        username: 'lisa_k',\n        firstName: 'Lisa',\n        lastName: 'Kim',\n        avatar: 'https://api.dicebear.com/7.x/avataaars/svg?seed=lisa',\n        posts: 22,\n        likes: 432,\n        comments: 65,\n        totalScore: 519,\n        rank: 6,\n        badge: undefined,\n        isCurrentUser: user?.id === '6',\n        role: 'user',\n      },\n      {\n        id: '7',\n        username: 'james_b',\n        firstName: 'James',\n        lastName: 'Brown',\n        avatar: 'https://api.dicebear.com/7.x/avataaars/svg?seed=james',\n        posts: 19,\n        likes: 398,\n        comments: 54,\n        totalScore: 471,\n        rank: 7,\n        badge: undefined,\n        isCurrentUser: user?.id === '7',\n        role: 'user',\n      },\n      {\n        id: '8',\n        username: 'sophia_l',\n        firstName: 'Sophia',\n        lastName: 'Lee',\n        avatar: 'https://api.dicebear.com/7.x/avataaars/svg?seed=sophia',\n        posts: 16,\n        likes: 345,\n        comments: 43,\n        totalScore: 404,\n        rank: 8,\n        badge: undefined,\n        isCurrentUser: user?.id === '8',\n        role: 'user',\n      },\n      {\n        id: '9',\n        username: 'ryan_m',\n        firstName: 'Ryan',\n        lastName: 'Miller',\n        avatar: 'https://api.dicebear.com/7.x/avataaars/svg?seed=ryan',\n        posts: 14,\n        likes: 298,\n        comments: 38,\n        totalScore: 350,\n        rank: 9,\n        badge: undefined,\n        isCurrentUser: user?.id === '9',\n        role: 'user',\n      },\n      {\n        id: '10',\n        username: 'olivia_d',\n        firstName: 'Olivia',\n        lastName: 'Davis',\n        avatar: 'https://api.dicebear.com/7.x/avataaars/svg?seed=olivia',\n        posts: 12,\n        likes: 267,\n        comments: 32,\n        totalScore: 311,\n        rank: 10,\n        badge: undefined,\n        isCurrentUser: user?.id === '10',\n        role: 'user',\n      },\n    ];\n\n    setLeaderboard(mockLeaderboard);\n    setIsLoading(false);\n  };\n\n  const loadWeeklyWinners = async () => {\n    // Mock weekly winners data\n    const mockWinners: WeeklyWinner[] = [\n      {\n        position: 1,\n        user: {\n          id: '1',\n          username: 'sarah_j',\n          firstName: 'Sarah',\n          lastName: 'Johnson',\n          avatar: 'https://api.dicebear.com/7.x/avataaars/svg?seed=sarah',\n          posts: 47,\n          likes: 892,\n          comments: 156,\n          totalScore: 1095,\n          rank: 1,\n          badge: '🥇',\n          isCurrentUser: false,\n          role: 'celebrity',\n        },\n        prize: '🏆 Champion Badge + 1000 Star Points',\n        description: 'Most active user this week with amazing content!',\n      },\n      {\n        position: 2,\n        user: {\n          id: '2',\n          username: 'mike_chen',\n          firstName: 'Mike',\n          lastName: 'Chen',\n          avatar: 'https://api.dicebear.com/7.x/avataaars/svg?seed=mike',\n          posts: 38,\n          likes: 745,\n          comments: 123,\n          totalScore: 906,\n          rank: 2,\n          badge: '🥈',\n          isCurrentUser: false,\n          role: 'admin',\n        },\n        prize: '🥈 Silver Badge + 500 Star Points',\n        description: 'Second place with consistent high-quality posts!',\n      },\n      {\n        position: 3,\n        user: {\n          id: '3',\n          username: 'emma_w',\n          firstName: 'Emma',\n          lastName: 'Wilson',\n          avatar: 'https://api.dicebear.com/7.x/avataaars/svg?seed=emma',\n          posts: 32,\n          likes: 678,\n          comments: 98,\n          totalScore: 808,\n          rank: 3,\n          badge: '🥉',\n          isCurrentUser: false,\n          role: 'user',\n        },\n        prize: '🥉 Bronze Badge + 250 Star Points',\n        description: 'Third place with engaging community interaction!',\n      },\n    ];\n\n    setWeeklyWinners(mockWinners);\n  };\n\n  const getTimeFrameLabel = () => {\n    switch (timeFrame) {\n      case 'week':\n        return 'This Week';\n      case 'month':\n        return 'This Month';\n      case 'allTime':\n        return 'All Time';\n      default:\n        return 'This Week';\n    }\n  };\n\n  const getScoreColor = (rank: number) => {\n    if (rank === 1) return 'text-yellow-400';\n    if (rank === 2) return 'text-gray-300';\n    if (rank === 3) return 'text-amber-600';\n    return 'text-white/60';\n  };\n\n  const getRoleBadge = (role: string) => {\n    switch (role) {\n      case 'owner':\n        return <span className=\"text-yellow-400 text-lg\" title=\"App Owner\">👑</span>;\n      case 'admin':\n        return <span className=\"text-blue-400 text-lg\" title=\"Administrator\">⭐</span>;\n      case 'celebrity':\n        return <span className=\"text-purple-400 text-lg\" title=\"Celebrity\">⭐</span>;\n      default:\n        return null;\n    }\n  };\n\n  const getRankDisplay = (rank: number) => {\n    if (rank === 1) return <span className=\"text-yellow-400 font-bold\">#1</span>;\n    if (rank === 2) return <span className=\"text-gray-300 font-bold\">#2</span>;\n    if (rank === 3) return <span className=\"text-amber-600 font-bold\">#3</span>;\n    return <span className=\"text-white/60\">#{rank}</span>;\n  };\n\n  if (isLoading) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center\">\n        <div className=\"animate-spin rounded-full h-32 w-32 border-b-2 border-white\"></div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen py-8 px-4 sm:px-6 lg:px-8\">\n      <div className=\"max-w-6xl mx-auto\">\n        {/* Header */}\n        <div className=\"text-center mb-12\">\n          <h1 className=\"text-5xl font-bold text-white mb-4\">\n            🏆 Leaderboard\n          </h1>\n          <p className=\"text-xl text-white/60 max-w-2xl mx-auto\">\n            Compete with friends and see who's the most active on Star App\n          </p>\n        </div>\n\n        {/* Weekly Winners Section */}\n        <div className=\"mb-12\">\n          <h2 className=\"text-3xl font-bold text-white mb-6 text-center\">\n            🎉 This Week's Winners\n          </h2>\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n            {weeklyWinners.map((winner) => (\n              <div\n                key={winner.position}\n                className={`card text-center transform hover:scale-105 transition-transform duration-300 ${\n                  winner.position === 1 ? 'ring-2 ring-yellow-400' : ''\n                }`}\n              >\n                <div className=\"text-6xl mb-4\">{winner.user.badge}</div>\n                <div className=\"w-24 h-24 mx-auto mb-4\">\n                  <img\n                    src={winner.user.avatar}\n                    alt={winner.user.firstName}\n                    className=\"w-full h-full rounded-full border-4 border-white/20\"\n                  />\n                </div>\n                <h3 className=\"text-xl font-bold text-white mb-2\">\n                  {winner.user.firstName} {winner.user.lastName}\n                </h3>\n                <p className=\"text-white/60 mb-3\">@{winner.user.username}</p>\n                <div className=\"bg-white/10 rounded-lg p-3 mb-4\">\n                  <p className=\"text-purple-400 font-semibold mb-1\">{winner.prize}</p>\n                  <p className=\"text-white/80 text-sm\">{winner.description}</p>\n                </div>\n                <div className=\"flex justify-center space-x-4 text-sm\">\n                  <div>\n                    <div className=\"text-white font-semibold\">{winner.user.posts}</div>\n                    <div className=\"text-white/60\">Posts</div>\n                  </div>\n                  <div>\n                    <div className=\"text-white font-semibold\">{winner.user.likes}</div>\n                    <div className=\"text-white/60\">Likes</div>\n                  </div>\n                  <div>\n                    <div className=\"text-white font-semibold\">{winner.user.comments}</div>\n                    <div className=\"text-white/60\">Comments</div>\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n\n        {/* Leaderboard Section */}\n        <div className=\"card\">\n          <div className=\"flex items-center justify-between mb-6\">\n            <h2 className=\"text-2xl font-bold text-white\">\n              Top 10 Users - {getTimeFrameLabel()}\n            </h2>\n            <div className=\"flex space-x-2\">\n              <button\n                onClick={() => setTimeFrame('week')}\n                className={`px-4 py-2 rounded-lg transition-colors ${\n                  timeFrame === 'week'\n                    ? 'bg-purple-600 text-white'\n                    : 'bg-white/10 text-white/60 hover:bg-white/20'\n                }`}\n              >\n                Week\n              </button>\n              <button\n                onClick={() => setTimeFrame('month')}\n                className={`px-4 py-2 rounded-lg transition-colors ${\n                  timeFrame === 'month'\n                    ? 'bg-purple-600 text-white'\n                    : 'bg-white/10 text-white/60 hover:bg-white/20'\n                }`}\n              >\n                Month\n              </button>\n              <button\n                onClick={() => setTimeFrame('allTime')}\n                className={`px-4 py-2 rounded-lg transition-colors ${\n                  timeFrame === 'allTime'\n                    ? 'bg-purple-600 text-white'\n                    : 'bg-white/10 text-white/60 hover:bg-white/20'\n                }`}\n              >\n                All Time\n              </button>\n            </div>\n          </div>\n\n          {/* Leaderboard Table */}\n          <div className=\"overflow-x-auto\">\n            <table className=\"w-full\">\n              <thead>\n                <tr className=\"border-b border-white/20\">\n                  <th className=\"text-left py-3 px-4 text-white/60 font-medium\">Rank</th>\n                  <th className=\"text-left py-3 px-4 text-white/60 font-medium\">User</th>\n                  <th className=\"text-center py-3 px-4 text-white/60 font-medium\">Posts</th>\n                  <th className=\"text-center py-3 px-4 text-white/60 font-medium\">Likes</th>\n                  <th className=\"text-center py-3 px-4 text-white/60 font-medium\">Comments</th>\n                  <th className=\"text-center py-3 px-4 text-white/60 font-medium\">Total Score</th>\n                </tr>\n              </thead>\n              <tbody>\n                {leaderboard.map((user) => (\n                  <tr\n                    key={user.id}\n                    className={`border-b border-white/10 hover:bg-white/5 transition-colors ${\n                      user.isCurrentUser ? 'bg-purple-500/20' : ''\n                    }`}\n                  >\n                    <td className=\"py-4 px-4\">\n                      <div className=\"flex items-center space-x-3\">\n                        <span className={`text-2xl ${getScoreColor(user.rank)}`}>\n                          {user.badge || '⭐'}\n                        </span>\n                        {getRankDisplay(user.rank)}\n                      </div>\n                    </td>\n                    <td className=\"py-4 px-4\">\n                      <div className=\"flex items-center space-x-3\">\n                        <img\n                          src={user.avatar}\n                          alt={user.firstName}\n                          className=\"w-10 h-10 rounded-full\"\n                        />\n                        <div>\n                          <div className=\"text-white font-medium flex items-center space-x-2\">\n                            <span>{user.firstName} {user.lastName}</span>\n                            {getRoleBadge(user.role)}\n                            {user.isCurrentUser && (\n                              <span className=\"text-purple-400 text-sm\">(You)</span>\n                            )}\n                          </div>\n                          <div className=\"text-white/60 text-sm\">@{user.username}</div>\n                        </div>\n                      </div>\n                    </td>\n                    <td className=\"py-4 px-4 text-center\">\n                      <span className=\"text-white font-semibold\">{user.posts}</span>\n                    </td>\n                    <td className=\"py-4 px-4 text-center\">\n                      <span className=\"text-white font-semibold\">{user.likes}</span>\n                    </td>\n                    <td className=\"py-4 px-4 text-center\">\n                      <span className=\"text-white font-semibold\">{user.comments}</span>\n                    </td>\n                    <td className=\"py-4 px-4 text-center\">\n                      <span className=\"text-white font-bold text-lg\">{user.totalScore}</span>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        </div>\n\n        {/* How It Works */}\n        <div className=\"mt-12\">\n          <div className=\"card\">\n            <h3 className=\"text-xl font-semibold text-white mb-6\">📊 How the Ranking System Works</h3>\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n              <div className=\"text-center\">\n                <div className=\"text-3xl mb-3\">📝</div>\n                <h4 className=\"font-semibold text-white mb-2\">Posts</h4>\n                <p className=\"text-white/70 text-sm\">\n                  Each post you create adds points to your score\n                </p>\n              </div>\n              <div className=\"text-center\">\n                <div className=\"text-3xl mb-3\">❤️</div>\n                <h4 className=\"font-semibold text-white mb-2\">Likes</h4>\n                <p className=\"text-white/70 text-sm\">\n                  Getting likes on your posts increases your ranking\n                </p>\n              </div>\n              <div className=\"text-center\">\n                <div className=\"text-3xl mb-3\">💬</div>\n                <h4 className=\"font-semibold text-white mb-2\">Comments</h4>\n                <p className=\"text-white/70 text-sm\">\n                  Engaging with others through comments boosts your score\n                </p>\n              </div>\n            </div>\n            <div className=\"mt-6 p-4 bg-purple-500/20 border border-purple-500/50 rounded-lg\">\n              <p className=\"text-white/80 text-center\">\n                <strong>🏆 Weekly Reset:</strong> Leaderboards reset every Sunday at midnight. \n                Top 3 users get special badges and Star Points!\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Leaderboard;\n","import React, { useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { useAuth } from '../contexts/AuthContext';\n\nconst Login: React.FC = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const { login } = useAuth();\n  const navigate = useNavigate();\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setError('');\n    setIsLoading(true);\n\n    try {\n      await login(email, password);\n      navigate('/feed');\n    } catch (err) {\n      setError('Invalid email or password. Please try again.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen flex items-center justify-center py-12 px-4 sm:px-6 lg:px-8\">\n      <div className=\"max-w-md w-full space-y-8\">\n        <div className=\"text-center\">\n          <div className=\"w-20 h-20 bg-gradient-to-r from-purple-500 to-blue-500 rounded-full flex items-center justify-center mx-auto mb-6 star-glow\">\n            <span className=\"text-3xl\">⭐</span>\n          </div>\n          <h2 className=\"text-3xl font-bold text-white\">\n            Welcome Back to Star App\n          </h2>\n          <p className=\"mt-2 text-white/60\">\n            Sign in to your account to continue\n          </p>\n        </div>\n\n        <div className=\"card\">\n          <form className=\"space-y-6\" onSubmit={handleSubmit}>\n            {error && (\n              <div className=\"bg-red-500/20 border border-red-500/50 text-red-200 px-4 py-3 rounded-lg\">\n                {error}\n              </div>\n            )}\n\n            <div>\n              <label htmlFor=\"email\" className=\"block text-sm font-medium text-white mb-2\">\n                Email Address\n              </label>\n              <input\n                id=\"email\"\n                name=\"email\"\n                type=\"email\"\n                autoComplete=\"email\"\n                required\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n                className=\"input-field\"\n                placeholder=\"Enter your email\"\n              />\n            </div>\n\n            <div>\n              <label htmlFor=\"password\" className=\"block text-sm font-medium text-white mb-2\">\n                Password\n              </label>\n              <input\n                id=\"password\"\n                name=\"password\"\n                type=\"password\"\n                autoComplete=\"current-password\"\n                required\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n                className=\"input-field\"\n                placeholder=\"Enter your password\"\n              />\n            </div>\n\n            <div className=\"flex items-center justify-between\">\n              <div className=\"flex items-center\">\n                <input\n                  id=\"remember-me\"\n                  name=\"remember-me\"\n                  type=\"checkbox\"\n                  className=\"h-4 w-4 text-purple-600 focus:ring-purple-500 border-gray-300 rounded\"\n                />\n                <label htmlFor=\"remember-me\" className=\"ml-2 block text-sm text-white/70\">\n                  Remember me\n                </label>\n              </div>\n\n              <div className=\"text-sm\">\n                <a href=\"#\" className=\"text-purple-400 hover:text-purple-300 transition-colors\">\n                  Forgot your password?\n                </a>\n              </div>\n            </div>\n\n            <div>\n              <button\n                type=\"submit\"\n                disabled={isLoading}\n                className=\"w-full btn-primary py-3 text-lg disabled:opacity-50 disabled:cursor-not-allowed\"\n              >\n                {isLoading ? (\n                  <div className=\"flex items-center justify-center\">\n                    <div className=\"animate-spin rounded-full h-5 w-5 border-b-2 border-white mr-2\"></div>\n                    Signing in...\n                  </div>\n                ) : (\n                  'Sign In'\n                )}\n              </button>\n            </div>\n\n            <div className=\"text-center\">\n              <p className=\"text-white/60\">\n                Don't have an account?{' '}\n                <Link to=\"/register\" className=\"text-purple-400 hover:text-purple-300 transition-colors font-medium\">\n                  Sign up here\n                </Link>\n              </p>\n            </div>\n          </form>\n        </div>\n\n        <div className=\"text-center\">\n          <Link to=\"/\" className=\"text-white/60 hover:text-white transition-colors\">\n            ← Back to Home\n          </Link>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Login;\n","import React, { useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { useAuth } from '../contexts/AuthContext';\n\nconst Register: React.FC = () => {\n  const [formData, setFormData] = useState({\n    username: '',\n    email: '',\n    password: '',\n    confirmPassword: '',\n    firstName: '',\n    lastName: '',\n    graduationYear: '',\n    school: '',\n    major: '',\n  });\n  const [error, setError] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const { register } = useAuth();\n  const navigate = useNavigate();\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setError('');\n\n    if (formData.password !== formData.confirmPassword) {\n      setError('Passwords do not match');\n      return;\n    }\n\n    if (formData.password.length < 6) {\n      setError('Password must be at least 6 characters long');\n      return;\n    }\n\n    setIsLoading(true);\n\n    try {\n      await register({\n        username: formData.username,\n        email: formData.email,\n        password: formData.password,\n        firstName: formData.firstName,\n        lastName: formData.lastName,\n        graduationYear: formData.graduationYear ? parseInt(formData.graduationYear) : undefined,\n        school: formData.school || undefined,\n        major: formData.major || undefined,\n      });\n      navigate('/feed');\n    } catch (err) {\n      setError('Registration failed. Please try again.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const currentYear = new Date().getFullYear();\n  const graduationYears = Array.from({ length: 20 }, (_, i) => currentYear - i);\n\n  return (\n    <div className=\"min-h-screen flex items-center justify-center py-12 px-4 sm:px-6 lg:px-8\">\n      <div className=\"max-w-md w-full space-y-8\">\n        <div className=\"text-center\">\n          <div className=\"w-20 h-20 bg-gradient-to-r from-purple-500 to-blue-500 rounded-full flex items-center justify-center mx-auto mb-6 star-glow\">\n            <span className=\"text-3xl\">⭐</span>\n          </div>\n          <h2 className=\"text-3xl font-bold text-white\">\n            Join Star App\n          </h2>\n          <p className=\"mt-2 text-white/60\">\n            Create your account and start connecting\n          </p>\n        </div>\n\n        <div className=\"card\">\n          <form className=\"space-y-6\" onSubmit={handleSubmit}>\n            {error && (\n              <div className=\"bg-red-500/20 border border-red-500/50 text-red-200 px-4 py-3 rounded-lg\">\n                {error}\n              </div>\n            )}\n\n            <div className=\"grid grid-cols-2 gap-4\">\n              <div>\n                <label htmlFor=\"firstName\" className=\"block text-sm font-medium text-white mb-2\">\n                  First Name\n                </label>\n                <input\n                  id=\"firstName\"\n                  name=\"firstName\"\n                  type=\"text\"\n                  required\n                  value={formData.firstName}\n                  onChange={handleChange}\n                  className=\"input-field\"\n                  placeholder=\"First name\"\n                />\n              </div>\n\n              <div>\n                <label htmlFor=\"lastName\" className=\"block text-sm font-medium text-white mb-2\">\n                  Last Name\n                </label>\n                <input\n                  id=\"lastName\"\n                  name=\"lastName\"\n                  type=\"text\"\n                  required\n                  value={formData.lastName}\n                  onChange={handleChange}\n                  className=\"input-field\"\n                  placeholder=\"Last name\"\n                />\n              </div>\n            </div>\n\n            <div>\n              <label htmlFor=\"username\" className=\"block text-sm font-medium text-white mb-2\">\n                Username\n              </label>\n              <input\n                id=\"username\"\n                name=\"username\"\n                type=\"text\"\n                required\n                value={formData.username}\n                onChange={handleChange}\n                className=\"input-field\"\n                placeholder=\"Choose a username\"\n              />\n            </div>\n\n            <div>\n              <label htmlFor=\"email\" className=\"block text-sm font-medium text-white mb-2\">\n                Email Address\n              </label>\n              <input\n                id=\"email\"\n                name=\"email\"\n                type=\"email\"\n                autoComplete=\"email\"\n                required\n                value={formData.email}\n                onChange={handleChange}\n                className=\"input-field\"\n                placeholder=\"Enter your email\"\n              />\n            </div>\n\n            <div>\n              <label htmlFor=\"password\" className=\"block text-sm font-medium text-white mb-2\">\n                Password\n              </label>\n              <input\n                id=\"password\"\n                name=\"password\"\n                type=\"password\"\n                autoComplete=\"new-password\"\n                required\n                value={formData.password}\n                onChange={handleChange}\n                className=\"input-field\"\n                placeholder=\"Create a password\"\n              />\n            </div>\n\n            <div>\n              <label htmlFor=\"confirmPassword\" className=\"block text-sm font-medium text-white mb-2\">\n                Confirm Password\n              </label>\n              <input\n                id=\"confirmPassword\"\n                name=\"confirmPassword\"\n                type=\"password\"\n                autoComplete=\"new-password\"\n                required\n                value={formData.confirmPassword}\n                onChange={handleChange}\n                className=\"input-field\"\n                placeholder=\"Confirm your password\"\n              />\n            </div>\n\n            {/* Alumni Information */}\n            <div className=\"border-t border-white/20 pt-6\">\n              <h3 className=\"text-lg font-medium text-white mb-4\">\n                🎓 Alumni Information (Optional)\n              </h3>\n              <p className=\"text-sm text-white/60 mb-4\">\n                Fill this out to access the exclusive Alumni Room\n              </p>\n\n              <div className=\"grid grid-cols-2 gap-4\">\n                <div>\n                  <label htmlFor=\"graduationYear\" className=\"block text-sm font-medium text-white mb-2\">\n                    Graduation Year\n                  </label>\n                  <select\n                    id=\"graduationYear\"\n                    name=\"graduationYear\"\n                    value={formData.graduationYear}\n                    onChange={handleChange}\n                    className=\"input-field\"\n                  >\n                    <option value=\"\">Select Year</option>\n                    {graduationYears.map(year => (\n                      <option key={year} value={year}>{year}</option>\n                    ))}\n                  </select>\n                </div>\n\n                <div>\n                  <label htmlFor=\"school\" className=\"block text-sm font-medium text-white mb-2\">\n                    School/University\n                  </label>\n                  <input\n                    id=\"school\"\n                    name=\"school\"\n                    type=\"text\"\n                    value={formData.school}\n                    onChange={handleChange}\n                    className=\"input-field\"\n                    placeholder=\"School name\"\n                  />\n                </div>\n              </div>\n\n              <div className=\"mt-4\">\n                <label htmlFor=\"major\" className=\"block text-sm font-medium text-white mb-2\">\n                  Major/Field of Study\n                </label>\n                <input\n                  id=\"major\"\n                  name=\"major\"\n                  type=\"text\"\n                  value={formData.major}\n                  onChange={handleChange}\n                  className=\"input-field\"\n                  placeholder=\"Your major or field\"\n                />\n              </div>\n            </div>\n\n            <div>\n              <button\n                type=\"submit\"\n                disabled={isLoading}\n                className=\"w-full btn-primary py-3 text-lg disabled:opacity-50 disabled:cursor-not-allowed\"\n              >\n                {isLoading ? (\n                  <div className=\"flex items-center justify-center\">\n                    <div className=\"animate-spin rounded-full h-5 w-5 border-b-2 border-white mr-2\"></div>\n                    Creating Account...\n                  </div>\n                ) : (\n                  'Create Account'\n                )}\n              </button>\n            </div>\n\n            <div className=\"text-center\">\n              <p className=\"text-white/60\">\n                Already have an account?{' '}\n                <Link to=\"/login\" className=\"text-purple-400 hover:text-purple-300 transition-colors font-medium\">\n                  Sign in here\n                </Link>\n              </p>\n            </div>\n          </form>\n        </div>\n\n        <div className=\"text-center\">\n          <Link to=\"/\" className=\"text-white/60 hover:text-white transition-colors\">\n            ← Back to Home\n          </Link>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Register;\n","import React from 'react';\nimport { BrowserRouter as Router, Routes, Route, Navigate, useParams, useNavigate } from 'react-router-dom';\nimport Navbar from './components/Navbar';\nimport Home from './components/Home';\nimport Profile from './components/Profile';\nimport Feed from './components/Feed';\nimport ChatRooms from './components/ChatRooms';\nimport AlumniRoom from './components/AlumniRoom';\nimport VideoCall from './components/VideoCall';\nimport Marketplace from './components/Marketplace';\nimport Leaderboard from './components/Leaderboard';\nimport Login from './components/Login';\nimport Register from './components/Register';\nimport { AuthProvider, useAuth } from './contexts/AuthContext';\nimport { ChatProvider } from './contexts/ChatContext';\nimport { ProfileProvider } from './contexts/ProfileContext';\nimport { NotificationProvider } from './contexts/NotificationContext';\nimport './App.css';\n\nconst App: React.FC = () => {\n  return (\n    <AuthProvider>\n      <ChatProvider>\n        <ProfileProvider>\n          <NotificationProvider>\n            <Router>\n              <div className=\"App bg-gradient-to-br from-purple-900 via-blue-900 to-indigo-900 min-h-screen\">\n                <Navbar />\n                <Routes>\n                  <Route path=\"/\" element={<Home />} />\n                  <Route path=\"/login\" element={<Login />} />\n                  <Route path=\"/register\" element={<Register />} />\n                  <Route path=\"/profile\" element={<ProtectedRoute><Profile /></ProtectedRoute>} />\n                  <Route path=\"/feed\" element={<ProtectedRoute><Feed /></ProtectedRoute>} />\n                  <Route path=\"/chatrooms\" element={<ProtectedRoute><ChatRooms /></ProtectedRoute>} />\n                  <Route path=\"/alumni-room\" element={<ProtectedRoute><AlumniRoom /></ProtectedRoute>} />\n                  <Route path=\"/marketplace\" element={<ProtectedRoute><Marketplace /></ProtectedRoute>} />\n                  <Route path=\"/leaderboard\" element={<ProtectedRoute><Leaderboard /></ProtectedRoute>} />\n                  <Route path=\"/video-call/:roomId\" element={<ProtectedRoute><VideoCallWithParams /></ProtectedRoute>} />\n                  <Route path=\"/video-call\" element={<ProtectedRoute><VideoCallDefault /></ProtectedRoute>} />\n                </Routes>\n              </div>\n            </Router>\n          </NotificationProvider>\n        </ProfileProvider>\n      </ChatProvider>\n    </AuthProvider>\n  );\n};\n\nconst VideoCallWithParams: React.FC = () => {\n  const { roomId } = useParams<{ roomId: string }>();\n  const { user } = useAuth();\n  const navigate = useNavigate();\n  \n  return (\n    <VideoCall \n      roomId={roomId} \n      userName={user?.firstName} \n      onLeaveRoom={() => navigate('/')} \n    />\n  );\n};\n\nconst VideoCallDefault: React.FC = () => {\n  const { user } = useAuth();\n  const navigate = useNavigate();\n  \n  return (\n    <VideoCall \n      userName={user?.firstName} \n      onLeaveRoom={() => navigate('/')} \n    />\n  );\n};\n\nconst ProtectedRoute: React.FC<{ children: React.ReactNode }> = ({ children }) => {\n  const { user, loading } = useAuth();\n  \n  if (loading) {\n    return (\n      <div className=\"flex items-center justify-center min-h-screen\">\n        <div className=\"animate-spin rounded-full h-32 w-32 border-b-2 border-white\"></div>\n      </div>\n    );\n  }\n  \n  return user ? <>{children}</> : <Navigate to=\"/login\" />;\n};\n\nexport default App;\n","import React from 'react'\nimport ReactDOM from 'react-dom/client'\nimport App from './App.tsx'\nimport './index.css'\n\nReactDOM.createRoot(document.getElementById('root')!).render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n)\n"],"file":"assets/index-221975c5.js"}